<!--
  ~ Copyright 2011 Red Hat inc. and third party contributors as noted
  ~ by the author tags.
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project name="Ceylon runtime module" default="dist" basedir=".">

    <property file="../user-build.properties"/>
    <property file="../common-build.properties"/>
    <property file="../lib/build.properties"/>
    <property file="build.properties"/>

    <property name="dist.dir" value="${basedir}/dist"/>

    <!-- The Java source files for the runtime -->
    <property name="runtime-api.src" location="${basedir}/api/src/main/java"/>
    <property name="runtime-impl.src" location="${basedir}/impl/src/main/java"/>
    <property name="runtime-spi.src" location="${basedir}/spi/src/main/java"/>
    <property name="runtime-bootstrap.src" location="${basedir}/bootstrap/src/main/java"/>

    <property name="runtime-test.src" location="${basedir}/testsuite/src/test/java"/>

    <property name="cli.build.test.classes" location="${basedir}/../cli/build/classes"/>

    <tstamp/>

    <!-- ceylon.runtime -->
    <property name="module.runtime.dir" value="ceylon/runtime"/>
    <property name="module.runtime.name" value="ceylon.runtime"/>

    <!-- module archives -->
    <property name="ceylon.runtime.src"
              value="${ceylon.runtime.dir}/${module.runtime.name}-${module.ceylon.runtime.version}.src"/>
    <property name="ceylon.runtime.repo" value="${ceylon.repo.dir}/${ceylon.runtime.dir}"/>
    <property name="ceylon.runtime.dist" value="${build.dist.repo}/${ceylon.runtime.dir}"/>

    <path id="compiler.classpath">
        <pathelement path="${ceylon.common.lib}"/>
        <pathelement path="${ceylon.cli.lib}"/>
        <pathelement path="${ceylon.model.lib}"/>
        <pathelement path="${ceylon.language.lib}"/>
        <pathelement path="${ceylon.module-resolver.lib}"/>
        <pathelement path="${ceylon.tool.provider.lib}"/>
        <pathelement path="${jboss-modules.lib}"/>
    </path>

    <path id="test.build.classpath">
        <path refid="compiler.classpath"/>
        <pathelement path="${build.classes}"/>
        <pathelement path="${cli.build.test.classes}"/>
        <pathelement path="${shrinkwrap-api.lib}"/>
        <pathelement path="${junit.lib}"/>
    </path>

    <path id="test.run.classpath">
        <path refid="test.build.classpath"/>
        <pathelement path="${build.test}"/>
        <pathelement path="${build.dist}"/>
        <pathelement path="${ceylon.classfile.lib}"/>
        <pathelement path="${ceylon.compiler.lib}" />
        <pathelement path="${ceylon.typechecker.lib}" />
        <pathelement path="${ceylon.tools.lib}" />
        <pathelement path="${antlr.runtime.lib}"/>
        <pathelement path="${txtmark.lib}"/>
        <pathelement path="${shrinkwrap-impl-base.lib}"/>
        <pathelement path="${shrinkwrap-spi.lib}"/>
        <pathelement path="${hamcrest.lib}"/>
    </path>

    <!-- ################################################################## -->
    <!-- constant to declare a file binary for checksumsum -->
    <property name="checksum.binary-prefix" value=" *"/>
    <!-- Helper target, used to create a sha1 checksum file  -->
    <!-- Requires 'file' as a parameter. -->
    <target name="sha1sum">
        <fail unless="file"/>
        <fail if="filename"/>
        <fail if="value"/>
        <basename file="${file}" property="filename"/>
        <checksum file="${file}" property="value" algorithm="sha1"/>
        <echo file="${file}.sha1" message="${value}"/>
    </target>

    <!-- Rule to clean everything up -->
    <target name="clean" description="Clean up everything">
        <delete dir="${build.dir}"/>
    </target>

    <target name="dist"
            depends="build"
            description="Create Ceylon runtime distribution">
        <zip destfile="${build.dist.repo}/${ceylon.runtime.src}">
            <fileset dir="${runtime-api.src}">
                <include name="**/*.java"/>
            </fileset>
            <fileset dir="${runtime-impl.src}">
                <include name="**/*.java"/>
            </fileset>
            <fileset dir="${runtime-spi.src}">
                <include name="**/*.java"/>
            </fileset>
            <fileset dir="${runtime-bootstrap.src}">
                <include name="**/*.java"/>
            </fileset>
        </zip>
        <antcall target="sha1sum">
            <param name="file" value="${build.dist.repo}/${ceylon.runtime.src}"/>
        </antcall>
    </target>

    <target name="dist-for-tests" description="Copy jars in the repo used by tests">
        <copy file="${ceylon.common.lib}" tofile="${build.dist.repo}/${ceylon.common.jar}"/>
        <copy file="${ceylon.model.lib}" tofile="${build.dist.repo}/${ceylon.model.jar}"/>
        <copy file="${ceylon.typechecker.lib}" tofile="${build.dist.repo}/${ceylon.typechecker.jar}"/>
        <copy file="${ceylon.compiler.lib}" tofile="${build.dist.repo}/${ceylon.compiler.java.jar}"/>
        <copy file="${ceylon.language.lib}" tofile="${build.dist.repo}/${ceylon.language.car}"/>
        <copy file="${ceylon.module-resolver.lib}" tofile="${build.dist.repo}/${ceylon.module-resolver.jar}"/>
        <copy todir="${build.dist}">
            <fileset dir="./testsuite/src/test/resources/"/>
        </copy>
    </target>
    
    <target name="publish" depends="clean.repo,init.repo,dist,publish-internal">
    </target>

    <target name="publish-internal" depends="init.repo">
        <copy todir="${ceylon.repo.dir}" overwrite="true">
            <fileset dir="${build.dist.repo}"/>
        </copy>
        <copy todir="${ceylon.bin.dir}" overwrite="true">
            <fileset dir="${build.bin}"/>
        </copy>
    </target>

    <!-- Repository targets -->
    <target name="init.repo"
            description="Init local ceylon repository">
        <mkdir dir="${ceylon.runtime.repo}"/>
    </target>

    <target name="clean.repo"
            description="Clean local ceylon repository">
        <delete file="${ceylon.runtime.lib}"/>
        <delete file="${ceylon.runtime.lib}.sha1"/>
        <delete file="${ceylon.repo.dir}/${ceylon.runtime.src}" />
        <delete file="${ceylon.repo.dir}/${ceylon.runtime.src}.sha1" />
    </target>

    <target name="bundle-proxy">
        <basename file="${archivePath}" property="archiveFileName"/>
        <property name="proxy-project" value="${eclipse.project.path}/required-bundle-proxies/${archiveFileName}"/>
        <mkdir dir="${proxy-project}"/>
        <delete failonerror="false" dir="${proxy-project}/META-INF"/>
        <copy toDir="${proxy-project}" overwrite="true">
            <zipfileset src="${archivePath}" includes="META-INF/**"/>
            <fileset file="${archivePath}"/>
        </copy>
        <manifest file="${proxy-project}/META-INF/MANIFEST.MF" mode="update">
            <attribute name="Bundle-Classpath" value="${archiveFileName}"/>
        </manifest>
        <echo file="${proxy-project}/.project"><![CDATA[<projectDescription>
    <name>${archiveFileName}</name>
    <comment></comment>
    <projects>
    </projects>
    <buildSpec>
        <buildCommand>
            <name>org.eclipse.jdt.core.javabuilder</name>
            <arguments>
            </arguments>
        </buildCommand>
        <buildCommand>
            <name>org.eclipse.pde.ManifestBuilder</name>
            <arguments>
            </arguments>
        </buildCommand>
        <buildCommand>
            <name>org.eclipse.pde.SchemaBuilder</name>
            <arguments>
            </arguments>
        </buildCommand>
    </buildSpec>
    <natures>
        <nature>org.eclipse.pde.PluginNature</nature>
        <nature>org.eclipse.jdt.core.javanature</nature>
    </natures>
    <linkedResources>
        <link>
            <name>project</name>
            <type>2</type>
            <locationURI>PARENT-3-PROJECT_LOC/ceylon/runtime</locationURI>
        </link>
    </linkedResources>
</projectDescription>]]></echo>     
        <echo file="${proxy-project}/.classpath"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<classpath>
    <classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER"/>
    <classpathentry kind="con" path="org.eclipse.pde.core.requiredPlugins"/>
    <classpathentry exported="true" kind="lib" path="${archiveFileName}" sourcepath="project"/>
    <classpathentry kind="output" path="bin"/>
</classpath>]]></echo>     
        <echo file="${proxy-project}/.gitignore"><![CDATA[/META-INF
/${archiveFileName}
/.classpath
/.project
/.gitignore
/bin/]]></echo>     
    </target>
        
	<target name="ide-quick-internal">
        <antcall target="bundle-proxy">
            <param name="archivePath" value="${ceylon.repo.dir}/${ceylon.runtime.jar}"/>
        </antcall>
    </target>

    <!-- Tasks related to building the runtime -->
    <!-- Rule to build runtime classes from their Java sources -->
    <target name="runtime.classes">
        <mkdir dir="${build.classes}"/>
        <javac debug="true"
               encoding="UTF-8"
               srcdir="${runtime-spi.src}"
               destdir="${build.classes}"
               classpathref="compiler.classpath"
               target="${compile.java.target}"
               source="${compile.java.source}"
               bootclasspath="${compile.java.bootclasspath}"
               includeantruntime="false"/>
        <javac debug="true"
               encoding="UTF-8"
               srcdir="${runtime-api.src}"
               destdir="${build.classes}"
               classpathref="compiler.classpath"
               target="${compile.java.target}"
               source="${compile.java.source}"
               bootclasspath="${compile.java.bootclasspath}"
               includeantruntime="false"/>
        <javac debug="true"
               encoding="UTF-8"
               srcdir="${runtime-impl.src}"
               destdir="${build.classes}"
               classpathref="compiler.classpath"
               target="${compile.java.target}"
               source="${compile.java.source}"
               bootclasspath="${compile.java.bootclasspath}"
               includeantruntime="false"/>
        <javac debug="true"
               encoding="UTF-8"
               srcdir="${runtime-bootstrap.src}"
               destdir="${build.classes}"
               classpathref="compiler.classpath"
               target="${compile.java.target}"
               source="${compile.java.source}"
               bootclasspath="${compile.java.bootclasspath}"
               includeantruntime="false"/>
        <!-- Include META-INF -->
        <copy todir="${build.classes}">
            <fileset dir="${runtime-bootstrap.src}" excludes="**/*.java"/>
        </copy>
    </target>

    <!-- Rule to build runtime jar -->
    <target name="runtime.jar" depends="runtime.classes">
        <mkdir dir="${build.dist.repo}/${ceylon.runtime.dir}"/>
        <mkdir dir="${build.bin}"/>
        <tstamp>
            <format property="qualifier" timezone="GMT" pattern="yyyyMMdd-HHmm"/>
        </tstamp>        
        <jar destfile="${build.dist.repo}/${ceylon.runtime.jar}">
            <fileset dir="${build.classes}">
            </fileset>
            <manifest>
                <attribute name="Bundle-SymbolicName" value="ceylon.runtime"/>
                <attribute name="Bundle-Version" value="${module.ceylon.runtime.osgi.version}-${qualifier}"/>
            </manifest>
        </jar>
        <antcall target="sha1sum">
            <param name="file" value="${build.dist.repo}/${ceylon.runtime.jar}" />
        </antcall>
    </target>

    <!-- Rule to compile and test -->
    <target name="build" depends="runtime.jar">
        <mkdir dir="${build.bin}" />
        <copy todir="${build.bin}">
            <fileset dir="${basedir}/bin">
            </fileset>
            <filterset>
                <filter token="ceylon-version" value="${ceylon.version}"/>
            </filterset>
        </copy>
    </target>

    <target name="compile.tests">
        <mkdir dir="${build.test}"/>
        <javac debug="true"
               encoding="UTF-8"
               srcdir="${runtime-test.src}"
               destdir="${build.test}"
               classpathref="test.build.classpath"
               target="${compile.java.target}"
               source="${compile.java.source}"
               bootclasspath="${compile.java.bootclasspath}"
               includeantruntime="false"/>
    </target>

    <target name="test" depends="dist,test-quick" description="Runs the JUnit tests">
    </target>

    <target name="test-quick" depends="compile.tests,dist-for-tests" description="Runs the JUnit tests">
        <mkdir dir="${test.reports}"/>
        <junit printsummary="yes" haltonfailure="no" failureproperty="test.failed" dir="${basedir}">
            <classpath refid="test.run.classpath"/>
            <syspropertyset>
                <propertyref prefix="ceylon.tests." />
            </syspropertyset>

            <formatter type="xml"/>

            <test
                name="org.jboss.ceylon.test.modules.AllRuntimeTests"
                fork="yes"
                todir="${test.reports}" />
        </junit>
        <junitreport todir="${test.reports}">
            <fileset dir="${test.reports}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${test.reports}"/>
        </junitreport>

        <fail message="Test failure detected, check test results." if="test.failed" />
    </target>
</project>
