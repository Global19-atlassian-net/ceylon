package org.eclipse.ceylon.compiler.java.test.structure.mcr;

class ClassDefaultMemberClassWithSequencedParams implements .org.eclipse.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    ClassDefaultMemberClassWithSequencedParams() {
    }
    
    public .org.eclipse.ceylon.compiler.java.test.structure.mcr.ClassDefaultMemberClassWithSequencedParams.Member Member$new$(final .ceylon.language.Sequential<? extends .ceylon.language.Integer> i) {
        return new Member(i);
    }
    
    public .org.eclipse.ceylon.compiler.java.test.structure.mcr.ClassDefaultMemberClassWithSequencedParams.Member Member$new$() {
        return (
            let
            {
                .ceylon.language.Sequential<? extends .ceylon.language.Integer> $ceylontmp$i$0 = (.ceylon.language.Sequential).ceylon.language.empty_.get_();
            }
            returning new Member($ceylontmp$i$0);
        );
    }
    
    public class Member implements .org.eclipse.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
        
        protected Member(final .ceylon.language.Sequential<? extends .ceylon.language.Integer> i) {
        }
        
        @.java.lang.Override
        public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
            return .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.org.eclipse.ceylon.compiler.java.test.structure.mcr.ClassDefaultMemberClassWithSequencedParams.$TypeDescriptor$, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.structure.mcr.ClassDefaultMemberClassWithSequencedParams.Member.class));
        }
    }
    
    public final .org.eclipse.ceylon.compiler.java.test.structure.mcr.ClassDefaultMemberClassWithSequencedParams.Member m1() {
        (
            let
            {
                .ceylon.language.Sequential<? extends .ceylon.language.Integer> arg$1$0 = (.ceylon.language.Sequence<? extends .ceylon.language.Integer>).ceylon.language.Tuple.instance(.ceylon.language.Integer.$TypeDescriptor$, new .java.lang.Object[]{
                        .ceylon.language.Integer.instance(1L),
                        .ceylon.language.Integer.instance(2L),
                        .ceylon.language.Integer.instance(3L)});
            }
            returning Member$new$(arg$1$0);
        );
        (
            let
            {
                .ceylon.language.Sequential arg$2$0 = (.ceylon.language.Sequential).ceylon.language.empty_.get_();
            }
            returning Member$new$(arg$2$0);
        );
        Member$new$();
        return Member$new$((.ceylon.language.Sequence).org.eclipse.ceylon.compiler.java.Util.sequentialCopy(.ceylon.language.Integer.$TypeDescriptor$, new .java.lang.Object[]{
                .ceylon.language.Integer.instance(1L),
                .ceylon.language.Integer.instance(2L),
                .ceylon.language.Integer.instance(3L)}, .ceylon.language.empty_.get_()));
    }
    
    @.java.lang.Override
    public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .org.eclipse.ceylon.compiler.java.test.structure.mcr.ClassDefaultMemberClassWithSequencedParams.$TypeDescriptor$;
    }
    public static final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.structure.mcr.ClassDefaultMemberClassWithSequencedParams.class);
}
class ClassDefaultMemberClassWithSequencedParams_sub extends .org.eclipse.ceylon.compiler.java.test.structure.mcr.ClassDefaultMemberClassWithSequencedParams {
    
    ClassDefaultMemberClassWithSequencedParams_sub() {
        super();
    }
    
    @.java.lang.Override
    public .org.eclipse.ceylon.compiler.java.test.structure.mcr.ClassDefaultMemberClassWithSequencedParams_sub.Member Member$new$(final .ceylon.language.Sequential<? extends .ceylon.language.Integer> i) {
        return new Member(i);
    }
    
    @.java.lang.Override
    public .org.eclipse.ceylon.compiler.java.test.structure.mcr.ClassDefaultMemberClassWithSequencedParams_sub.Member Member$new$() {
        return (
            let
            {
                .ceylon.language.Sequential<? extends .ceylon.language.Integer> $ceylontmp$i$3 = (.ceylon.language.Sequential).ceylon.language.empty_.get_();
            }
            returning new Member($ceylontmp$i$3);
        );
    }
    
    public class Member extends .org.eclipse.ceylon.compiler.java.test.structure.mcr.ClassDefaultMemberClassWithSequencedParams.Member {
        
        protected Member(final .ceylon.language.Sequential<? extends .ceylon.language.Integer> i) {
            super(i);
        }
        
        @.java.lang.Override
        public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
            return .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.org.eclipse.ceylon.compiler.java.test.structure.mcr.ClassDefaultMemberClassWithSequencedParams_sub.$TypeDescriptor$, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.structure.mcr.ClassDefaultMemberClassWithSequencedParams_sub.Member.class));
        }
    }
    
    public final .org.eclipse.ceylon.compiler.java.test.structure.mcr.ClassDefaultMemberClassWithSequencedParams_sub.Member m2() {
        (
            let
            {
                .ceylon.language.Sequential<? extends .ceylon.language.Integer> arg$4$0 = (.ceylon.language.Sequence<? extends .ceylon.language.Integer>).ceylon.language.Tuple.instance(.ceylon.language.Integer.$TypeDescriptor$, new .java.lang.Object[]{
                        .ceylon.language.Integer.instance(2L),
                        .ceylon.language.Integer.instance(3L),
                        .ceylon.language.Integer.instance(4L)});
            }
            returning Member$new$(arg$4$0);
        );
        (
            let
            {
                .ceylon.language.Sequential arg$5$0 = (.ceylon.language.Sequential).ceylon.language.empty_.get_();
            }
            returning Member$new$(arg$5$0);
        );
        Member$new$();
        return Member$new$((.ceylon.language.Sequence).org.eclipse.ceylon.compiler.java.Util.sequentialCopy(.ceylon.language.Integer.$TypeDescriptor$, new .java.lang.Object[]{
                .ceylon.language.Integer.instance(2L),
                .ceylon.language.Integer.instance(3L),
                .ceylon.language.Integer.instance(4L)}, .ceylon.language.empty_.get_()));
    }
    
    @.java.lang.Override
    public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .org.eclipse.ceylon.compiler.java.test.structure.mcr.ClassDefaultMemberClassWithSequencedParams_sub.$TypeDescriptor$;
    }
    public static final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.structure.mcr.ClassDefaultMemberClassWithSequencedParams_sub.class);
}