package org.eclipse.ceylon.compiler.java.test.issues.bug06xx;

@.org.eclipse.ceylon.compiler.java.metadata.Ceylon(
        major = 8,
        minor = 1)
@.org.eclipse.ceylon.compiler.java.metadata.Method
public final class first_ {
    
    private first_() {
    }
    
    @.ceylon.language.SharedAnnotation$annotation$
    @.org.eclipse.ceylon.common.Nullable
    @.org.eclipse.ceylon.compiler.java.metadata.TypeInfo(
            value = "Absent|Value",
            erased = true)
    @.org.eclipse.ceylon.compiler.java.metadata.TypeParameters({
            @.org.eclipse.ceylon.compiler.java.metadata.TypeParameter(
                    value = "Value",
                    variance = .org.eclipse.ceylon.compiler.java.metadata.Variance.NONE,
                    satisfies = {},
                    caseTypes = {}),
            @.org.eclipse.ceylon.compiler.java.metadata.TypeParameter(
                    value = "Absent",
                    variance = .org.eclipse.ceylon.compiler.java.metadata.Variance.NONE,
                    satisfies = {"ceylon.language::Null"},
                    caseTypes = {})})
    public static <Value, Absent>.java.lang.Object first(@.org.eclipse.ceylon.compiler.java.metadata.Ignore
    final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$Value, @.org.eclipse.ceylon.compiler.java.metadata.Ignore
    final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$Absent, @.org.eclipse.ceylon.compiler.java.metadata.Name("values")
    @.org.eclipse.ceylon.common.NonNull
    @.org.eclipse.ceylon.compiler.java.metadata.TypeInfo("ceylon.language::Iterable<Value,Absent>")
    final .ceylon.language.Iterable<? extends Value, ? extends Absent> values) {
        return .ceylon.language.nothing_.get_();
    }
}
final class bug601_ {
    
    private bug601_() {
    }
    
    static void bug601() {
        (
            let
            {
                .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor arg$0$reified$0 = .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Iterable.class, .ceylon.language.String.$TypeDescriptor$, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType);
                .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor arg$0$reified$1 = .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType;
                .ceylon.language.Iterable arg$0$0 = new .org.eclipse.ceylon.compiler.java.language.LazyIterable<.ceylon.language.Iterable<? extends .ceylon.language.String, ? extends .java.lang.Object>, .java.lang.Object>(.org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Iterable.class, .ceylon.language.String.$TypeDescriptor$, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType), .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType, 2, false){
                    
                    @.java.lang.Override
                    protected final .java.lang.Object $evaluate$(int $index$) {
                        switch ($index$) {
                        case 0: 
                            return new .org.eclipse.ceylon.compiler.java.language.ConstantIterable<.ceylon.language.String, .java.lang.Object>(.ceylon.language.String.$TypeDescriptor$, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType, null, .ceylon.language.String.instance("hello"), .ceylon.language.String.instance("world"));
                        
                        case 1: 
                            return new .org.eclipse.ceylon.compiler.java.language.ConstantIterable<.ceylon.language.String, .java.lang.Object>(.ceylon.language.String.$TypeDescriptor$, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType, null, .ceylon.language.String.instance(""));
                        
                        default: 
                            return null;
                        
                        }
                    }
                };
            }
            returning .org.eclipse.ceylon.compiler.java.test.issues.bug06xx.first_.<.ceylon.language.Iterable<? extends .ceylon.language.String, ? extends .java.lang.Object>, .java.lang.Object>first(arg$0$reified$0, arg$0$reified$1, arg$0$0);
        );
        (
            let
            {
                .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor arg$1$reified$0 = .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Iterable.class, .ceylon.language.String.$TypeDescriptor$, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType);
                .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor arg$1$reified$1 = .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType;
                .ceylon.language.Iterable arg$1$0 = new .org.eclipse.ceylon.compiler.java.language.LazyIterable<.ceylon.language.Iterable<? extends .ceylon.language.String, ? extends .java.lang.Object>, .java.lang.Object>(.org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Iterable.class, .ceylon.language.String.$TypeDescriptor$, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType), .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType, 2, false){
                    
                    @.java.lang.Override
                    protected final .java.lang.Object $evaluate$(int $index$) {
                        switch ($index$) {
                        case 0: 
                            return new .org.eclipse.ceylon.compiler.java.language.ConstantIterable<.ceylon.language.String, .java.lang.Object>(.ceylon.language.String.$TypeDescriptor$, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType, .ceylon.language.String.split("hello world"));
                        
                        case 1: 
                            return new .org.eclipse.ceylon.compiler.java.language.ConstantIterable<.ceylon.language.String, .java.lang.Object>(.ceylon.language.String.$TypeDescriptor$, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType, null, .ceylon.language.String.instance(""));
                        
                        default: 
                            return null;
                        
                        }
                    }
                };
            }
            returning .org.eclipse.ceylon.compiler.java.test.issues.bug06xx.first_.<.ceylon.language.Iterable<? extends .ceylon.language.String, ? extends .java.lang.Object>, .java.lang.Object>first(arg$1$reified$0, arg$1$reified$1, arg$1$0);
        );
        (
            let
            {
                .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor arg$2$reified$0 = .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Iterable.class, .ceylon.language.String.$TypeDescriptor$, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType);
                .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor arg$2$reified$1 = .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType;
                .ceylon.language.Iterable arg$2$0 = new .org.eclipse.ceylon.compiler.java.language.LazyIterable<.ceylon.language.Iterable<? extends .ceylon.language.String, ? extends .java.lang.Object>, .java.lang.Object>(.org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Iterable.class, .ceylon.language.String.$TypeDescriptor$, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType), .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType, 2, false){
                    
                    @.java.lang.Override
                    protected final .java.lang.Object $evaluate$(int $index$) {
                        switch ($index$) {
                        case 0: 
                            return new .org.eclipse.ceylon.compiler.java.language.ConstantIterable<.ceylon.language.String, .java.lang.Object>(.ceylon.language.String.$TypeDescriptor$, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType, new .org.eclipse.ceylon.compiler.java.language.AbstractIterable<.ceylon.language.String, .java.lang.Object>(.ceylon.language.String.$TypeDescriptor$, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType){
                                
                                public final .ceylon.language.Iterator<.ceylon.language.String> iterator() {
                                    return new .org.eclipse.ceylon.compiler.java.language.AbstractIterator<.ceylon.language.String>(.ceylon.language.String.$TypeDescriptor$){
                                        {
                                            $iterator$0 = .ceylon.language.String.split("hello world").iterator();
                                        }
                                        private final .ceylon.language.Iterator<? extends .ceylon.language.String> $iterator$0;
                                        private .ceylon.language.String str;
                                        private boolean str$exhausted$;
                                        
                                        private final boolean str() {
                                            final .java.lang.Object $ceylontmp$item$3 = $iterator$0.next();
                                            str$exhausted$ = $ceylontmp$item$3 == .ceylon.language.finished_.get_();
                                            if (str$exhausted$) {
                                                return false;
                                            } else {
                                                str = (.ceylon.language.String)$ceylontmp$item$3;
                                                return true;
                                            }
                                        }
                                        
                                        public final .java.lang.Object next() {
                                            if (this.str()) {
                                                final .ceylon.language.String str = this.str;
                                                return str;
                                            } else return .ceylon.language.finished_.get_();
                                        }
                                    };
                                }
                            });
                        
                        case 1: 
                            return new .org.eclipse.ceylon.compiler.java.language.ConstantIterable<.ceylon.language.String, .java.lang.Object>(.ceylon.language.String.$TypeDescriptor$, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType, null, .ceylon.language.String.instance(""));
                        
                        default: 
                            return null;
                        
                        }
                    }
                };
            }
            returning .org.eclipse.ceylon.compiler.java.test.issues.bug06xx.first_.<.ceylon.language.Iterable<? extends .ceylon.language.String, ? extends .java.lang.Object>, .java.lang.Object>first(arg$2$reified$0, arg$2$reified$1, arg$2$0);
        );
    }
}