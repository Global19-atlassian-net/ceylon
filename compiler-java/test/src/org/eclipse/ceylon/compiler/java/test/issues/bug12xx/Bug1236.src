package org.eclipse.ceylon.compiler.java.test.issues.bug12xx;

public class Bug1236<P> implements .org.eclipse.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    public Bug1236(final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$P, final .ceylon.language.Callable<? extends .ceylon.language.String> parent) {
        (
            let
            {
                .java.lang.String $ceylontmp$a$0 = .org.eclipse.ceylon.compiler.java.test.issues.bug12xx.Bug1236.<P>$default$a($reified$P, parent);
                <P>this($reified$P, parent, $ceylontmp$a$0);
            }
            returning null;
        );
    }
    
    protected Bug1236(final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$P) {
        super();
        this.$reified$P = $reified$P;
        this.parent = null;
    }
    
    public Bug1236(final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$P, final .ceylon.language.Callable<? extends .ceylon.language.String> parent, final .java.lang.String a) {
        this.$reified$P = $reified$P;
        this.parent = parent;
    }
    private final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$P;
    private final .ceylon.language.Callable<? extends .ceylon.language.String> parent;
    
    private final .java.lang.String parent$priv$(final P p) {
        return parent.$call$(p).toString();
    }
    
    public static <P>.java.lang.String $default$a(final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$P, final .ceylon.language.Callable<? extends .ceylon.language.String> parent) {
        return "";
    }
    
    private final void f$priv$(final P p) {
        parent$priv$(p);
    }
    
    @.java.lang.Override
    public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.issues.bug12xx.Bug1236.class, $reified$P);
    }
}