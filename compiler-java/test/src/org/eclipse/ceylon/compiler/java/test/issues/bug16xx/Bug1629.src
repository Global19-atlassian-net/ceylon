package org.eclipse.ceylon.compiler.java.test.issues.bug16xx;

class Bug1629 implements .org.eclipse.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    protected Bug1629() {
        super();
        this.captured0$1 = null;
        this.captured1$3 = 0;
        this.captured2$5 = null;
        this.captured12$11 = null;
        this.captured11$9 = 0;
        this.captured10$7 = null;
        this.s$17 = null;
        this.x$15 = null;
        this.o$13 = null;
    }
    
    Bug1629(final .java.lang.Object o, final .java.lang.Object x, final .ceylon.language.Sequential<? extends .ceylon.language.Character> s) {
        .java.lang.Object captured0$0 = null;
        if ((captured0$0 = o) instanceof .ceylon.language.String) {
            captured0$1 = ((.ceylon.language.String)captured0$0).toString();
        } else {
            throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tviolated " + "is String captured0 = o") + .org.eclipse.ceylon.compiler.java.Util.assertIsFailed(false, .ceylon.language.String.$TypeDescriptor$, captured0$0));
        }
        .ceylon.language.Character captured1$2 = null;
        if ((captured1$2 = .ceylon.language.String.getFirst(captured0$1)) != null) {
            captured1$3 = captured1$2.intValue();
        } else {
            throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tviolated " + "exists captured1 = captured0.first"));
        }
        .ceylon.language.Sequential<? extends .ceylon.language.Character> captured2$4 = null;
        if ((captured2$4 = s) instanceof .ceylon.language.Sequence) {
            captured2$5 = (.ceylon.language.Sequence<? extends .ceylon.language.Character>)(.ceylon.language.Sequence)captured2$4;
        } else {
            throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tviolated " + "nonempty captured2 = s"));
        }
        .java.lang.Object captured10$6 = null;
        if ((captured10$6 = o) instanceof .ceylon.language.String) {
            captured10$7 = ((.ceylon.language.String)captured10$6).toString();
            .ceylon.language.Character captured11$8 = null;
            if ((captured11$8 = .ceylon.language.String.getFirst("a")) != null) {
                captured11$9 = captured11$8.intValue();
                .ceylon.language.Sequential<? extends .ceylon.language.Character> captured12$10 = null;
                if ((captured12$10 = s) instanceof .ceylon.language.Sequence) {
                    captured12$11 = (.ceylon.language.Sequence<? extends .ceylon.language.Character>)(.ceylon.language.Sequence)captured12$10;
                } else {
                    throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tunviolated " + "is String captured10 = o" + .java.lang.System.lineSeparator() + "\tunviolated " + "exists captured11 = \"a\".first" + .java.lang.System.lineSeparator() + "\tviolated " + "nonempty captured12 = s"));
                }
            } else {
                throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tunviolated " + "is String captured10 = o" + .java.lang.System.lineSeparator() + "\tviolated " + "exists captured11 = \"a\".first" + .java.lang.System.lineSeparator() + "\tuntested " + "nonempty captured12 = s"));
            }
        } else {
            throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tviolated " + "is String captured10 = o" + .java.lang.System.lineSeparator() + "\tuntested " + "exists captured11 = \"a\".first" + .java.lang.System.lineSeparator() + "\tuntested " + "nonempty captured12 = s") + .org.eclipse.ceylon.compiler.java.Util.assertIsFailed(false, .ceylon.language.String.$TypeDescriptor$, captured10$6));
        }
        .java.lang.Object o$12 = null;
        if ((o$12 = o) instanceof .ceylon.language.String) {
            o$13 = ((.ceylon.language.String)o$12).toString();
            .java.lang.Object x$14 = null;
            if ((x$14 = x) != null) {
                x$15 = x$14;
                .ceylon.language.Sequential<? extends .ceylon.language.Character> s$16 = null;
                if ((s$16 = s) instanceof .ceylon.language.Sequence) {
                    s$17 = (.ceylon.language.Sequence<? extends .ceylon.language.Character>)(.ceylon.language.Sequence)s$16;
                } else {
                    throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tunviolated " + "is String o" + .java.lang.System.lineSeparator() + "\tunviolated " + "exists x" + .java.lang.System.lineSeparator() + "\tviolated " + "nonempty s"));
                }
            } else {
                throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tunviolated " + "is String o" + .java.lang.System.lineSeparator() + "\tviolated " + "exists x" + .java.lang.System.lineSeparator() + "\tuntested " + "nonempty s"));
            }
        } else {
            throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tviolated " + "is String o" + .java.lang.System.lineSeparator() + "\tuntested " + "exists x" + .java.lang.System.lineSeparator() + "\tuntested " + "nonempty s") + .org.eclipse.ceylon.compiler.java.Util.assertIsFailed(false, .ceylon.language.String.$TypeDescriptor$, o$12));
        }
    }
    final .java.lang.String captured0$1;
    final int captured1$3;
    final .ceylon.language.Sequence<? extends .ceylon.language.Character> captured2$5;
    final .ceylon.language.Sequence<? extends .ceylon.language.Character> captured12$11;
    final int captured11$9;
    final .java.lang.String captured10$7;
    final .ceylon.language.Sequence<? extends .ceylon.language.Character> s$17;
    final .java.lang.Object x$15;
    final .java.lang.String o$13;
    
    public final .java.lang.String getAttribute0() {
        return captured0$1;
    }
    
    public final int getAttribute1() {
        return captured1$3;
    }
    
    public final .ceylon.language.Sequential<? extends .ceylon.language.Character> getAttribute2() {
        return captured2$5;
    }
    
    public final .java.lang.String getAttribute10() {
        return captured10$7;
    }
    
    public final int getAttribute11() {
        return captured11$9;
    }
    
    public final .ceylon.language.Sequential<? extends .ceylon.language.Character> getAttribute12() {
        return captured12$11;
    }
    
    public final .java.lang.String getAttribute20() {
        return o$13;
    }
    
    public final .java.lang.Object getAttribute21() {
        return x$15;
    }
    
    public final .ceylon.language.Sequential<? extends .ceylon.language.Character> getAttribute22() {
        return s$17;
    }
    
    @.java.lang.Override
    public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .org.eclipse.ceylon.compiler.java.test.issues.bug16xx.Bug1629.$TypeDescriptor$;
    }
    public static final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.issues.bug16xx.Bug1629.class);
}