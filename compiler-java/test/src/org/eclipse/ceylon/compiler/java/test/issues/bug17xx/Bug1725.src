package org.eclipse.ceylon.compiler.java.test.issues.bug17xx;

public class Bug1725Transformer implements .org.eclipse.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    public Bug1725Transformer() {
    }
    
    public final .java.lang.String transformBaseExpression() {
        return ((.ceylon.language.String)(.java.lang.Object).ceylon.language.nothing_.get_()).toString();
    }
    
    public final .ceylon.language.Callable<? extends .ceylon.language.String> twoPl(final .java.lang.String s) {
        return new .org.eclipse.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.String>(.ceylon.language.String.$TypeDescriptor$, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.tuple(false, false, -1, .ceylon.language.Integer.$TypeDescriptor$), "String(Integer)", (short)-1){
            
            @.java.lang.Override
            public .ceylon.language.String $call$(final .java.lang.Object $param$0) {
                final long i = ((.ceylon.language.Integer)$param$0).longValue();
                return (.ceylon.language.String)(.java.lang.Object).ceylon.language.nothing_.get_();
            }
        };
    }
    
    public static void main(.java.lang.String[] args) {
        .org.eclipse.ceylon.compiler.java.Util.storeArgs(args);
        new .org.eclipse.ceylon.compiler.java.test.issues.bug17xx.Bug1725Transformer();
    }
    
    @.java.lang.Override
    public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .org.eclipse.ceylon.compiler.java.test.issues.bug17xx.Bug1725Transformer.$TypeDescriptor$;
    }
    public static final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.issues.bug17xx.Bug1725Transformer.class);
}
public interface Bug1725Test {
    
    public abstract .ceylon.language.Callable<? extends .ceylon.language.String> fromCeylon(final .org.eclipse.ceylon.compiler.java.test.issues.bug17xx.Bug1725Transformer transformer);
    
    public abstract .ceylon.language.Callable<? extends .ceylon.language.Callable<? extends .ceylon.language.String>> threePl(final .org.eclipse.ceylon.compiler.java.test.issues.bug17xx.Bug1725Transformer transformer);
    public static final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.issues.bug17xx.Bug1725Test.class);
}
public final class bug1725baseExpression_ implements .java.io.Serializable, .org.eclipse.ceylon.compiler.java.runtime.model.ReifiedType, .org.eclipse.ceylon.compiler.java.test.issues.bug17xx.Bug1725Test {
    
    private bug1725baseExpression_() {
        this.fromCeylon$specifier$ = new .org.eclipse.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.Callable<? extends .ceylon.language.String>>(.org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Callable.class, .ceylon.language.String.$TypeDescriptor$, .ceylon.language.Empty.$TypeDescriptor$), .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.tuple(false, false, -1, .org.eclipse.ceylon.compiler.java.test.issues.bug17xx.Bug1725Transformer.$TypeDescriptor$), "String()(Bug1725Transformer)", (short)-1){
            
            @.java.lang.Override
            public .ceylon.language.Callable<? extends .ceylon.language.String> $call$(final .java.lang.Object $param$0) {
                final .org.eclipse.ceylon.compiler.java.test.issues.bug17xx.Bug1725Transformer $instance$ = (.org.eclipse.ceylon.compiler.java.test.issues.bug17xx.Bug1725Transformer)$param$0;
                return new .org.eclipse.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.String>(.ceylon.language.String.$TypeDescriptor$, .ceylon.language.Empty.$TypeDescriptor$, "String()", (short)-1){
                    
                    @.java.lang.Override
                    public .ceylon.language.String $call$() {
                        return .ceylon.language.String.instance($instance$.transformBaseExpression());
                    }
                };
            }
        };
        this.threePl$specifier$ = new .org.eclipse.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.Callable<? extends .ceylon.language.Callable<? extends .ceylon.language.String>>>(.org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Callable.class, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Callable.class, .ceylon.language.String.$TypeDescriptor$, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.tuple(false, false, -1, .ceylon.language.Integer.$TypeDescriptor$)), .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.tuple(false, false, -1, .ceylon.language.String.$TypeDescriptor$)), .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.tuple(false, false, -1, .org.eclipse.ceylon.compiler.java.test.issues.bug17xx.Bug1725Transformer.$TypeDescriptor$), "String(Integer)(String)(Bug1725Transformer)", (short)-1){
            
            @.java.lang.Override
            public .ceylon.language.Callable<? extends .ceylon.language.Callable<? extends .ceylon.language.String>> $call$(final .java.lang.Object $param$0) {
                final .org.eclipse.ceylon.compiler.java.test.issues.bug17xx.Bug1725Transformer $instance$ = (.org.eclipse.ceylon.compiler.java.test.issues.bug17xx.Bug1725Transformer)$param$0;
                return new .org.eclipse.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.Callable<? extends .ceylon.language.String>>(.org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Callable.class, .ceylon.language.String.$TypeDescriptor$, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.tuple(false, false, -1, .ceylon.language.Integer.$TypeDescriptor$)), .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.tuple(false, false, -1, .ceylon.language.String.$TypeDescriptor$), "String(Integer)(String)", (short)-1){
                    
                    @.java.lang.Override
                    public .ceylon.language.Callable<? extends .ceylon.language.String> $call$(final .java.lang.Object $param$0) {
                        final .java.lang.String s = ((.ceylon.language.String)$param$0).toString();
                        return $instance$.twoPl(s);
                    }
                };
            }
        };
    }
    
    private .java.lang.Object readResolve() {
        return .org.eclipse.ceylon.compiler.java.test.issues.bug17xx.bug1725baseExpression_.get_();
    }
    public static final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.issues.bug17xx.bug1725baseExpression_.class);
    private final .ceylon.language.Callable<? extends .ceylon.language.Callable<? extends .ceylon.language.String>> fromCeylon$specifier$;
    
    @.java.lang.Override
    public final .ceylon.language.Callable<? extends .ceylon.language.String> fromCeylon(final .org.eclipse.ceylon.compiler.java.test.issues.bug17xx.Bug1725Transformer transformer) {
        return fromCeylon$specifier$.$call$(transformer);
    }
    private final .ceylon.language.Callable<? extends .ceylon.language.Callable<? extends .ceylon.language.Callable<? extends .ceylon.language.String>>> threePl$specifier$;
    
    @.java.lang.Override
    public final .ceylon.language.Callable<? extends .ceylon.language.Callable<? extends .ceylon.language.String>> threePl(final .org.eclipse.ceylon.compiler.java.test.issues.bug17xx.Bug1725Transformer transformer) {
        return threePl$specifier$.$call$(transformer);
    }
    private static final .org.eclipse.ceylon.compiler.java.test.issues.bug17xx.bug1725baseExpression_ $object$;
    private static volatile boolean $init$$object$ = false;
    private static final .java.lang.Throwable $initException$;
    static {
        try {
            $object$ = new .org.eclipse.ceylon.compiler.java.test.issues.bug17xx.bug1725baseExpression_();
            .org.eclipse.ceylon.compiler.java.test.issues.bug17xx.bug1725baseExpression_.$init$$object$ = true;
            $initException$ = null;
        } catch (.java.lang.Throwable x) {
            $initException$ = x;
            $object$ = null;
            .org.eclipse.ceylon.compiler.java.test.issues.bug17xx.bug1725baseExpression_.$init$$object$ = false;
        }
    }
    
    public static .org.eclipse.ceylon.compiler.java.test.issues.bug17xx.bug1725baseExpression_ get_() {
        if (.org.eclipse.ceylon.compiler.java.test.issues.bug17xx.bug1725baseExpression_.$init$$object$) {
            return .org.eclipse.ceylon.compiler.java.test.issues.bug17xx.bug1725baseExpression_.$object$;
        } else {
            if ($initException$ != null) .org.eclipse.ceylon.compiler.java.Util.rethrow($initException$);
            throw new .ceylon.language.InitializationError("Cyclic initialization trying to read the value of \'bug1725baseExpression\' before it was set");
        }
    }
    
    @.java.lang.Override
    public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .org.eclipse.ceylon.compiler.java.test.issues.bug17xx.bug1725baseExpression_.$TypeDescriptor$;
    }
}