package org.eclipse.ceylon.compiler.java.test.statement.swtch;

class SwitchIsExhaustive implements .org.eclipse.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    SwitchIsExhaustive() {
    }
    
    private final .java.lang.String m$priv$(final .java.lang.Object b) {
        final .java.lang.String name;
        {
            .java.lang.Object sel$0 = b;
            if (sel$0 instanceof .ceylon.language.String) {
                final .java.lang.String b$4 = ((.ceylon.language.String)sel$0).toString();
                name = "String";
            } else if (sel$0 instanceof .ceylon.language.Integer) {
                final long b$3 = ((.ceylon.language.Integer)sel$0).longValue();
                name = "Integer";
            } else if (sel$0 == null) {
                final .java.lang.Object b$2 = (.java.lang.Object)sel$0;
                name = "Nothing";
            } else if (sel$0 instanceof .java.lang.Exception) {
                final .java.lang.Exception b$1 = (.java.lang.Exception)sel$0;
                name = "Exception";
            } else throw new .org.eclipse.ceylon.compiler.java.language.EnumeratedTypeError("Supposedly exhaustive switch was not exhaustive");
        }
        return name;
    }
    
    @.java.lang.Override
    public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .org.eclipse.ceylon.compiler.java.test.statement.swtch.SwitchIsExhaustive.$TypeDescriptor$;
    }
    public static final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.statement.swtch.SwitchIsExhaustive.class);
}