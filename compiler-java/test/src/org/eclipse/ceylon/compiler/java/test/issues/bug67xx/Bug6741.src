package org.eclipse.ceylon.compiler.java.test.issues.bug67xx;

final class bug6741_ {
    
    private bug6741_() {
    }
    
    static void bug6741() {
        final .java.util.ArrayList<.ceylon.language.String> expect = new .java.util.ArrayList<.ceylon.language.String>();
        expect.add(.ceylon.language.String.instance("hello"));
        expect.add(.ceylon.language.String.instance("hello"));
        final .ceylon.language.String[] words = .org.eclipse.ceylon.compiler.java.Util.fillArray(new .ceylon.language.String[2], .ceylon.language.String.instance("hello"));
        .java.util.List<.ceylon.language.String> list = .java.util.Arrays.<.ceylon.language.String>asList((
            let
            {
                .ceylon.language.Sequential<? extends .ceylon.language.String> $ceylontmp$0$0 = org.eclipse.ceylon.compiler.java.language.ObjectArray.getIterable(words).sequence();
            }
            returning .org.eclipse.ceylon.compiler.java.Util.<.ceylon.language.String>toArray($ceylontmp$0$0, new .ceylon.language.String[.org.eclipse.ceylon.compiler.java.Util.toInt($ceylontmp$0$0.getSize())]);
        ));
        .ceylon.language.print_.print(list);
        .java.util.ArrayList<.ceylon.language.String> lhs$1 = expect;
        .java.util.List<.ceylon.language.String> rhs$2 = .org.eclipse.ceylon.compiler.java.Util.checkNull(list);
        if (lhs$1.equals(rhs$2)) {
        } else {
            throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tviolated " + "expect==list") + .org.eclipse.ceylon.compiler.java.Util.assertBinOpFailed(lhs$1, rhs$2));
        }
        list = .java.util.Arrays.<.ceylon.language.String>asList((
            let
            {
                .ceylon.language.Sequential<? extends .ceylon.language.String> $ceylontmp$3$0 = org.eclipse.ceylon.compiler.java.language.ObjectArray.getIterable(words).sequence();
            }
            returning .org.eclipse.ceylon.compiler.java.Util.<.ceylon.language.String>toArray($ceylontmp$3$0, new .ceylon.language.String[.org.eclipse.ceylon.compiler.java.Util.toInt($ceylontmp$3$0.getSize()) + 1], .ceylon.language.String.instance("bob"));
        ));
        expect.add(0, .ceylon.language.String.instance("bob"));
        .ceylon.language.print_.print(list);
        .java.util.ArrayList<.ceylon.language.String> lhs$4 = expect;
        .java.util.List<.ceylon.language.String> rhs$5 = .org.eclipse.ceylon.compiler.java.Util.checkNull(list);
        if (lhs$4.equals(rhs$5)) {
        } else {
            throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tviolated " + "expect==list") + .org.eclipse.ceylon.compiler.java.Util.assertBinOpFailed(lhs$4, rhs$5));
        }
        final .java.util.ArrayList<.ceylon.language.Integer> expect2 = new .java.util.ArrayList<.ceylon.language.Integer>();
        expect2.add(.ceylon.language.Integer.instance(42L));
        expect2.add(.ceylon.language.Integer.instance(42L));
        final int[] numbers = .org.eclipse.ceylon.compiler.java.Util.fillArray(new int[2], 42);
        .java.util.List<.ceylon.language.Integer> list2 = .java.util.Arrays.<.ceylon.language.Integer>asList((
            let
            {
                .ceylon.language.Sequential<? extends .ceylon.language.Integer> $ceylontmp$6$0 = org.eclipse.ceylon.compiler.java.language.IntArray.getIterable(numbers).sequence();
            }
            returning .org.eclipse.ceylon.compiler.java.Util.<.ceylon.language.Integer>toArray($ceylontmp$6$0, new .ceylon.language.Integer[.org.eclipse.ceylon.compiler.java.Util.toInt($ceylontmp$6$0.getSize())]);
        ));
        .ceylon.language.print_.print(list2);
        .java.util.ArrayList<.ceylon.language.Integer> lhs$7 = expect2;
        .java.util.List<.ceylon.language.Integer> rhs$8 = .org.eclipse.ceylon.compiler.java.Util.checkNull(list2);
        if (lhs$7.equals(rhs$8)) {
        } else {
            throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tviolated " + "expect2==list2") + .org.eclipse.ceylon.compiler.java.Util.assertBinOpFailed(lhs$7, rhs$8));
        }
        expect2.add(0, .ceylon.language.Integer.instance(11L));
        list2 = .java.util.Arrays.<.ceylon.language.Integer>asList((
            let
            {
                .ceylon.language.Sequential<? extends .ceylon.language.Integer> $ceylontmp$9$0 = org.eclipse.ceylon.compiler.java.language.IntArray.getIterable(numbers).sequence();
            }
            returning .org.eclipse.ceylon.compiler.java.Util.<.ceylon.language.Integer>toArray($ceylontmp$9$0, new .ceylon.language.Integer[.org.eclipse.ceylon.compiler.java.Util.toInt($ceylontmp$9$0.getSize()) + 1], .ceylon.language.Integer.instance(11L));
        ));
        .ceylon.language.print_.print(list2);
        .java.util.ArrayList<.ceylon.language.Integer> lhs$10 = expect2;
        .java.util.List<.ceylon.language.Integer> rhs$11 = .org.eclipse.ceylon.compiler.java.Util.checkNull(list2);
        if (lhs$10.equals(rhs$11)) {
        } else {
            throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tviolated " + "expect2==list2") + .org.eclipse.ceylon.compiler.java.Util.assertBinOpFailed(lhs$10, rhs$11));
        }
    }
}