package org.eclipse.ceylon.compiler.java.test.issues.bug21xx;

@.org.eclipse.ceylon.compiler.java.metadata.Ceylon(
        major = 8,
        minor = 1)
@.org.eclipse.ceylon.compiler.java.metadata.Method
public final class bug2124_ {
    
    private bug2124_() {
    }
    
    @.ceylon.language.SharedAnnotation$annotation$
    public static void bug2124() {
        final .java.lang.Object x = .ceylon.language.measure_.<.ceylon.language.Character>measure(.ceylon.language.Character.$TypeDescriptor$, .ceylon.language.Character.instance(97), 26L);
        .java.lang.Object is$0 = x;
        if (!(is$0 instanceof .ceylon.language.Tuple)) {
        } else {
            throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tviolated " + "!x is Tuple<Anything,Anything,Sequential<Anything>>") + .org.eclipse.ceylon.compiler.java.Util.assertIsFailed(true, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.tuple(true, false, -1, .ceylon.language.Anything.$TypeDescriptor$, .ceylon.language.Anything.$TypeDescriptor$), is$0));
        }
        final .java.lang.Object y = new .ceylon.language.Exception();
        .java.lang.Object is$1 = y;
        if (is$1 instanceof .java.lang.Exception) {
        } else {
            throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tviolated " + "y is Exception") + .org.eclipse.ceylon.compiler.java.Util.assertIsFailed(false, .ceylon.language.Exception.$TypeDescriptor$, is$1));
        }
    }
    
    @.org.eclipse.ceylon.compiler.java.metadata.Ignore
    public static void main(.java.lang.String[] args) {
        .org.eclipse.ceylon.compiler.java.Util.storeArgs(args);
        .org.eclipse.ceylon.compiler.java.test.issues.bug21xx.bug2124_.bug2124();
    }
}