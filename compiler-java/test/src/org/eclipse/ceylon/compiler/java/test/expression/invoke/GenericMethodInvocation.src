package org.eclipse.ceylon.compiler.java.test.expression.invoke;

public class KlassMethodTypeParams implements .org.eclipse.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    public KlassMethodTypeParams() {
    }
    
    public final <U, V>U bar(final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$U, final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$V, final U u, final V v) {
        return u;
    }
    
    public static void main(.java.lang.String[] args) {
        .org.eclipse.ceylon.compiler.java.Util.storeArgs(args);
        new .org.eclipse.ceylon.compiler.java.test.expression.invoke.KlassMethodTypeParams();
    }
    
    @.java.lang.Override
    public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .org.eclipse.ceylon.compiler.java.test.expression.invoke.KlassMethodTypeParams.$TypeDescriptor$;
    }
    public static final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.expression.invoke.KlassMethodTypeParams.class);
}
class GenericMethodInvocation implements .org.eclipse.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    GenericMethodInvocation() {
    }
    
    public final .java.lang.String m() {
        final .org.eclipse.ceylon.compiler.java.test.expression.invoke.KlassMethodTypeParams k = new .org.eclipse.ceylon.compiler.java.test.expression.invoke.KlassMethodTypeParams();
        return k.<.ceylon.language.String, .ceylon.language.Integer>bar(.ceylon.language.String.$TypeDescriptor$, .ceylon.language.Integer.$TypeDescriptor$, .ceylon.language.String.instance("hello"), .ceylon.language.Integer.instance(1L)).toString();
    }
    
    public final .java.lang.String m2() {
        final .org.eclipse.ceylon.compiler.java.test.expression.invoke.KlassMethodTypeParams k = new .org.eclipse.ceylon.compiler.java.test.expression.invoke.KlassMethodTypeParams();
        return (
            let
            {
                .org.eclipse.ceylon.compiler.java.test.expression.invoke.KlassMethodTypeParams arg$0$callable$ = k;
                .ceylon.language.String arg$0$0 = .ceylon.language.String.instance("hello");
                .ceylon.language.Integer arg$0$1 = .ceylon.language.Integer.instance(1L);
                .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor arg$0$reified$0 = .ceylon.language.String.$TypeDescriptor$;
                .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor arg$0$reified$1 = .ceylon.language.Integer.$TypeDescriptor$;
            }
            returning arg$0$callable$.<.ceylon.language.String, .ceylon.language.Integer>bar(arg$0$reified$0, arg$0$reified$1, arg$0$0, arg$0$1);
        ).toString();
    }
    
    @.java.lang.Override
    public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .org.eclipse.ceylon.compiler.java.test.expression.invoke.GenericMethodInvocation.$TypeDescriptor$;
    }
    public static final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.expression.invoke.GenericMethodInvocation.class);
}