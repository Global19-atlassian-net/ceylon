package org.eclipse.ceylon.compiler.java.test.issues.bug18xx;

abstract class Top implements .org.eclipse.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    Top() {
    }
    
    @.java.lang.Override
    public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .org.eclipse.ceylon.compiler.java.test.issues.bug18xx.Top.$TypeDescriptor$;
    }
    public static final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.issues.bug18xx.Top.class);
}
class Left extends .org.eclipse.ceylon.compiler.java.test.issues.bug18xx.Top {
    
    Left() {
        super();
    }
    
    @.java.lang.Override
    public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .org.eclipse.ceylon.compiler.java.test.issues.bug18xx.Left.$TypeDescriptor$;
    }
    public static final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.issues.bug18xx.Left.class);
}
abstract class Right extends .org.eclipse.ceylon.compiler.java.test.issues.bug18xx.Top {
    
    Right() {
        super();
    }
    
    public abstract .ceylon.language.Sequential<? extends .org.eclipse.ceylon.compiler.java.test.issues.bug18xx.Top> getChildren();
    
    public abstract .ceylon.language.Sequential<? extends .org.eclipse.ceylon.compiler.java.test.issues.bug18xx.Top> getChildren2();
    
    @.java.lang.Override
    public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .org.eclipse.ceylon.compiler.java.test.issues.bug18xx.Right.$TypeDescriptor$;
    }
    public static final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.issues.bug18xx.Right.class);
}
class Bottom extends .org.eclipse.ceylon.compiler.java.test.issues.bug18xx.Right {
    
    protected Bottom() {
        super();
        this.sides = null;
        this.children = null;
        this.children2 = null;
    }
    
    Bottom(final .org.eclipse.ceylon.compiler.java.test.issues.bug18xx.Right mid, final .ceylon.language.Sequential<? extends .org.eclipse.ceylon.compiler.java.test.issues.bug18xx.Left> sides) {
        super();
        this.sides = sides;
        .org.eclipse.ceylon.compiler.java.test.issues.bug18xx.Right mid$1;
        if ((mid$1 = mid) != null) {
            final .org.eclipse.ceylon.compiler.java.test.issues.bug18xx.Right mid$3 = mid$1;
            children = (.ceylon.language.Sequential<? extends .org.eclipse.ceylon.compiler.java.test.issues.bug18xx.Top>)(.ceylon.language.Sequential)(.ceylon.language.Sequence<? extends .java.lang.Object>).ceylon.language.Tuple.instance(.org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.union(.org.eclipse.ceylon.compiler.java.test.issues.bug18xx.Right.$TypeDescriptor$, .org.eclipse.ceylon.compiler.java.test.issues.bug18xx.Left.$TypeDescriptor$), new .java.lang.Object[]{mid$3}, getSides$priv$());
            children2 = (.ceylon.language.Sequential<? extends .org.eclipse.ceylon.compiler.java.test.issues.bug18xx.Top>)(.ceylon.language.Sequential)(.ceylon.language.Sequence<? extends .java.lang.Object>).ceylon.language.Tuple.instance(.org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.union(.org.eclipse.ceylon.compiler.java.test.issues.bug18xx.Right.$TypeDescriptor$, .org.eclipse.ceylon.compiler.java.test.issues.bug18xx.Left.$TypeDescriptor$), new .java.lang.Object[]{mid$3}, getSides$priv$());
        } else {
            final .java.lang.Object mid$2 = mid$1;
            children = getSides$priv$();
            children2 = (.ceylon.language.Sequence<? extends .org.eclipse.ceylon.compiler.java.test.issues.bug18xx.Left>).ceylon.language.Tuple.instance(.org.eclipse.ceylon.compiler.java.test.issues.bug18xx.Left.$TypeDescriptor$, new .java.lang.Object[]{.ceylon.language.nothing_.get_()}, getSides$priv$());
        }
    }
    private final .ceylon.language.Sequential<? extends .org.eclipse.ceylon.compiler.java.test.issues.bug18xx.Left> sides;
    
    private final .ceylon.language.Sequential<? extends .org.eclipse.ceylon.compiler.java.test.issues.bug18xx.Left> getSides$priv$() {
        return this.sides;
    }
    private final .ceylon.language.Sequential<? extends .org.eclipse.ceylon.compiler.java.test.issues.bug18xx.Top> children;
    
    @.java.lang.Override
    public final .ceylon.language.Sequential getChildren() {
        return this.children;
    }
    private final .ceylon.language.Sequential<? extends .org.eclipse.ceylon.compiler.java.test.issues.bug18xx.Top> children2;
    
    @.java.lang.Override
    public final .ceylon.language.Sequential getChildren2() {
        return this.children2;
    }
    
    @.java.lang.Override
    public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .org.eclipse.ceylon.compiler.java.test.issues.bug18xx.Bottom.$TypeDescriptor$;
    }
    public static final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.issues.bug18xx.Bottom.class);
}