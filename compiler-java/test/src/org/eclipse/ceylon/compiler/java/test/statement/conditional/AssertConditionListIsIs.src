package org.eclipse.ceylon.compiler.java.test.statement.conditional;

class AssertConditionListIsIs implements .org.eclipse.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    AssertConditionListIsIs() {
    }
    
    private final boolean mvar$priv$(final .java.lang.Object x, final .java.lang.Object y) {
        final long y1$3;
        final long x1$1;
        .java.lang.Object x1$0 = null;
        if ((x1$0 = x) instanceof .ceylon.language.Integer) {
            x1$1 = ((.ceylon.language.Integer)x1$0).longValue();
            .java.lang.Object y1$2 = null;
            if ((y1$2 = y) instanceof .ceylon.language.Integer) {
                y1$3 = ((.ceylon.language.Integer)y1$2).longValue();
            } else {
                throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tunviolated " + "is Integer x1=x" + .java.lang.System.lineSeparator() + "\tviolated " + "is Integer y1=y") + .org.eclipse.ceylon.compiler.java.Util.assertIsFailed(false, .ceylon.language.Integer.$TypeDescriptor$, y1$2));
            }
        } else {
            throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tviolated " + "is Integer x1=x" + .java.lang.System.lineSeparator() + "\tuntested " + "is Integer y1=y") + .org.eclipse.ceylon.compiler.java.Util.assertIsFailed(false, .ceylon.language.Integer.$TypeDescriptor$, x1$0));
        }
        return x1$1 == y1$3;
    }
    
    private final boolean m$priv$(final .java.lang.Object x, final .java.lang.Object y) {
        final long y$7;
        final long x$5;
        .java.lang.Object x$4 = null;
        if ((x$4 = x) instanceof .ceylon.language.Integer) {
            x$5 = ((.ceylon.language.Integer)x$4).longValue();
            .java.lang.Object y$6 = null;
            if ((y$6 = y) instanceof .ceylon.language.Integer) {
                y$7 = ((.ceylon.language.Integer)y$6).longValue();
            } else {
                throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tunviolated " + "is Integer x" + .java.lang.System.lineSeparator() + "\tviolated " + "is Integer y") + .org.eclipse.ceylon.compiler.java.Util.assertIsFailed(false, .ceylon.language.Integer.$TypeDescriptor$, y$6));
            }
        } else {
            throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tviolated " + "is Integer x" + .java.lang.System.lineSeparator() + "\tuntested " + "is Integer y") + .org.eclipse.ceylon.compiler.java.Util.assertIsFailed(false, .ceylon.language.Integer.$TypeDescriptor$, x$4));
        }
        return x$5 == y$7;
    }
    
    @.java.lang.Override
    public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .org.eclipse.ceylon.compiler.java.test.statement.conditional.AssertConditionListIsIs.$TypeDescriptor$;
    }
    public static final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.statement.conditional.AssertConditionListIsIs.class);
}