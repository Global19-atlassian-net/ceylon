package org.eclipse.ceylon.compiler.java.test.structure.constructor;

class SingletonCtors implements .org.eclipse.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    private final .java.lang.String string;
    
    @.java.lang.Override
    public final .java.lang.String toString() {
        return this.string;
    }
    
    public final long use(final .org.eclipse.ceylon.compiler.java.test.structure.constructor.SingletonCtors inst) {
        {
            .org.eclipse.ceylon.compiler.java.test.structure.constructor.SingletonCtors sel$0 = inst;
            if (sel$0 == .org.eclipse.ceylon.compiler.java.test.structure.constructor.SingletonCtors.getSingletonCtors$one()) {
                final .org.eclipse.ceylon.compiler.java.test.structure.constructor.SingletonCtors inst$3 = (.org.eclipse.ceylon.compiler.java.test.structure.constructor.SingletonCtors)sel$0;
                return 1L;
            } else if (sel$0 == .org.eclipse.ceylon.compiler.java.test.structure.constructor.SingletonCtors.getSingletonCtors$two()) {
                final .org.eclipse.ceylon.compiler.java.test.structure.constructor.SingletonCtors inst$2 = (.org.eclipse.ceylon.compiler.java.test.structure.constructor.SingletonCtors)sel$0;
                return 2L;
            } else {
                final .org.eclipse.ceylon.compiler.java.test.structure.constructor.SingletonCtors inst$1 = (.org.eclipse.ceylon.compiler.java.test.structure.constructor.SingletonCtors)sel$0;
                return 3L;
            }
        }
    }
    
    public final long use2(final .org.eclipse.ceylon.compiler.java.test.structure.constructor.SingletonCtors inst) {
        {
            .org.eclipse.ceylon.compiler.java.test.structure.constructor.SingletonCtors sel$4 = inst;
            if (sel$4 == .org.eclipse.ceylon.compiler.java.test.structure.constructor.SingletonCtors.getSingletonCtors$one()) {
                final .org.eclipse.ceylon.compiler.java.test.structure.constructor.SingletonCtors inst$7 = (.org.eclipse.ceylon.compiler.java.test.structure.constructor.SingletonCtors)sel$4;
                return 1L;
            } else if (sel$4 == .org.eclipse.ceylon.compiler.java.test.structure.constructor.SingletonCtors.getSingletonCtors$two()) {
                final .org.eclipse.ceylon.compiler.java.test.structure.constructor.SingletonCtors inst$6 = (.org.eclipse.ceylon.compiler.java.test.structure.constructor.SingletonCtors)sel$4;
                return 2L;
            } else {
                final .org.eclipse.ceylon.compiler.java.test.structure.constructor.SingletonCtors inst$5 = (.org.eclipse.ceylon.compiler.java.test.structure.constructor.SingletonCtors)sel$4;
                return 3L;
            }
        }
    }
    
    static final class one_ {
        
        one_() {
        }
    }
    
    private SingletonCtors(.org.eclipse.ceylon.compiler.java.test.structure.constructor.SingletonCtors.one_ $name$) {
        string = "one";
    }
    private static final .org.eclipse.ceylon.compiler.java.test.structure.constructor.SingletonCtors one;
    static {
        one = new SingletonCtors((.org.eclipse.ceylon.compiler.java.test.structure.constructor.SingletonCtors.one_)null);
    }
    
    public static final .org.eclipse.ceylon.compiler.java.test.structure.constructor.SingletonCtors getSingletonCtors$one() {
        return .org.eclipse.ceylon.compiler.java.test.structure.constructor.SingletonCtors.one;
    }
    
    static final class two_ {
        
        two_() {
        }
    }
    
    private SingletonCtors(.org.eclipse.ceylon.compiler.java.test.structure.constructor.SingletonCtors.two_ $name$) {
        string = "two";
    }
    private static final .org.eclipse.ceylon.compiler.java.test.structure.constructor.SingletonCtors two;
    static {
        two = new SingletonCtors((.org.eclipse.ceylon.compiler.java.test.structure.constructor.SingletonCtors.two_)null);
    }
    
    public static final .org.eclipse.ceylon.compiler.java.test.structure.constructor.SingletonCtors getSingletonCtors$two() {
        return .org.eclipse.ceylon.compiler.java.test.structure.constructor.SingletonCtors.two;
    }
    
    @.java.lang.Override
    public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .org.eclipse.ceylon.compiler.java.test.structure.constructor.SingletonCtors.$TypeDescriptor$;
    }
    public static final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.structure.constructor.SingletonCtors.class);
    
    private final .java.lang.Object writeReplace() {
        final .java.lang.String $name$;
        if (this == two) {
            $name$ = "getSingletonCtors$two";
        } else if (this == one) {
            $name$ = "getSingletonCtors$one";
        } else throw new .org.eclipse.ceylon.compiler.java.language.EnumeratedTypeError("Instance not of any constructor");
        return new .org.eclipse.ceylon.compiler.java.language.SerializationProxy(.org.eclipse.ceylon.compiler.java.test.structure.constructor.SingletonCtors.class, $name$);
    }
}
class ClassMemberSingletonCtors implements .org.eclipse.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    ClassMemberSingletonCtors() {
    }
    
    static final class MemberClass$one {
        
        MemberClass$one() {
        }
    }
    private transient MemberClass $instance$MemberClass$one = null;
    
    .org.eclipse.ceylon.compiler.java.test.structure.constructor.ClassMemberSingletonCtors.MemberClass getMemberClass$one() {
        if ($instance$MemberClass$one == null) $instance$MemberClass$one = new MemberClass((.org.eclipse.ceylon.compiler.java.test.structure.constructor.ClassMemberSingletonCtors.MemberClass$one)null);
        return $instance$MemberClass$one;
    }
    
    private static final class MemberClass$nonShared {
        
        MemberClass$nonShared() {
        }
    }
    private transient MemberClass $instance$MemberClass$nonShared = null;
    
    private .org.eclipse.ceylon.compiler.java.test.structure.constructor.ClassMemberSingletonCtors.MemberClass getMemberClass$nonShared() {
        if ($instance$MemberClass$nonShared == null) $instance$MemberClass$nonShared = new MemberClass((.org.eclipse.ceylon.compiler.java.test.structure.constructor.ClassMemberSingletonCtors.MemberClass$nonShared)null);
        return $instance$MemberClass$nonShared;
    }
    
    public class MemberClass implements .org.eclipse.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
        private final .java.lang.String string;
        
        @.java.lang.Override
        public final .java.lang.String toString() {
            return this.string;
        }
        
        private MemberClass(.org.eclipse.ceylon.compiler.java.test.structure.constructor.ClassMemberSingletonCtors.MemberClass$one $name$) {
            string = "one";
        }
        
        private MemberClass(.org.eclipse.ceylon.compiler.java.test.structure.constructor.ClassMemberSingletonCtors.MemberClass$nonShared $name$) {
            string = "nonShared";
        }
        
        @.java.lang.Override
        public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
            return .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.org.eclipse.ceylon.compiler.java.test.structure.constructor.ClassMemberSingletonCtors.$TypeDescriptor$, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.structure.constructor.ClassMemberSingletonCtors.MemberClass.class));
        }
        
        private final .java.lang.Object writeReplace() {
            final .java.lang.String $name$;
            if (this == $instance$MemberClass$nonShared) {
                $name$ = "getMemberClass$nonShared";
            } else if (this == $instance$MemberClass$one) {
                $name$ = "getMemberClass$one";
            } else throw new .org.eclipse.ceylon.compiler.java.language.EnumeratedTypeError("Instance not of any constructor");
            return new .org.eclipse.ceylon.compiler.java.language.SerializationProxy(.org.eclipse.ceylon.compiler.java.test.structure.constructor.ClassMemberSingletonCtors.this, .org.eclipse.ceylon.compiler.java.test.structure.constructor.ClassMemberSingletonCtors.class, $name$);
        }
    }
    
    private final void use$priv$(final .org.eclipse.ceylon.compiler.java.test.structure.constructor.ClassMemberSingletonCtors other) {
        .org.eclipse.ceylon.compiler.java.test.structure.constructor.ClassMemberSingletonCtors.MemberClass lhs$8 = other.getMemberClass$one();
        .org.eclipse.ceylon.compiler.java.test.structure.constructor.ClassMemberSingletonCtors.MemberClass rhs$9 = getMemberClass$one();
        if (!lhs$8.equals(rhs$9)) {
        } else {
            throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tviolated " + "other.MemberClass.one != MemberClass.one") + .org.eclipse.ceylon.compiler.java.Util.assertBinOpFailed(lhs$8, rhs$9));
        }
        .org.eclipse.ceylon.compiler.java.test.structure.constructor.ClassMemberSingletonCtors.MemberClass lhs$10 = other.getMemberClass$one();
        .org.eclipse.ceylon.compiler.java.test.structure.constructor.ClassMemberSingletonCtors.MemberClass rhs$11 = .org.eclipse.ceylon.compiler.java.test.structure.constructor.ClassMemberSingletonCtors.this.getMemberClass$one();
        if (!lhs$10.equals(rhs$11)) {
        } else {
            throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tviolated " + "other.MemberClass.one != this.MemberClass.one") + .org.eclipse.ceylon.compiler.java.Util.assertBinOpFailed(lhs$10, rhs$11));
        }
    }
    
    @.java.lang.Override
    public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .org.eclipse.ceylon.compiler.java.test.structure.constructor.ClassMemberSingletonCtors.$TypeDescriptor$;
    }
    public static final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.structure.constructor.ClassMemberSingletonCtors.class);
}
final class localSingletonCtors_ {
    
    private localSingletonCtors_() {
    }
    
    static .java.lang.Object localSingletonCtors() {
        final VariableBox<LocalClass> $instance$LocalClass$one = new VariableBox<LocalClass>(null);
        
        class LocalClass implements .org.eclipse.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
            private final .java.lang.String string;
            
            @.java.lang.Override
            public final .java.lang.String toString() {
                return this.string;
            }
            
            final class one_ {
                
                one_() {
                }
            }
            
            private LocalClass(LocalClass.one_ $name$) {
                string = "one";
            }
            
            @.java.lang.Override
            public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
                return .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.functionOrValue(.org.eclipse.ceylon.compiler.java.test.structure.constructor.localSingletonCtors_.class), .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(LocalClass.class));
            }
        }
        $instance$LocalClass$one.ref = new LocalClass((LocalClass.one_)null);
        return $instance$LocalClass$one.ref;
    }
}
final class singletonCtors_ {
    
    private singletonCtors_() {
    }
    
    static void singletonCtors() {
        final .java.lang.Object o1 = .org.eclipse.ceylon.compiler.java.test.structure.constructor.localSingletonCtors_.localSingletonCtors();
        final .java.lang.Object o2 = .org.eclipse.ceylon.compiler.java.test.structure.constructor.localSingletonCtors_.localSingletonCtors();
        if (!(o1 == o2)) {
        } else {
            throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tviolated " + "!o1===o2"));
        }
    }
}