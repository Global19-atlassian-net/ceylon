package org.eclipse.ceylon.compiler.java.test.structure.nesting;

interface Local$local$LC$LCI {
    
    public .java.lang.Object LC$LCI$impl();
    
    public long m();
}
interface Local$local$LI$LII {
    
    public .java.lang.Object LI$impl$LII$impl();
    
    public long m();
}
interface Local$local$LI {
    
    public .java.lang.Object LI$impl();
}
interface Local$C$local2$CL$LCI {
    
    public .java.lang.Object CL$LCI$impl();
    
    public long m();
}
interface Local$I$local3$IL$ICI {
    
    public .java.lang.Object IL$ICI$impl();
    
    public long m();
}
interface Local$I {
    
    public .org.eclipse.ceylon.compiler.java.test.structure.nesting.Local.I$impl $org$eclipse$ceylon$compiler$java$test$structure$nesting$Local$I$impl();
}
class Local implements .org.eclipse.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    Local() {
    }
    
    private final long mLocal$priv$() {
        return 0L;
    }
    
    private final void local$priv$() {
        (
            let
            {
                long $ceylontmp$i$4 = local$i();
                local$priv$$canonical$($ceylontmp$i$4);
            }
            returning null;
        );
    }
    
    private final long local$i() {
        return 0L;
    }
    
    private void local$priv$$canonical$(final long i) {
        
        final class LC$impl implements .java.io.Serializable {
            
            private final long $default$j() {
                return 0L;
            }
        }
        
        class LC implements .org.eclipse.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
            
            LC() {
                (
                    let
                    {
                        LC$impl $ceylontmp$impl$0 = new LC$impl();
                        long $ceylontmp$j$1 = $ceylontmp$impl$0.$default$j();
                        this($ceylontmp$j$1);
                    }
                    returning null;
                );
            }
            
            LC(final long j) {
                this.j = j;
            }
            private final long j;
            
            private final long getJ$priv$() {
                return this.j;
            }
            
            final class LCI$impl implements .java.io.Serializable {
                
                LCI$impl(.org.eclipse.ceylon.compiler.java.test.structure.nesting.Local$local$LC$LCI $this) {
                    this.$this = $this;
                }
                private final .org.eclipse.ceylon.compiler.java.test.structure.nesting.Local$local$LC$LCI $this;
                
                public long m() {
                    return mLocal$priv$() + i + getJ$priv$();
                }
            }
            
            private final long $default$LCC$k() {
                return 0L;
            }
            
            class LCC implements .org.eclipse.ceylon.compiler.java.runtime.model.ReifiedType, .org.eclipse.ceylon.compiler.java.test.structure.nesting.Local$local$LC$LCI, .java.io.Serializable {
                
                LCC() {
                    (
                        let
                        {
                            long $ceylontmp$k$2 = $default$LCC$k();
                            this($ceylontmp$k$2);
                        }
                        returning null;
                    );
                }
                
                LCC(final long k) {
                    this.k = k;
                    this.$org$eclipse$ceylon$compiler$java$test$structure$nesting$Local$local$LC$LCI$this$ = new LC.LCI$impl(this);
                }
                private final long k;
                
                private final long getK$priv$() {
                    return this.k;
                }
                protected final LC.LCI$impl $org$eclipse$ceylon$compiler$java$test$structure$nesting$Local$local$LC$LCI$this$;
                
                @.java.lang.Override
                public LC.LCI$impl LC$LCI$impl() {
                    return $org$eclipse$ceylon$compiler$java$test$structure$nesting$Local$local$LC$LCI$this$;
                }
                
                @.java.lang.Override
                public final long m() {
                    return mLocal$priv$() + i + getJ$priv$() + getK$priv$();
                }
                
                @.java.lang.Override
                public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
                    return .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.org.eclipse.ceylon.compiler.java.test.structure.nesting.Local.$TypeDescriptor$, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.functionOrValue("local")), .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(LC.class)), .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(LC.LCC.class));
                }
            }
            
            @.java.lang.Override
            public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
                return .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.org.eclipse.ceylon.compiler.java.test.structure.nesting.Local.$TypeDescriptor$, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.functionOrValue("local")), .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(LC.class));
            }
        }
        
        final class LI$impl implements .java.io.Serializable {
            
            LI$impl(.org.eclipse.ceylon.compiler.java.test.structure.nesting.Local$local$LI $this) {
                this.$this = $this;
            }
            private final .org.eclipse.ceylon.compiler.java.test.structure.nesting.Local$local$LI $this;
            
            final class LII$impl implements .java.io.Serializable {
                
                LII$impl(.org.eclipse.ceylon.compiler.java.test.structure.nesting.Local$local$LI$LII $this) {
                    this.$this = $this;
                }
                private final .org.eclipse.ceylon.compiler.java.test.structure.nesting.Local$local$LI$LII $this;
                
                public long m() {
                    return mLocal$priv$() + i;
                }
            }
            
            private final long $default$LIC$j() {
                return 0L;
            }
            
            class LIC implements .org.eclipse.ceylon.compiler.java.runtime.model.ReifiedType, .org.eclipse.ceylon.compiler.java.test.structure.nesting.Local$local$LI$LII, .java.io.Serializable {
                
                LIC() {
                    (
                        let
                        {
                            long $ceylontmp$j$3 = $default$LIC$j();
                            this($ceylontmp$j$3);
                        }
                        returning null;
                    );
                }
                
                LIC(final long j) {
                    this.j = j;
                    this.$org$eclipse$ceylon$compiler$java$test$structure$nesting$Local$local$LI$LII$this$ = LI$impl.this.new LII$impl(this);
                }
                private final long j;
                
                private final long getJ$priv$() {
                    return this.j;
                }
                protected final LI$impl.LII$impl $org$eclipse$ceylon$compiler$java$test$structure$nesting$Local$local$LI$LII$this$;
                
                @.java.lang.Override
                public LI$impl.LII$impl LI$impl$LII$impl() {
                    return $org$eclipse$ceylon$compiler$java$test$structure$nesting$Local$local$LI$LII$this$;
                }
                
                @.java.lang.Override
                public final long m() {
                    return mLocal$priv$() + i + getJ$priv$();
                }
                
                @.java.lang.Override
                public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
                    return .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.org.eclipse.ceylon.compiler.java.test.structure.nesting.Local.$TypeDescriptor$, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.functionOrValue("local")), .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.structure.nesting.Local$local$LI.class)), .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(LI$impl.LIC.class));
                }
            }
        }
    }
    
    private final void local$priv$(final long i) {
        (
            let
            {
                local$priv$$canonical$(i);
            }
            returning null;
        );
    }
    
    private final long $default$C$i() {
        return 0L;
    }
    
    class C implements .org.eclipse.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
        
        C() {
            (
                let
                {
                    long $ceylontmp$i$5 = $default$C$i();
                    this($ceylontmp$i$5);
                }
                returning null;
            );
        }
        
        C(final long i) {
            this.i = i;
        }
        private final long i;
        
        private final long getI$priv$() {
            return this.i;
        }
        
        private final void local2$priv$() {
            (
                let
                {
                    long $ceylontmp$j$9 = local2$j();
                    local2$priv$$canonical$($ceylontmp$j$9);
                }
                returning null;
            );
        }
        
        private final long local2$j() {
            return 0L;
        }
        
        private void local2$priv$$canonical$(final long j) {
            
            final class CL$impl implements .java.io.Serializable {
                
                private final long $default$k() {
                    return 0L;
                }
            }
            
            class CL implements .org.eclipse.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
                
                CL() {
                    (
                        let
                        {
                            CL$impl $ceylontmp$impl$6 = new CL$impl();
                            long $ceylontmp$k$7 = $ceylontmp$impl$6.$default$k();
                            this($ceylontmp$k$7);
                        }
                        returning null;
                    );
                }
                
                CL(final long k) {
                    this.k = k;
                }
                private final long k;
                
                private final long getK$priv$() {
                    return this.k;
                }
                
                final class LCI$impl implements .java.io.Serializable {
                    
                    LCI$impl(.org.eclipse.ceylon.compiler.java.test.structure.nesting.Local$C$local2$CL$LCI $this) {
                        this.$this = $this;
                    }
                    private final .org.eclipse.ceylon.compiler.java.test.structure.nesting.Local$C$local2$CL$LCI $this;
                    
                    public long m() {
                        return mLocal$priv$() + getI$priv$() + j + getK$priv$();
                    }
                }
                
                private final long $default$CLC$l() {
                    return 0L;
                }
                
                class CLC implements .org.eclipse.ceylon.compiler.java.runtime.model.ReifiedType, .org.eclipse.ceylon.compiler.java.test.structure.nesting.Local$C$local2$CL$LCI, .java.io.Serializable {
                    
                    CLC() {
                        (
                            let
                            {
                                long $ceylontmp$l$8 = $default$CLC$l();
                                this($ceylontmp$l$8);
                            }
                            returning null;
                        );
                    }
                    
                    CLC(final long l) {
                        this.l = l;
                        this.$org$eclipse$ceylon$compiler$java$test$structure$nesting$Local$C$local2$CL$LCI$this$ = new CL.LCI$impl(this);
                    }
                    private final long l;
                    
                    private final long getL$priv$() {
                        return this.l;
                    }
                    protected final CL.LCI$impl $org$eclipse$ceylon$compiler$java$test$structure$nesting$Local$C$local2$CL$LCI$this$;
                    
                    @.java.lang.Override
                    public CL.LCI$impl CL$LCI$impl() {
                        return $org$eclipse$ceylon$compiler$java$test$structure$nesting$Local$C$local2$CL$LCI$this$;
                    }
                    
                    @.java.lang.Override
                    public final long m() {
                        return mLocal$priv$() + getI$priv$() + j + getK$priv$() + getL$priv$();
                    }
                    
                    @.java.lang.Override
                    public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
                        return .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.org.eclipse.ceylon.compiler.java.test.structure.nesting.Local.$TypeDescriptor$, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.structure.nesting.Local.C.class)), .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.functionOrValue("local2")), .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(CL.class)), .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(CL.CLC.class));
                    }
                }
                
                @.java.lang.Override
                public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
                    return .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.org.eclipse.ceylon.compiler.java.test.structure.nesting.Local.$TypeDescriptor$, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.structure.nesting.Local.C.class)), .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.functionOrValue("local2")), .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(CL.class));
                }
            }
        }
        
        private final void local2$priv$(final long j) {
            (
                let
                {
                    local2$priv$$canonical$(j);
                }
                returning null;
            );
        }
        
        @.java.lang.Override
        public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
            return .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.org.eclipse.ceylon.compiler.java.test.structure.nesting.Local.$TypeDescriptor$, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.structure.nesting.Local.C.class));
        }
    }
    
    final class I$impl implements .java.io.Serializable {
        
        I$impl(.org.eclipse.ceylon.compiler.java.test.structure.nesting.Local$I $this) {
            this.$this = $this;
        }
        private final .org.eclipse.ceylon.compiler.java.test.structure.nesting.Local$I $this;
        
        private void local3$priv$() {
            (
                let
                {
                    long $ceylontmp$i$13 = local3$i();
                    local3$priv$$canonical$($ceylontmp$i$13);
                }
                returning null;
            );
        }
        
        private final long local3$i() {
            return 0L;
        }
        
        private void local3$priv$$canonical$(final long i) {
            
            final class IL$impl implements .java.io.Serializable {
                
                private final long $default$j() {
                    return 0L;
                }
            }
            
            class IL implements .org.eclipse.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
                
                IL() {
                    (
                        let
                        {
                            IL$impl $ceylontmp$impl$10 = new IL$impl();
                            long $ceylontmp$j$11 = $ceylontmp$impl$10.$default$j();
                            this($ceylontmp$j$11);
                        }
                        returning null;
                    );
                }
                
                IL(final long j) {
                    this.j = j;
                }
                private final long j;
                
                private final long getJ$priv$() {
                    return this.j;
                }
                
                final class ICI$impl implements .java.io.Serializable {
                    
                    ICI$impl(.org.eclipse.ceylon.compiler.java.test.structure.nesting.Local$I$local3$IL$ICI $this) {
                        this.$this = $this;
                    }
                    private final .org.eclipse.ceylon.compiler.java.test.structure.nesting.Local$I$local3$IL$ICI $this;
                    
                    public long m() {
                        return mLocal$priv$() + i + getJ$priv$();
                    }
                }
                
                private final long $default$ILC$k() {
                    return 0L;
                }
                
                class ILC implements .org.eclipse.ceylon.compiler.java.runtime.model.ReifiedType, .org.eclipse.ceylon.compiler.java.test.structure.nesting.Local$I$local3$IL$ICI, .java.io.Serializable {
                    
                    ILC() {
                        (
                            let
                            {
                                long $ceylontmp$k$12 = $default$ILC$k();
                                this($ceylontmp$k$12);
                            }
                            returning null;
                        );
                    }
                    
                    ILC(final long k) {
                        this.k = k;
                        this.$org$eclipse$ceylon$compiler$java$test$structure$nesting$Local$I$local3$IL$ICI$this$ = new IL.ICI$impl(this);
                    }
                    private final long k;
                    
                    private final long getK$priv$() {
                        return this.k;
                    }
                    protected final IL.ICI$impl $org$eclipse$ceylon$compiler$java$test$structure$nesting$Local$I$local3$IL$ICI$this$;
                    
                    @.java.lang.Override
                    public IL.ICI$impl IL$ICI$impl() {
                        return $org$eclipse$ceylon$compiler$java$test$structure$nesting$Local$I$local3$IL$ICI$this$;
                    }
                    
                    @.java.lang.Override
                    public final long m() {
                        return mLocal$priv$() + i + getJ$priv$() + getK$priv$();
                    }
                    
                    @.java.lang.Override
                    public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
                        return .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.org.eclipse.ceylon.compiler.java.test.structure.nesting.Local.$TypeDescriptor$, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.structure.nesting.Local$I.class)), .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.functionOrValue("local3")), .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(IL.class)), .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(IL.ILC.class));
                    }
                }
                
                @.java.lang.Override
                public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
                    return .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.org.eclipse.ceylon.compiler.java.test.structure.nesting.Local.$TypeDescriptor$, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.structure.nesting.Local$I.class)), .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.functionOrValue("local3")), .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(IL.class));
                }
            }
        }
        
        private void local3$priv$(final long i) {
            (
                let
                {
                    local3$priv$$canonical$(i);
                }
                returning null;
            );
        }
    }
    
    @.java.lang.Override
    public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .org.eclipse.ceylon.compiler.java.test.structure.nesting.Local.$TypeDescriptor$;
    }
    public static final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.structure.nesting.Local.class);
}