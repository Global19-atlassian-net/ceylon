package org.eclipse.ceylon.compiler.java.test.expression.invoke;

final class defaultedVariadic_ {
    
    private defaultedVariadic_() {
    }
    
    static long defaultedVariadic() {
        return (
            let
            {
                long $ceylontmp$a$0 = .org.eclipse.ceylon.compiler.java.test.expression.invoke.defaultedVariadic_.defaultedVariadic$a();
                long $ceylontmp$b$1 = .org.eclipse.ceylon.compiler.java.test.expression.invoke.defaultedVariadic_.defaultedVariadic$b($ceylontmp$a$0);
                .ceylon.language.Sequential<? extends .ceylon.language.Integer> $ceylontmp$cs$2 = (.ceylon.language.Sequential).ceylon.language.empty_.get_();
            }
            returning defaultedVariadic($ceylontmp$a$0, $ceylontmp$b$1, $ceylontmp$cs$2);
        );
    }
    
    public static final long defaultedVariadic$a() {
        return 98L;
    }
    
    static long defaultedVariadic(final long a) {
        return (
            let
            {
                long $ceylontmp$b$3 = .org.eclipse.ceylon.compiler.java.test.expression.invoke.defaultedVariadic_.defaultedVariadic$b(a);
                .ceylon.language.Sequential<? extends .ceylon.language.Integer> $ceylontmp$cs$4 = (.ceylon.language.Sequential).ceylon.language.empty_.get_();
            }
            returning defaultedVariadic(a, $ceylontmp$b$3, $ceylontmp$cs$4);
        );
    }
    
    public static final long defaultedVariadic$b(final long a) {
        return 99L;
    }
    
    static long defaultedVariadic(final long a, final long b) {
        return (
            let
            {
                .ceylon.language.Sequential<? extends .ceylon.language.Integer> $ceylontmp$cs$5 = (.ceylon.language.Sequential).ceylon.language.empty_.get_();
            }
            returning defaultedVariadic(a, b, $ceylontmp$cs$5);
        );
    }
    
    static long defaultedVariadic(final long a, final long b, final .ceylon.language.Sequential<? extends .ceylon.language.Integer> cs) {
        return cs.getSize();
    }
}
final class testDefaultedVariadic_ {
    
    private testDefaultedVariadic_() {
    }
    
    static void testDefaultedVariadic() {
        final .ceylon.language.Callable<? extends .ceylon.language.Integer> ref1 = new .org.eclipse.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor$, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.tuple(true, false, 0, .ceylon.language.Integer.$TypeDescriptor$, .ceylon.language.Integer.$TypeDescriptor$, .ceylon.language.Integer.$TypeDescriptor$), "Integer(Integer=, Integer=, Integer*)", (short)2){
            
            @.java.lang.Override
            public .ceylon.language.Integer $call$() {
                final long a = .org.eclipse.ceylon.compiler.java.test.expression.invoke.defaultedVariadic_.defaultedVariadic$a();
                final long b = .org.eclipse.ceylon.compiler.java.test.expression.invoke.defaultedVariadic_.defaultedVariadic$b(a);
                final .ceylon.language.Sequential<? extends .ceylon.language.Integer> cs$variadic$ = (.ceylon.language.Sequential).ceylon.language.empty_.get_();
                return $calltyped$(a, b, cs$variadic$);
            }
            
            @.java.lang.Override
            public .ceylon.language.Integer $callvariadic$(final .ceylon.language.Sequential $param$0) {
                final long a = .org.eclipse.ceylon.compiler.java.test.expression.invoke.defaultedVariadic_.defaultedVariadic$a();
                final long b = .org.eclipse.ceylon.compiler.java.test.expression.invoke.defaultedVariadic_.defaultedVariadic$b(a);
                final .ceylon.language.Sequential<? extends .ceylon.language.Integer> cs$variadic$ = (.ceylon.language.Sequential).ceylon.language.empty_.get_();
                return $calltyped$(a, b, cs$variadic$);
            }
            
            @.java.lang.Override
            public .ceylon.language.Integer $call$(final .java.lang.Object $param$0) {
                final long a = ((.ceylon.language.Integer)$param$0).longValue();
                final long b = .org.eclipse.ceylon.compiler.java.test.expression.invoke.defaultedVariadic_.defaultedVariadic$b(a);
                final .ceylon.language.Sequential<? extends .ceylon.language.Integer> cs$variadic$ = (.ceylon.language.Sequential).ceylon.language.empty_.get_();
                return $calltyped$(a, b, cs$variadic$);
            }
            
            @.java.lang.Override
            public .ceylon.language.Integer $callvariadic$(final .java.lang.Object $param$0, final .ceylon.language.Sequential $param$1) {
                final long a = ((.ceylon.language.Integer)$param$0).longValue();
                final long b = .org.eclipse.ceylon.compiler.java.test.expression.invoke.defaultedVariadic_.defaultedVariadic$b(a);
                final .ceylon.language.Sequential<? extends .ceylon.language.Integer> cs$variadic$ = (.ceylon.language.Sequential).ceylon.language.empty_.get_();
                return $calltyped$(a, b, cs$variadic$);
            }
            
            @.java.lang.Override
            public .ceylon.language.Integer $call$(final .java.lang.Object $param$0, final .java.lang.Object $param$1) {
                final long a = ((.ceylon.language.Integer)$param$0).longValue();
                final long b = ((.ceylon.language.Integer)$param$1).longValue();
                final .ceylon.language.Sequential<? extends .ceylon.language.Integer> cs$variadic$ = (.ceylon.language.Sequential).ceylon.language.empty_.get_();
                return $calltyped$(a, b, cs$variadic$);
            }
            
            @.java.lang.Override
            public .ceylon.language.Integer $callvariadic$(final .java.lang.Object $param$0, final .java.lang.Object $param$1, final .ceylon.language.Sequential $param$2) {
                final long a = ((.ceylon.language.Integer)$param$0).longValue();
                final long b = ((.ceylon.language.Integer)$param$1).longValue();
                final .ceylon.language.Sequential<? extends .ceylon.language.Integer> cs = (.ceylon.language.Sequential<? extends .ceylon.language.Integer>)(.ceylon.language.Sequential)$param$2;
                return $calltyped$(a, b, cs);
            }
            
            @.java.lang.Override
            public .ceylon.language.Integer $call$(final .java.lang.Object $param$0, final .java.lang.Object $param$1, final .java.lang.Object $param$2) {
                final long a = ((.ceylon.language.Integer)$param$0).longValue();
                final long b = ((.ceylon.language.Integer)$param$1).longValue();
                final .ceylon.language.Sequential<? extends .ceylon.language.Integer> cs$variadic$ = (.ceylon.language.Sequence).org.eclipse.ceylon.compiler.java.Util.sequentialCopy(.ceylon.language.Integer.$TypeDescriptor$, new .java.lang.Object[]{$param$2}, .ceylon.language.empty_.get_());
                return $calltyped$(a, b, cs$variadic$);
            }
            
            @.java.lang.Override
            public .ceylon.language.Integer $callvariadic$(final .java.lang.Object $param$0, final .java.lang.Object $param$1, final .java.lang.Object $param$2, final .ceylon.language.Sequential $param$3) {
                final long a = ((.ceylon.language.Integer)$param$0).longValue();
                final long b = ((.ceylon.language.Integer)$param$1).longValue();
                return $calltyped$(a, b, $spreadVarargs$(.ceylon.language.Integer.$TypeDescriptor$, 0, 1, new .java.lang.Object[]{(.ceylon.language.Integer)$param$2}, $param$3));
            }
            
            @.java.lang.Override
            public .ceylon.language.Integer $call$(final .java.lang.Object... $param$0) {
                final long a = $param$0.length > 0 ? ((.ceylon.language.Integer)$param$0[0]).longValue() : .org.eclipse.ceylon.compiler.java.test.expression.invoke.defaultedVariadic_.defaultedVariadic$a();
                final long b = $param$0.length > 1 ? ((.ceylon.language.Integer)$param$0[1]).longValue() : .org.eclipse.ceylon.compiler.java.test.expression.invoke.defaultedVariadic_.defaultedVariadic$b(a);
                return $calltyped$(a, b, $spreadVarargs$(.ceylon.language.Integer.$TypeDescriptor$, 2, $param$0.length - 2, $param$0, .ceylon.language.empty_.get_()));
            }
            
            @.java.lang.Override
            public .ceylon.language.Integer $callvariadic$(final .java.lang.Object... $param$0) {
                final long a = $param$0.length > 0 ? ((.ceylon.language.Integer)$param$0[0]).longValue() : .org.eclipse.ceylon.compiler.java.test.expression.invoke.defaultedVariadic_.defaultedVariadic$a();
                final long b = $param$0.length > 1 ? ((.ceylon.language.Integer)$param$0[1]).longValue() : .org.eclipse.ceylon.compiler.java.test.expression.invoke.defaultedVariadic_.defaultedVariadic$b(a);
                return $calltyped$(a, b, $spreadVarargs$(.ceylon.language.Integer.$TypeDescriptor$, 2, $param$0));
            }
            
            private .ceylon.language.Integer $calltyped$(final long a, final long b, final .ceylon.language.Sequential<? extends .ceylon.language.Integer> cs) {
                return .ceylon.language.Integer.instance(.org.eclipse.ceylon.compiler.java.test.expression.invoke.defaultedVariadic_.defaultedVariadic(a, b, cs));
            }
        };
        final .ceylon.language.Callable<? extends .ceylon.language.Integer> ref2 = new .org.eclipse.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor$, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.tuple(true, false, 0, .ceylon.language.Integer.$TypeDescriptor$, .ceylon.language.Integer.$TypeDescriptor$, .ceylon.language.Integer.$TypeDescriptor$), "Integer(Integer=, Integer=, Integer*)", (short)2){
            
            @.java.lang.Override
            public .ceylon.language.Integer $call$() {
                final long a = .org.eclipse.ceylon.compiler.java.test.expression.invoke.defaultedVariadic_.defaultedVariadic$a();
                final long b = .org.eclipse.ceylon.compiler.java.test.expression.invoke.defaultedVariadic_.defaultedVariadic$b(a);
                final .ceylon.language.Sequential<? extends .ceylon.language.Integer> cs$variadic$ = (.ceylon.language.Sequential).ceylon.language.empty_.get_();
                return $calltyped$(a, b, cs$variadic$);
            }
            
            @.java.lang.Override
            public .ceylon.language.Integer $callvariadic$(final .ceylon.language.Sequential $param$0) {
                final long a = .org.eclipse.ceylon.compiler.java.test.expression.invoke.defaultedVariadic_.defaultedVariadic$a();
                final long b = .org.eclipse.ceylon.compiler.java.test.expression.invoke.defaultedVariadic_.defaultedVariadic$b(a);
                final .ceylon.language.Sequential<? extends .ceylon.language.Integer> cs$variadic$ = (.ceylon.language.Sequential).ceylon.language.empty_.get_();
                return $calltyped$(a, b, cs$variadic$);
            }
            
            @.java.lang.Override
            public .ceylon.language.Integer $call$(final .java.lang.Object $param$0) {
                final long a = ((.ceylon.language.Integer)$param$0).longValue();
                final long b = .org.eclipse.ceylon.compiler.java.test.expression.invoke.defaultedVariadic_.defaultedVariadic$b(a);
                final .ceylon.language.Sequential<? extends .ceylon.language.Integer> cs$variadic$ = (.ceylon.language.Sequential).ceylon.language.empty_.get_();
                return $calltyped$(a, b, cs$variadic$);
            }
            
            @.java.lang.Override
            public .ceylon.language.Integer $callvariadic$(final .java.lang.Object $param$0, final .ceylon.language.Sequential $param$1) {
                final long a = ((.ceylon.language.Integer)$param$0).longValue();
                final long b = .org.eclipse.ceylon.compiler.java.test.expression.invoke.defaultedVariadic_.defaultedVariadic$b(a);
                final .ceylon.language.Sequential<? extends .ceylon.language.Integer> cs$variadic$ = (.ceylon.language.Sequential).ceylon.language.empty_.get_();
                return $calltyped$(a, b, cs$variadic$);
            }
            
            @.java.lang.Override
            public .ceylon.language.Integer $call$(final .java.lang.Object $param$0, final .java.lang.Object $param$1) {
                final long a = ((.ceylon.language.Integer)$param$0).longValue();
                final long b = ((.ceylon.language.Integer)$param$1).longValue();
                final .ceylon.language.Sequential<? extends .ceylon.language.Integer> cs$variadic$ = (.ceylon.language.Sequential).ceylon.language.empty_.get_();
                return $calltyped$(a, b, cs$variadic$);
            }
            
            @.java.lang.Override
            public .ceylon.language.Integer $callvariadic$(final .java.lang.Object $param$0, final .java.lang.Object $param$1, final .ceylon.language.Sequential $param$2) {
                final long a = ((.ceylon.language.Integer)$param$0).longValue();
                final long b = ((.ceylon.language.Integer)$param$1).longValue();
                final .ceylon.language.Sequential<? extends .ceylon.language.Integer> cs = (.ceylon.language.Sequential<? extends .ceylon.language.Integer>)(.ceylon.language.Sequential)$param$2;
                return $calltyped$(a, b, cs);
            }
            
            @.java.lang.Override
            public .ceylon.language.Integer $call$(final .java.lang.Object $param$0, final .java.lang.Object $param$1, final .java.lang.Object $param$2) {
                final long a = ((.ceylon.language.Integer)$param$0).longValue();
                final long b = ((.ceylon.language.Integer)$param$1).longValue();
                final .ceylon.language.Sequential<? extends .ceylon.language.Integer> cs$variadic$ = (.ceylon.language.Sequence).org.eclipse.ceylon.compiler.java.Util.sequentialCopy(.ceylon.language.Integer.$TypeDescriptor$, new .java.lang.Object[]{$param$2}, .ceylon.language.empty_.get_());
                return $calltyped$(a, b, cs$variadic$);
            }
            
            @.java.lang.Override
            public .ceylon.language.Integer $callvariadic$(final .java.lang.Object $param$0, final .java.lang.Object $param$1, final .java.lang.Object $param$2, final .ceylon.language.Sequential $param$3) {
                final long a = ((.ceylon.language.Integer)$param$0).longValue();
                final long b = ((.ceylon.language.Integer)$param$1).longValue();
                return $calltyped$(a, b, $spreadVarargs$(.ceylon.language.Integer.$TypeDescriptor$, 0, 1, new .java.lang.Object[]{(.ceylon.language.Integer)$param$2}, $param$3));
            }
            
            @.java.lang.Override
            public .ceylon.language.Integer $call$(final .java.lang.Object... $param$0) {
                final long a = $param$0.length > 0 ? ((.ceylon.language.Integer)$param$0[0]).longValue() : .org.eclipse.ceylon.compiler.java.test.expression.invoke.defaultedVariadic_.defaultedVariadic$a();
                final long b = $param$0.length > 1 ? ((.ceylon.language.Integer)$param$0[1]).longValue() : .org.eclipse.ceylon.compiler.java.test.expression.invoke.defaultedVariadic_.defaultedVariadic$b(a);
                return $calltyped$(a, b, $spreadVarargs$(.ceylon.language.Integer.$TypeDescriptor$, 2, $param$0.length - 2, $param$0, .ceylon.language.empty_.get_()));
            }
            
            @.java.lang.Override
            public .ceylon.language.Integer $callvariadic$(final .java.lang.Object... $param$0) {
                final long a = $param$0.length > 0 ? ((.ceylon.language.Integer)$param$0[0]).longValue() : .org.eclipse.ceylon.compiler.java.test.expression.invoke.defaultedVariadic_.defaultedVariadic$a();
                final long b = $param$0.length > 1 ? ((.ceylon.language.Integer)$param$0[1]).longValue() : .org.eclipse.ceylon.compiler.java.test.expression.invoke.defaultedVariadic_.defaultedVariadic$b(a);
                return $calltyped$(a, b, $spreadVarargs$(.ceylon.language.Integer.$TypeDescriptor$, 2, $param$0));
            }
            
            private .ceylon.language.Integer $calltyped$(final long a, final long b, final .ceylon.language.Sequential<? extends .ceylon.language.Integer> cs) {
                return .ceylon.language.Integer.instance(.org.eclipse.ceylon.compiler.java.test.expression.invoke.defaultedVariadic_.defaultedVariadic(a, b, cs));
            }
        };
        final .ceylon.language.Callable<? extends .ceylon.language.Integer> ref3 = new .org.eclipse.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor$, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.tuple(true, false, 0, .ceylon.language.Integer.$TypeDescriptor$, .ceylon.language.Integer.$TypeDescriptor$, .ceylon.language.Integer.$TypeDescriptor$), "Integer(Integer=, Integer=, Integer*)", (short)2){
            
            @.java.lang.Override
            public .ceylon.language.Integer $call$() {
                final long a = .org.eclipse.ceylon.compiler.java.test.expression.invoke.defaultedVariadic_.defaultedVariadic$a();
                final long b = .org.eclipse.ceylon.compiler.java.test.expression.invoke.defaultedVariadic_.defaultedVariadic$b(a);
                final .ceylon.language.Sequential<? extends .ceylon.language.Integer> cs$variadic$ = (.ceylon.language.Sequential).ceylon.language.empty_.get_();
                return $calltyped$(a, b, cs$variadic$);
            }
            
            @.java.lang.Override
            public .ceylon.language.Integer $callvariadic$(final .ceylon.language.Sequential $param$0) {
                final long a = .org.eclipse.ceylon.compiler.java.test.expression.invoke.defaultedVariadic_.defaultedVariadic$a();
                final long b = .org.eclipse.ceylon.compiler.java.test.expression.invoke.defaultedVariadic_.defaultedVariadic$b(a);
                final .ceylon.language.Sequential<? extends .ceylon.language.Integer> cs$variadic$ = (.ceylon.language.Sequential).ceylon.language.empty_.get_();
                return $calltyped$(a, b, cs$variadic$);
            }
            
            @.java.lang.Override
            public .ceylon.language.Integer $call$(final .java.lang.Object $param$0) {
                final long a = ((.ceylon.language.Integer)$param$0).longValue();
                final long b = .org.eclipse.ceylon.compiler.java.test.expression.invoke.defaultedVariadic_.defaultedVariadic$b(a);
                final .ceylon.language.Sequential<? extends .ceylon.language.Integer> cs$variadic$ = (.ceylon.language.Sequential).ceylon.language.empty_.get_();
                return $calltyped$(a, b, cs$variadic$);
            }
            
            @.java.lang.Override
            public .ceylon.language.Integer $callvariadic$(final .java.lang.Object $param$0, final .ceylon.language.Sequential $param$1) {
                final long a = ((.ceylon.language.Integer)$param$0).longValue();
                final long b = .org.eclipse.ceylon.compiler.java.test.expression.invoke.defaultedVariadic_.defaultedVariadic$b(a);
                final .ceylon.language.Sequential<? extends .ceylon.language.Integer> cs$variadic$ = (.ceylon.language.Sequential).ceylon.language.empty_.get_();
                return $calltyped$(a, b, cs$variadic$);
            }
            
            @.java.lang.Override
            public .ceylon.language.Integer $call$(final .java.lang.Object $param$0, final .java.lang.Object $param$1) {
                final long a = ((.ceylon.language.Integer)$param$0).longValue();
                final long b = ((.ceylon.language.Integer)$param$1).longValue();
                final .ceylon.language.Sequential<? extends .ceylon.language.Integer> cs$variadic$ = (.ceylon.language.Sequential).ceylon.language.empty_.get_();
                return $calltyped$(a, b, cs$variadic$);
            }
            
            @.java.lang.Override
            public .ceylon.language.Integer $callvariadic$(final .java.lang.Object $param$0, final .java.lang.Object $param$1, final .ceylon.language.Sequential $param$2) {
                final long a = ((.ceylon.language.Integer)$param$0).longValue();
                final long b = ((.ceylon.language.Integer)$param$1).longValue();
                final .ceylon.language.Sequential<? extends .ceylon.language.Integer> cs = (.ceylon.language.Sequential<? extends .ceylon.language.Integer>)(.ceylon.language.Sequential)$param$2;
                return $calltyped$(a, b, cs);
            }
            
            @.java.lang.Override
            public .ceylon.language.Integer $call$(final .java.lang.Object $param$0, final .java.lang.Object $param$1, final .java.lang.Object $param$2) {
                final long a = ((.ceylon.language.Integer)$param$0).longValue();
                final long b = ((.ceylon.language.Integer)$param$1).longValue();
                final .ceylon.language.Sequential<? extends .ceylon.language.Integer> cs$variadic$ = (.ceylon.language.Sequence).org.eclipse.ceylon.compiler.java.Util.sequentialCopy(.ceylon.language.Integer.$TypeDescriptor$, new .java.lang.Object[]{$param$2}, .ceylon.language.empty_.get_());
                return $calltyped$(a, b, cs$variadic$);
            }
            
            @.java.lang.Override
            public .ceylon.language.Integer $callvariadic$(final .java.lang.Object $param$0, final .java.lang.Object $param$1, final .java.lang.Object $param$2, final .ceylon.language.Sequential $param$3) {
                final long a = ((.ceylon.language.Integer)$param$0).longValue();
                final long b = ((.ceylon.language.Integer)$param$1).longValue();
                return $calltyped$(a, b, $spreadVarargs$(.ceylon.language.Integer.$TypeDescriptor$, 0, 1, new .java.lang.Object[]{(.ceylon.language.Integer)$param$2}, $param$3));
            }
            
            @.java.lang.Override
            public .ceylon.language.Integer $call$(final .java.lang.Object... $param$0) {
                final long a = $param$0.length > 0 ? ((.ceylon.language.Integer)$param$0[0]).longValue() : .org.eclipse.ceylon.compiler.java.test.expression.invoke.defaultedVariadic_.defaultedVariadic$a();
                final long b = $param$0.length > 1 ? ((.ceylon.language.Integer)$param$0[1]).longValue() : .org.eclipse.ceylon.compiler.java.test.expression.invoke.defaultedVariadic_.defaultedVariadic$b(a);
                return $calltyped$(a, b, $spreadVarargs$(.ceylon.language.Integer.$TypeDescriptor$, 2, $param$0.length - 2, $param$0, .ceylon.language.empty_.get_()));
            }
            
            @.java.lang.Override
            public .ceylon.language.Integer $callvariadic$(final .java.lang.Object... $param$0) {
                final long a = $param$0.length > 0 ? ((.ceylon.language.Integer)$param$0[0]).longValue() : .org.eclipse.ceylon.compiler.java.test.expression.invoke.defaultedVariadic_.defaultedVariadic$a();
                final long b = $param$0.length > 1 ? ((.ceylon.language.Integer)$param$0[1]).longValue() : .org.eclipse.ceylon.compiler.java.test.expression.invoke.defaultedVariadic_.defaultedVariadic$b(a);
                return $calltyped$(a, b, $spreadVarargs$(.ceylon.language.Integer.$TypeDescriptor$, 2, $param$0));
            }
            
            private .ceylon.language.Integer $calltyped$(final long a, final long b, final .ceylon.language.Sequential<? extends .ceylon.language.Integer> cs) {
                return .ceylon.language.Integer.instance(.org.eclipse.ceylon.compiler.java.test.expression.invoke.defaultedVariadic_.defaultedVariadic(a, b, cs));
            }
        };
        final .ceylon.language.Callable<? extends .ceylon.language.Integer> ref4 = new .org.eclipse.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor$, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.tuple(true, false, 0, .ceylon.language.Integer.$TypeDescriptor$, .ceylon.language.Integer.$TypeDescriptor$, .ceylon.language.Integer.$TypeDescriptor$), "Integer(Integer=, Integer=, Integer*)", (short)2){
            
            @.java.lang.Override
            public .ceylon.language.Integer $call$() {
                final long a = .org.eclipse.ceylon.compiler.java.test.expression.invoke.defaultedVariadic_.defaultedVariadic$a();
                final long b = .org.eclipse.ceylon.compiler.java.test.expression.invoke.defaultedVariadic_.defaultedVariadic$b(a);
                final .ceylon.language.Sequential<? extends .ceylon.language.Integer> cs$variadic$ = (.ceylon.language.Sequential).ceylon.language.empty_.get_();
                return $calltyped$(a, b, cs$variadic$);
            }
            
            @.java.lang.Override
            public .ceylon.language.Integer $callvariadic$(final .ceylon.language.Sequential $param$0) {
                final long a = .org.eclipse.ceylon.compiler.java.test.expression.invoke.defaultedVariadic_.defaultedVariadic$a();
                final long b = .org.eclipse.ceylon.compiler.java.test.expression.invoke.defaultedVariadic_.defaultedVariadic$b(a);
                final .ceylon.language.Sequential<? extends .ceylon.language.Integer> cs$variadic$ = (.ceylon.language.Sequential).ceylon.language.empty_.get_();
                return $calltyped$(a, b, cs$variadic$);
            }
            
            @.java.lang.Override
            public .ceylon.language.Integer $call$(final .java.lang.Object $param$0) {
                final long a = ((.ceylon.language.Integer)$param$0).longValue();
                final long b = .org.eclipse.ceylon.compiler.java.test.expression.invoke.defaultedVariadic_.defaultedVariadic$b(a);
                final .ceylon.language.Sequential<? extends .ceylon.language.Integer> cs$variadic$ = (.ceylon.language.Sequential).ceylon.language.empty_.get_();
                return $calltyped$(a, b, cs$variadic$);
            }
            
            @.java.lang.Override
            public .ceylon.language.Integer $callvariadic$(final .java.lang.Object $param$0, final .ceylon.language.Sequential $param$1) {
                final long a = ((.ceylon.language.Integer)$param$0).longValue();
                final long b = .org.eclipse.ceylon.compiler.java.test.expression.invoke.defaultedVariadic_.defaultedVariadic$b(a);
                final .ceylon.language.Sequential<? extends .ceylon.language.Integer> cs$variadic$ = (.ceylon.language.Sequential).ceylon.language.empty_.get_();
                return $calltyped$(a, b, cs$variadic$);
            }
            
            @.java.lang.Override
            public .ceylon.language.Integer $call$(final .java.lang.Object $param$0, final .java.lang.Object $param$1) {
                final long a = ((.ceylon.language.Integer)$param$0).longValue();
                final long b = ((.ceylon.language.Integer)$param$1).longValue();
                final .ceylon.language.Sequential<? extends .ceylon.language.Integer> cs$variadic$ = (.ceylon.language.Sequential).ceylon.language.empty_.get_();
                return $calltyped$(a, b, cs$variadic$);
            }
            
            @.java.lang.Override
            public .ceylon.language.Integer $callvariadic$(final .java.lang.Object $param$0, final .java.lang.Object $param$1, final .ceylon.language.Sequential $param$2) {
                final long a = ((.ceylon.language.Integer)$param$0).longValue();
                final long b = ((.ceylon.language.Integer)$param$1).longValue();
                final .ceylon.language.Sequential<? extends .ceylon.language.Integer> cs = (.ceylon.language.Sequential<? extends .ceylon.language.Integer>)(.ceylon.language.Sequential)$param$2;
                return $calltyped$(a, b, cs);
            }
            
            @.java.lang.Override
            public .ceylon.language.Integer $call$(final .java.lang.Object $param$0, final .java.lang.Object $param$1, final .java.lang.Object $param$2) {
                final long a = ((.ceylon.language.Integer)$param$0).longValue();
                final long b = ((.ceylon.language.Integer)$param$1).longValue();
                final .ceylon.language.Sequential<? extends .ceylon.language.Integer> cs$variadic$ = (.ceylon.language.Sequence).org.eclipse.ceylon.compiler.java.Util.sequentialCopy(.ceylon.language.Integer.$TypeDescriptor$, new .java.lang.Object[]{$param$2}, .ceylon.language.empty_.get_());
                return $calltyped$(a, b, cs$variadic$);
            }
            
            @.java.lang.Override
            public .ceylon.language.Integer $callvariadic$(final .java.lang.Object $param$0, final .java.lang.Object $param$1, final .java.lang.Object $param$2, final .ceylon.language.Sequential $param$3) {
                final long a = ((.ceylon.language.Integer)$param$0).longValue();
                final long b = ((.ceylon.language.Integer)$param$1).longValue();
                return $calltyped$(a, b, $spreadVarargs$(.ceylon.language.Integer.$TypeDescriptor$, 0, 1, new .java.lang.Object[]{(.ceylon.language.Integer)$param$2}, $param$3));
            }
            
            @.java.lang.Override
            public .ceylon.language.Integer $call$(final .java.lang.Object... $param$0) {
                final long a = $param$0.length > 0 ? ((.ceylon.language.Integer)$param$0[0]).longValue() : .org.eclipse.ceylon.compiler.java.test.expression.invoke.defaultedVariadic_.defaultedVariadic$a();
                final long b = $param$0.length > 1 ? ((.ceylon.language.Integer)$param$0[1]).longValue() : .org.eclipse.ceylon.compiler.java.test.expression.invoke.defaultedVariadic_.defaultedVariadic$b(a);
                return $calltyped$(a, b, $spreadVarargs$(.ceylon.language.Integer.$TypeDescriptor$, 2, $param$0.length - 2, $param$0, .ceylon.language.empty_.get_()));
            }
            
            @.java.lang.Override
            public .ceylon.language.Integer $callvariadic$(final .java.lang.Object... $param$0) {
                final long a = $param$0.length > 0 ? ((.ceylon.language.Integer)$param$0[0]).longValue() : .org.eclipse.ceylon.compiler.java.test.expression.invoke.defaultedVariadic_.defaultedVariadic$a();
                final long b = $param$0.length > 1 ? ((.ceylon.language.Integer)$param$0[1]).longValue() : .org.eclipse.ceylon.compiler.java.test.expression.invoke.defaultedVariadic_.defaultedVariadic$b(a);
                return $calltyped$(a, b, $spreadVarargs$(.ceylon.language.Integer.$TypeDescriptor$, 2, $param$0));
            }
            
            private .ceylon.language.Integer $calltyped$(final long a, final long b, final .ceylon.language.Sequential<? extends .ceylon.language.Integer> cs) {
                return .ceylon.language.Integer.instance(.org.eclipse.ceylon.compiler.java.test.expression.invoke.defaultedVariadic_.defaultedVariadic(a, b, cs));
            }
        };
    }
}