package org.eclipse.ceylon.compiler.java.test.statement.conditional;

class MethodIfNarrowedElse implements .org.eclipse.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    MethodIfNarrowedElse() {
    }
    
    public final void isoptional(final .org.eclipse.ceylon.compiler.java.test.statement.conditional.Foo x) {
        .java.lang.Object x$1;
        if (!((x$1 = x) != null)) {
        } else {
            final .org.eclipse.ceylon.compiler.java.test.statement.conditional.Foo x$2 = (.org.eclipse.ceylon.compiler.java.test.statement.conditional.Foo)x$1;
            x$2.foo();
        }
    }
    
    public final void isoptional2(final .java.lang.Object x) {
        .java.lang.Object x$4;
        if (!((x$4 = x) instanceof .org.eclipse.ceylon.compiler.java.test.statement.conditional.Foo)) {
        } else {
            final .org.eclipse.ceylon.compiler.java.test.statement.conditional.Foo x$5 = (.org.eclipse.ceylon.compiler.java.test.statement.conditional.Foo)x$4;
            x$5.foo();
        }
    }
    
    public final void isunion(final .java.lang.Object x) {
        .java.lang.Object x$7;
        if ((x$7 = x) instanceof .org.eclipse.ceylon.compiler.java.test.statement.conditional.Foo) {
            final .org.eclipse.ceylon.compiler.java.test.statement.conditional.Foo x$12 = (.org.eclipse.ceylon.compiler.java.test.statement.conditional.Foo)x$7;
            x$12.foo();
        } else {
            .java.lang.Object x$9;
            if ((x$9 = x) instanceof .org.eclipse.ceylon.compiler.java.test.statement.conditional.Bar) {
                final .org.eclipse.ceylon.compiler.java.test.statement.conditional.Bar x$11 = (.org.eclipse.ceylon.compiler.java.test.statement.conditional.Bar)x$9;
                x$11.bar();
            } else {
                final .org.eclipse.ceylon.compiler.java.test.statement.conditional.Baz x$10 = (.org.eclipse.ceylon.compiler.java.test.statement.conditional.Baz)x$9;
                x$10.baz();
            }
        }
    }
    
    public final void existsoptional(final .org.eclipse.ceylon.compiler.java.test.statement.conditional.Foo x) {
        .org.eclipse.ceylon.compiler.java.test.statement.conditional.Foo x$14;
        if (!((x$14 = x) != null)) {
            final .java.lang.Object x$16 = x$14;
        } else {
            final .org.eclipse.ceylon.compiler.java.test.statement.conditional.Foo x$15 = x$14;
            x$15.foo();
        }
    }
    
    public final void nonemptyseq(final .ceylon.language.Sequential<? extends .org.eclipse.ceylon.compiler.java.test.statement.conditional.Foo> x) {
        .ceylon.language.Sequential<? extends .org.eclipse.ceylon.compiler.java.test.statement.conditional.Foo> x$18;
        if (!((x$18 = x) instanceof .ceylon.language.Sequence)) {
            final .ceylon.language.Empty x$20 = (.ceylon.language.Empty)(.ceylon.language.Sequential)x$18;
        } else {
            final .ceylon.language.Sequence<? extends .org.eclipse.ceylon.compiler.java.test.statement.conditional.Foo> x$19 = (.ceylon.language.Sequence<? extends .org.eclipse.ceylon.compiler.java.test.statement.conditional.Foo>)(.ceylon.language.Sequence)x$18;
            final .org.eclipse.ceylon.compiler.java.test.statement.conditional.Foo y = (.org.eclipse.ceylon.compiler.java.test.statement.conditional.Foo)(.java.lang.Object)x$19.getFirst();
        }
    }
    
    @.java.lang.Override
    public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .org.eclipse.ceylon.compiler.java.test.statement.conditional.MethodIfNarrowedElse.$TypeDescriptor$;
    }
    public static final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.statement.conditional.MethodIfNarrowedElse.class);
}