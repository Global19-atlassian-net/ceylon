package org.eclipse.ceylon.compiler.java.test.issues.bug09xx;

class Bug998 implements .org.eclipse.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    protected Bug998() {
        super();
        this.f = null;
        this.rows = null;
    }
    
    Bug998(final long i, final .ceylon.language.Callable<? extends .ceylon.language.Boolean> f) {
        this.f = f;
        this.rows = (.ceylon.language.Sequence<? extends .ceylon.language.Boolean>)(.ceylon.language.Sequence)new .org.eclipse.ceylon.compiler.java.language.AbstractIterable<.ceylon.language.Boolean, .java.lang.Object>(.ceylon.language.Boolean.$TypeDescriptor$, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType){
            
            public final .ceylon.language.Iterator<.ceylon.language.Boolean> iterator() {
                return new .org.eclipse.ceylon.compiler.java.language.AbstractIterator<.ceylon.language.Boolean>(.ceylon.language.Boolean.$TypeDescriptor$){
                    {
                        $iterator$0 = new .org.eclipse.ceylon.compiler.java.language.ConstantIterable<.ceylon.language.Integer, .java.lang.Object>(.ceylon.language.Integer.$TypeDescriptor$, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType, null, .ceylon.language.Integer.instance(1L)).iterator();
                    }
                    private final .ceylon.language.Iterator<? extends .ceylon.language.Integer> $iterator$0;
                    private .ceylon.language.Integer x;
                    private boolean x$exhausted$;
                    
                    private final boolean x() {
                        final .java.lang.Object $ceylontmp$item$0 = $iterator$0.next();
                        x$exhausted$ = $ceylontmp$item$0 == .ceylon.language.finished_.get_();
                        if (x$exhausted$) {
                            return false;
                        } else {
                            x = (.ceylon.language.Integer)$ceylontmp$item$0;
                            return true;
                        }
                    }
                    
                    public final .java.lang.Object next() {
                        if (this.x()) {
                            final .ceylon.language.Integer x = this.x;
                            return .ceylon.language.Boolean.instance(.org.eclipse.ceylon.compiler.java.test.issues.bug09xx.Bug998.this.f$priv$());
                        } else return .ceylon.language.finished_.get_();
                    }
                };
            }
        }.sequence();
    }
    private final .ceylon.language.Callable<? extends .ceylon.language.Boolean> f;
    
    private final boolean f$priv$() {
        return f.$call$().booleanValue();
    }
    private final .ceylon.language.Sequential<? extends .ceylon.language.Boolean> rows;
    
    public final .ceylon.language.Sequential<? extends .ceylon.language.Boolean> getRows() {
        return this.rows;
    }
    
    @.java.lang.Override
    public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .org.eclipse.ceylon.compiler.java.test.issues.bug09xx.Bug998.$TypeDescriptor$;
    }
    public static final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.issues.bug09xx.Bug998.class);
}