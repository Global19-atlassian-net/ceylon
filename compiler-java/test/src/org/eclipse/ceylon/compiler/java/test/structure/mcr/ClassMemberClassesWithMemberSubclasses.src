package org.eclipse.ceylon.compiler.java.test.structure.mcr;

abstract class ClassDefaultMemberClassWithMemberSubclass implements .org.eclipse.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    ClassDefaultMemberClassWithMemberSubclass() {
    }
    
    public .org.eclipse.ceylon.compiler.java.test.structure.mcr.ClassDefaultMemberClassWithMemberSubclass.Default Default$new$(final long i) {
        return new Default(i);
    }
    
    public class Default implements .org.eclipse.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
        
        protected Default(final long i) {
        }
        
        @.java.lang.Override
        public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
            return .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.org.eclipse.ceylon.compiler.java.test.structure.mcr.ClassDefaultMemberClassWithMemberSubclass.$TypeDescriptor$, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.structure.mcr.ClassDefaultMemberClassWithMemberSubclass.Default.class));
        }
    }
    
    public abstract .org.eclipse.ceylon.compiler.java.test.structure.mcr.ClassDefaultMemberClassWithMemberSubclass.Formal Formal$new$(final long i);
    
    public abstract class Formal implements .org.eclipse.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
        
        protected Formal(final long i) {
        }
        
        @.java.lang.Override
        public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
            return .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.org.eclipse.ceylon.compiler.java.test.structure.mcr.ClassDefaultMemberClassWithMemberSubclass.$TypeDescriptor$, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.structure.mcr.ClassDefaultMemberClassWithMemberSubclass.Formal.class));
        }
    }
    
    public .org.eclipse.ceylon.compiler.java.test.structure.mcr.ClassDefaultMemberClassWithMemberSubclass.Shared Shared$new$(final long i) {
        return new Shared(i);
    }
    
    public class Shared implements .org.eclipse.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
        
        protected Shared(final long i) {
        }
        
        @.java.lang.Override
        public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
            return .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.org.eclipse.ceylon.compiler.java.test.structure.mcr.ClassDefaultMemberClassWithMemberSubclass.$TypeDescriptor$, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.structure.mcr.ClassDefaultMemberClassWithMemberSubclass.Shared.class));
        }
    }
    
    class NonShared implements .org.eclipse.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
        
        NonShared(final long i) {
        }
        
        @.java.lang.Override
        public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
            return .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.org.eclipse.ceylon.compiler.java.test.structure.mcr.ClassDefaultMemberClassWithMemberSubclass.$TypeDescriptor$, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.structure.mcr.ClassDefaultMemberClassWithMemberSubclass.NonShared.class));
        }
    }
    
    class DefaultSub extends .org.eclipse.ceylon.compiler.java.test.structure.mcr.ClassDefaultMemberClassWithMemberSubclass.Default {
        
        DefaultSub(final long i) {
            super(i);
        }
        
        @.java.lang.Override
        public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
            return .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.org.eclipse.ceylon.compiler.java.test.structure.mcr.ClassDefaultMemberClassWithMemberSubclass.$TypeDescriptor$, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.structure.mcr.ClassDefaultMemberClassWithMemberSubclass.DefaultSub.class));
        }
    }
    
    class FormalSub extends .org.eclipse.ceylon.compiler.java.test.structure.mcr.ClassDefaultMemberClassWithMemberSubclass.Formal {
        
        FormalSub(final long i) {
            super(i);
        }
        
        @.java.lang.Override
        public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
            return .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.org.eclipse.ceylon.compiler.java.test.structure.mcr.ClassDefaultMemberClassWithMemberSubclass.$TypeDescriptor$, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.structure.mcr.ClassDefaultMemberClassWithMemberSubclass.FormalSub.class));
        }
    }
    
    class SharedSub extends .org.eclipse.ceylon.compiler.java.test.structure.mcr.ClassDefaultMemberClassWithMemberSubclass.Shared {
        
        SharedSub(final long i) {
            super(i);
        }
        
        @.java.lang.Override
        public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
            return .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.org.eclipse.ceylon.compiler.java.test.structure.mcr.ClassDefaultMemberClassWithMemberSubclass.$TypeDescriptor$, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.structure.mcr.ClassDefaultMemberClassWithMemberSubclass.SharedSub.class));
        }
    }
    
    class NonSharedSub extends .org.eclipse.ceylon.compiler.java.test.structure.mcr.ClassDefaultMemberClassWithMemberSubclass.NonShared {
        
        NonSharedSub(final long i) {
            super(i);
        }
        
        @.java.lang.Override
        public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
            return .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.org.eclipse.ceylon.compiler.java.test.structure.mcr.ClassDefaultMemberClassWithMemberSubclass.$TypeDescriptor$, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.structure.mcr.ClassDefaultMemberClassWithMemberSubclass.NonSharedSub.class));
        }
    }
    
    private final void m$priv$() {
        
        class LocalDefaultSub extends .org.eclipse.ceylon.compiler.java.test.structure.mcr.ClassDefaultMemberClassWithMemberSubclass.Default {
            
            LocalDefaultSub(final long i) {
                super(i);
            }
            
            @.java.lang.Override
            public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
                return .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.org.eclipse.ceylon.compiler.java.test.structure.mcr.ClassDefaultMemberClassWithMemberSubclass.$TypeDescriptor$, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.functionOrValue("m")), .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(LocalDefaultSub.class));
            }
        }
        
        class LocalFormalSub extends .org.eclipse.ceylon.compiler.java.test.structure.mcr.ClassDefaultMemberClassWithMemberSubclass.Formal {
            
            LocalFormalSub(final long i) {
                super(i);
            }
            
            @.java.lang.Override
            public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
                return .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.org.eclipse.ceylon.compiler.java.test.structure.mcr.ClassDefaultMemberClassWithMemberSubclass.$TypeDescriptor$, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.functionOrValue("m")), .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(LocalFormalSub.class));
            }
        }
        
        class LocalSharedSub extends .org.eclipse.ceylon.compiler.java.test.structure.mcr.ClassDefaultMemberClassWithMemberSubclass.Shared {
            
            LocalSharedSub(final long i) {
                super(i);
            }
            
            @.java.lang.Override
            public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
                return .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.org.eclipse.ceylon.compiler.java.test.structure.mcr.ClassDefaultMemberClassWithMemberSubclass.$TypeDescriptor$, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.functionOrValue("m")), .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(LocalSharedSub.class));
            }
        }
        
        class LocalNonSharedSub extends .org.eclipse.ceylon.compiler.java.test.structure.mcr.ClassDefaultMemberClassWithMemberSubclass.NonShared {
            
            LocalNonSharedSub(final long i) {
                super(i);
            }
            
            @.java.lang.Override
            public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
                return .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.org.eclipse.ceylon.compiler.java.test.structure.mcr.ClassDefaultMemberClassWithMemberSubclass.$TypeDescriptor$, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.functionOrValue("m")), .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(LocalNonSharedSub.class));
            }
        }
    }
    
    @.java.lang.Override
    public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .org.eclipse.ceylon.compiler.java.test.structure.mcr.ClassDefaultMemberClassWithMemberSubclass.$TypeDescriptor$;
    }
    public static final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.structure.mcr.ClassDefaultMemberClassWithMemberSubclass.class);
}