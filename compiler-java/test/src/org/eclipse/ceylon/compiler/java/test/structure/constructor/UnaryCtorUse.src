package org.eclipse.ceylon.compiler.java.test.structure.constructor;

@.org.eclipse.ceylon.compiler.java.metadata.Ceylon(
        major = 8,
        minor = 1)
@.org.eclipse.ceylon.compiler.java.metadata.Method
final class unaryCtorUse_ {
    
    private unaryCtorUse_() {
    }
    
    static void unaryCtorUse() {
        final .org.eclipse.ceylon.compiler.java.test.structure.constructor.UnaryCtor o1 = (
            let
            {
                .java.lang.String arg$0$0 = "";
            }
            returning new .org.eclipse.ceylon.compiler.java.test.structure.constructor.UnaryCtor(arg$0$0);
        );
        final .org.eclipse.ceylon.compiler.java.test.structure.constructor.UnaryCtor o3 = (
            let
            {
                long arg$1$0 = 0L;
            }
            returning new .org.eclipse.ceylon.compiler.java.test.structure.constructor.UnaryCtor(.org.eclipse.ceylon.compiler.java.test.structure.constructor.UnaryCtor.sharedFromInteger_, arg$1$0);
        );
        final .org.eclipse.ceylon.compiler.java.test.structure.constructor.UnaryCtor o4 = (
            let
            {
                long arg$2$0 = 0L;
            }
            returning new .org.eclipse.ceylon.compiler.java.test.structure.constructor.UnaryCtor(.org.eclipse.ceylon.compiler.java.test.structure.constructor.UnaryCtor.sharedFromInteger_, arg$2$0);
        );
        final .org.eclipse.ceylon.compiler.java.test.structure.constructor.UnaryCtor o11 = new .org.eclipse.ceylon.compiler.java.test.structure.constructor.UnaryCtor("");
        final .org.eclipse.ceylon.compiler.java.test.structure.constructor.UnaryCtor o13 = new .org.eclipse.ceylon.compiler.java.test.structure.constructor.UnaryCtor(.org.eclipse.ceylon.compiler.java.test.structure.constructor.UnaryCtor.sharedFromInteger_, 0L);
        final .org.eclipse.ceylon.compiler.java.test.structure.constructor.UnaryCtor o14 = new .org.eclipse.ceylon.compiler.java.test.structure.constructor.UnaryCtor(.org.eclipse.ceylon.compiler.java.test.structure.constructor.UnaryCtor.sharedFromInteger_, 0L);
    }
}