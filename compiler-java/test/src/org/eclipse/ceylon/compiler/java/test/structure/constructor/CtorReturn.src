package org.eclipse.ceylon.compiler.java.test.structure.constructor;

class CtorReturn implements .org.eclipse.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    public CtorReturn() {
        .ceylon.language.print_.print(.ceylon.language.String.instance("A"));
        $return$$0: do {
            break $return$$0;
        }         while (false);
        .ceylon.language.print_.print(.ceylon.language.String.instance("B"));
        .ceylon.language.print_.print(.ceylon.language.String.instance("C"));
        .ceylon.language.print_.print(.ceylon.language.String.instance("done"));
    }
    public static final .org.eclipse.ceylon.compiler.java.test.structure.constructor.CtorReturn.baz_ baz_ = null;
    
    public static final class baz_ {
        
        baz_() {
        }
    }
    
    public CtorReturn(.org.eclipse.ceylon.compiler.java.test.structure.constructor.CtorReturn.baz_ $name$) {
        .ceylon.language.print_.print(.ceylon.language.String.instance("A"));
        .ceylon.language.print_.print(.ceylon.language.String.instance("B"));
        $return$$1: do {
            if (true) {
                break $return$$1;
            }
            throw new .java.lang.Error("Ceylon flow error");
        }         while (false);
        .ceylon.language.print_.print(.ceylon.language.String.instance("C"));
        .ceylon.language.print_.print(.ceylon.language.String.instance("done"));
    }
    public static final .org.eclipse.ceylon.compiler.java.test.structure.constructor.CtorReturn.gee_ gee_ = null;
    
    public static final class gee_ {
        
        gee_() {
        }
    }
    
    public CtorReturn(.org.eclipse.ceylon.compiler.java.test.structure.constructor.CtorReturn.gee_ $name$, final boolean b$param$) {
        .ceylon.language.print_.print(.ceylon.language.String.instance("A"));
        .ceylon.language.print_.print(.ceylon.language.String.instance("B"));
        .ceylon.language.print_.print(.ceylon.language.String.instance("C"));
        $return$$3: do {
            if (b$param$) {
                break $return$$3;
            }
            .ceylon.language.print_.print(.ceylon.language.String.instance("D"));
        }         while (false);
        .ceylon.language.print_.print(.ceylon.language.String.instance("done"));
    }
    
    @.java.lang.Override
    public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .org.eclipse.ceylon.compiler.java.test.structure.constructor.CtorReturn.$TypeDescriptor$;
    }
    public static final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.structure.constructor.CtorReturn.class);
}