package org.eclipse.ceylon.compiler.java.test.expression.selfref;

class SuperReference implements .org.eclipse.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    SuperReference() {
        this.a = 0L;
    }
    private long a;
    
    public final long getA() {
        return this.a;
    }
    
    public final void setA(final long a) {
        this.a = a;
    }
    
    public .java.lang.Object m(final .org.eclipse.ceylon.compiler.java.test.expression.selfref.SuperReferenceChild x) {
        x.test();
        return null;
    }
    
    public .java.lang.Object test() {
        return null;
    }
    
    @.java.lang.Override
    public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .org.eclipse.ceylon.compiler.java.test.expression.selfref.SuperReference.$TypeDescriptor$;
    }
    public static final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.expression.selfref.SuperReference.class);
}
class SuperReferenceChild extends .org.eclipse.ceylon.compiler.java.test.expression.selfref.SuperReference {
    
    SuperReferenceChild() {
        super();
    }
    
    @.java.lang.Override
    public final .java.lang.Object test() {
        (
            let
            {
                long $ceylontmp$opV$1 = super.getA();
                super.setA($ceylontmp$opV$1 + 1);
            }
            returning $ceylontmp$opV$1;
        );
        super.test();
        return null;
    }
    
    @.java.lang.Override
    public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .org.eclipse.ceylon.compiler.java.test.expression.selfref.SuperReferenceChild.$TypeDescriptor$;
    }
    public static final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.expression.selfref.SuperReferenceChild.class);
}