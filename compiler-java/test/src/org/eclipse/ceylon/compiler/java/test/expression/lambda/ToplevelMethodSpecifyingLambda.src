package org.eclipse.ceylon.compiler.java.test.expression.lambda;

final class toplevel_ {
    
    private toplevel_() {
    }
    private static final .ceylon.language.Callable<? extends .ceylon.language.String> $object$;
    private static volatile boolean $init$$object$ = false;
    private static final .java.lang.Throwable $initException$;
    static {
        try {
            $object$ = new .org.eclipse.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.String>(.ceylon.language.String.$TypeDescriptor$, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.tuple(false, false, -1, .ceylon.language.String.$TypeDescriptor$), "String(String)", (short)-1){
                
                @.java.lang.Override
                public .ceylon.language.String $call$(final .java.lang.Object $param$0) {
                    final .java.lang.String name2 = ((.ceylon.language.String)$param$0).toString();
                    return .ceylon.language.String.instance("hello " + name2);
                }
            };
            .org.eclipse.ceylon.compiler.java.test.expression.lambda.toplevel_.$init$$object$ = true;
            $initException$ = null;
        } catch (.java.lang.Throwable x) {
            $initException$ = x;
            $object$ = null;
            .org.eclipse.ceylon.compiler.java.test.expression.lambda.toplevel_.$init$$object$ = false;
        }
    }
    
    public static .ceylon.language.Callable<? extends .ceylon.language.String> get_() {
        if (.org.eclipse.ceylon.compiler.java.test.expression.lambda.toplevel_.$init$$object$) {
            return .org.eclipse.ceylon.compiler.java.test.expression.lambda.toplevel_.$object$;
        } else {
            if ($initException$ != null) .org.eclipse.ceylon.compiler.java.Util.rethrow($initException$);
            throw new .ceylon.language.InitializationError("Cyclic initialization trying to read the value of \'toplevel\' before it was set");
        }
    }
}