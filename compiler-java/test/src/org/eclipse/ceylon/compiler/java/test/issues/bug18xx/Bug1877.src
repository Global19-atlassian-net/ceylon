package org.eclipse.ceylon.compiler.java.test.issues.bug18xx;

class Bug1877 implements .org.eclipse.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    Bug1877() {
    }
    
    public final void meth() {
    }
    
    @.java.lang.Override
    public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .org.eclipse.ceylon.compiler.java.test.issues.bug18xx.Bug1877.$TypeDescriptor$;
    }
    public static final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.issues.bug18xx.Bug1877.class);
}
final class bug1877_ {
    
    private bug1877_() {
    }
    
    static void bug1877() {
        final .ceylon.language.Sequence<? extends .ceylon.language.Callable<? extends .org.eclipse.ceylon.compiler.java.test.issues.bug18xx.Bug1877>> t1 = (.ceylon.language.Sequence<? extends .ceylon.language.Callable<? extends .org.eclipse.ceylon.compiler.java.test.issues.bug18xx.Bug1877>>)(.ceylon.language.Sequence)((.ceylon.language.Sequence<? extends .ceylon.language.Callable<? extends .org.eclipse.ceylon.compiler.java.test.issues.bug18xx.Bug1877>>).ceylon.language.Tuple.instance(.org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Callable.class, .org.eclipse.ceylon.compiler.java.test.issues.bug18xx.Bug1877.$TypeDescriptor$, .ceylon.language.Empty.$TypeDescriptor$), new .java.lang.Object[]{new .org.eclipse.ceylon.compiler.java.language.AbstractCallable<.org.eclipse.ceylon.compiler.java.test.issues.bug18xx.Bug1877>(.org.eclipse.ceylon.compiler.java.test.issues.bug18xx.Bug1877.$TypeDescriptor$, .ceylon.language.Empty.$TypeDescriptor$, "Bug1877()", (short)-1){
            
            @.java.lang.Override
            public .org.eclipse.ceylon.compiler.java.test.issues.bug18xx.Bug1877 $call$() {
                return new .org.eclipse.ceylon.compiler.java.test.issues.bug18xx.Bug1877();
            }
        }})).$clone();
        .ceylon.language.print_.print(((.ceylon.language.Sequence<? extends .ceylon.language.Callable<? extends .org.eclipse.ceylon.compiler.java.test.issues.bug18xx.Bug1877>>).ceylon.language.Tuple.instance(.org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Callable.class, .org.eclipse.ceylon.compiler.java.test.issues.bug18xx.Bug1877.$TypeDescriptor$, .ceylon.language.Empty.$TypeDescriptor$), new .java.lang.Object[]{new .org.eclipse.ceylon.compiler.java.language.AbstractCallable<.org.eclipse.ceylon.compiler.java.test.issues.bug18xx.Bug1877>(.org.eclipse.ceylon.compiler.java.test.issues.bug18xx.Bug1877.$TypeDescriptor$, .ceylon.language.Empty.$TypeDescriptor$, "Bug1877()", (short)-1){
            
            @.java.lang.Override
            public .org.eclipse.ceylon.compiler.java.test.issues.bug18xx.Bug1877 $call$() {
                return new .org.eclipse.ceylon.compiler.java.test.issues.bug18xx.Bug1877();
            }
        }})).$clone());
        .ceylon.language.print_.print(new .org.eclipse.ceylon.compiler.java.language.LazyIterable<.ceylon.language.Callable<? extends .org.eclipse.ceylon.compiler.java.test.issues.bug18xx.Bug1877>, .java.lang.Object>(.org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Callable.class, .org.eclipse.ceylon.compiler.java.test.issues.bug18xx.Bug1877.$TypeDescriptor$, .ceylon.language.Empty.$TypeDescriptor$), .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType, 1, false){
            
            @.java.lang.Override
            protected final .java.lang.Object $evaluate$(int $index$) {
                switch ($index$) {
                case 0: 
                    return new .org.eclipse.ceylon.compiler.java.language.AbstractCallable<.org.eclipse.ceylon.compiler.java.test.issues.bug18xx.Bug1877>(.org.eclipse.ceylon.compiler.java.test.issues.bug18xx.Bug1877.$TypeDescriptor$, .ceylon.language.Empty.$TypeDescriptor$, "Bug1877()", (short)-1){
                        
                        @.java.lang.Override
                        public .org.eclipse.ceylon.compiler.java.test.issues.bug18xx.Bug1877 $call$() {
                            return new .org.eclipse.ceylon.compiler.java.test.issues.bug18xx.Bug1877();
                        }
                    };
                
                default: 
                    return null;
                
                }
            }
        }.iterator());
        final .ceylon.language.Sequence<? extends .ceylon.language.Callable<? extends .java.lang.Object>> t2 = (.ceylon.language.Sequence<? extends .ceylon.language.Callable<? extends .java.lang.Object>>)(.ceylon.language.Sequence)((.ceylon.language.Sequence<? extends .ceylon.language.Callable<? extends .java.lang.Object>>).ceylon.language.Tuple.instance(.org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Callable.class, .ceylon.language.Anything.$TypeDescriptor$, .ceylon.language.Empty.$TypeDescriptor$), new .java.lang.Object[]{new .org.eclipse.ceylon.compiler.java.language.AbstractCallable<.java.lang.Object>(.ceylon.language.Anything.$TypeDescriptor$, .ceylon.language.Empty.$TypeDescriptor$, "Anything()", (short)-1){
            
            @.java.lang.Override
            public .java.lang.Object $call$() {
                return (
                    let
                    {
                        .org.eclipse.ceylon.compiler.java.test.issues.bug18xx.bug1877_.bug1877();
                    }
                    returning null;
                );
            }
        }})).$clone();
        .ceylon.language.print_.print(((.ceylon.language.Sequence<? extends .ceylon.language.Callable<? extends .java.lang.Object>>).ceylon.language.Tuple.instance(.org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Callable.class, .ceylon.language.Anything.$TypeDescriptor$, .ceylon.language.Empty.$TypeDescriptor$), new .java.lang.Object[]{new .org.eclipse.ceylon.compiler.java.language.AbstractCallable<.java.lang.Object>(.ceylon.language.Anything.$TypeDescriptor$, .ceylon.language.Empty.$TypeDescriptor$, "Anything()", (short)-1){
            
            @.java.lang.Override
            public .java.lang.Object $call$() {
                return (
                    let
                    {
                        .org.eclipse.ceylon.compiler.java.test.issues.bug18xx.bug1877_.bug1877();
                    }
                    returning null;
                );
            }
        }})).$clone());
        .ceylon.language.print_.print(new .org.eclipse.ceylon.compiler.java.language.LazyIterable<.ceylon.language.Callable<? extends .java.lang.Object>, .java.lang.Object>(.org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Callable.class, .ceylon.language.Anything.$TypeDescriptor$, .ceylon.language.Empty.$TypeDescriptor$), .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType, 1, false){
            
            @.java.lang.Override
            protected final .java.lang.Object $evaluate$(int $index$) {
                switch ($index$) {
                case 0: 
                    return new .org.eclipse.ceylon.compiler.java.language.AbstractCallable<.java.lang.Object>(.ceylon.language.Anything.$TypeDescriptor$, .ceylon.language.Empty.$TypeDescriptor$, "Anything()", (short)-1){
                        
                        @.java.lang.Override
                        public .java.lang.Object $call$() {
                            return (
                                let
                                {
                                    .org.eclipse.ceylon.compiler.java.test.issues.bug18xx.bug1877_.bug1877();
                                }
                                returning null;
                            );
                        }
                    };
                
                default: 
                    return null;
                
                }
            }
        }.iterator());
        final .ceylon.language.Callable<? extends .ceylon.language.Callable<? extends .java.lang.Object>> fa = new .org.eclipse.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.Callable<? extends .java.lang.Object>>(.org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Callable.class, .ceylon.language.Anything.$TypeDescriptor$, .ceylon.language.Empty.$TypeDescriptor$), .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.tuple(false, false, -1, .org.eclipse.ceylon.compiler.java.test.issues.bug18xx.Bug1877.$TypeDescriptor$), "Anything()(Bug1877)", (short)-1){
            
            @.java.lang.Override
            public .ceylon.language.Callable<? extends .java.lang.Object> $call$(final .java.lang.Object $param$0) {
                final .org.eclipse.ceylon.compiler.java.test.issues.bug18xx.Bug1877 $instance$ = (.org.eclipse.ceylon.compiler.java.test.issues.bug18xx.Bug1877)$param$0;
                return new .org.eclipse.ceylon.compiler.java.language.AbstractCallable<.java.lang.Object>(.ceylon.language.Anything.$TypeDescriptor$, .ceylon.language.Empty.$TypeDescriptor$, "Anything()", (short)-1){
                    
                    @.java.lang.Override
                    public .java.lang.Object $call$() {
                        return (
                            let
                            {
                                $instance$.meth();
                            }
                            returning null;
                        );
                    }
                };
            }
        };
        final .org.eclipse.ceylon.compiler.java.test.issues.bug18xx.Bug1877 b = new .org.eclipse.ceylon.compiler.java.test.issues.bug18xx.Bug1877();
        final .ceylon.language.Callable<? extends .java.lang.Object> fb = new .org.eclipse.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.Callable<? extends .java.lang.Object>>(.org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Callable.class, .ceylon.language.Anything.$TypeDescriptor$, .ceylon.language.Empty.$TypeDescriptor$), .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.tuple(false, false, -1, .org.eclipse.ceylon.compiler.java.test.issues.bug18xx.Bug1877.$TypeDescriptor$), "Anything()(Bug1877)", (short)-1){
            
            @.java.lang.Override
            public .ceylon.language.Callable<? extends .java.lang.Object> $call$(final .java.lang.Object $param$0) {
                final .org.eclipse.ceylon.compiler.java.test.issues.bug18xx.Bug1877 $instance$ = (.org.eclipse.ceylon.compiler.java.test.issues.bug18xx.Bug1877)$param$0;
                return new .org.eclipse.ceylon.compiler.java.language.AbstractCallable<.java.lang.Object>(.ceylon.language.Anything.$TypeDescriptor$, .ceylon.language.Empty.$TypeDescriptor$, "Anything()", (short)-1){
                    
                    @.java.lang.Override
                    public .java.lang.Object $call$() {
                        return (
                            let
                            {
                                $instance$.meth();
                            }
                            returning null;
                        );
                    }
                };
            }
        }.$call$(b);
        final .java.lang.Object fc = new .org.eclipse.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.Callable<? extends .java.lang.Object>>(.org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Callable.class, .ceylon.language.Anything.$TypeDescriptor$, .ceylon.language.Empty.$TypeDescriptor$), .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.tuple(false, false, -1, .org.eclipse.ceylon.compiler.java.test.issues.bug18xx.Bug1877.$TypeDescriptor$), "Anything()(Bug1877)", (short)-1){
            
            @.java.lang.Override
            public .ceylon.language.Callable<? extends .java.lang.Object> $call$(final .java.lang.Object $param$0) {
                final .org.eclipse.ceylon.compiler.java.test.issues.bug18xx.Bug1877 $instance$ = (.org.eclipse.ceylon.compiler.java.test.issues.bug18xx.Bug1877)$param$0;
                return new .org.eclipse.ceylon.compiler.java.language.AbstractCallable<.java.lang.Object>(.ceylon.language.Anything.$TypeDescriptor$, .ceylon.language.Empty.$TypeDescriptor$, "Anything()", (short)-1){
                    
                    @.java.lang.Override
                    public .java.lang.Object $call$() {
                        return (
                            let
                            {
                                $instance$.meth();
                            }
                            returning null;
                        );
                    }
                };
            }
        }.$call$(b).$call$();
        final long i1 = .org.eclipse.ceylon.compiler.java.test.issues.bug18xx.Bug1877Java.attr;
        final long i2 = .org.eclipse.ceylon.compiler.java.test.issues.bug18xx.Bug1877Java.meth();
        .org.eclipse.ceylon.compiler.java.test.issues.bug18xx.Bug1877Java.meth();
        (
            let
            {
                long $ceylontmp$op$0 = .org.eclipse.ceylon.compiler.java.test.issues.bug18xx.Bug1877Java.attr;
                .org.eclipse.ceylon.compiler.java.test.issues.bug18xx.Bug1877Java.attr = $ceylontmp$op$0 + 1;
            }
            returning $ceylontmp$op$0;
        );
        (
            let
            {
                long $ceylontmp$op$1 = .org.eclipse.ceylon.compiler.java.test.issues.bug18xx.Bug1877Java.attr + 1;
                .org.eclipse.ceylon.compiler.java.test.issues.bug18xx.Bug1877Java.attr = $ceylontmp$op$1;
            }
            returning $ceylontmp$op$1;
        );
        (
            let
            {
                long $ceylontmp$op$2 = .org.eclipse.ceylon.compiler.java.test.issues.bug18xx.Bug1877Java.attr + 2L;
                .org.eclipse.ceylon.compiler.java.test.issues.bug18xx.Bug1877Java.attr = $ceylontmp$op$2;
            }
            returning $ceylontmp$op$2;
        );
        final .org.eclipse.ceylon.compiler.java.test.issues.bug18xx.Bug1877Java.Type t;
        final .ceylon.language.Callable<? extends .org.eclipse.ceylon.compiler.java.test.issues.bug18xx.Bug1877Java.Type> f1 = new .org.eclipse.ceylon.compiler.java.language.AbstractCallable<.org.eclipse.ceylon.compiler.java.test.issues.bug18xx.Bug1877Java.Type>(.org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.issues.bug18xx.Bug1877Java.class), .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.issues.bug18xx.Bug1877Java.Type.class)), .ceylon.language.Empty.$TypeDescriptor$, "Bug1877Java.Type()", (short)-1){
            
            @.java.lang.Override
            public .org.eclipse.ceylon.compiler.java.test.issues.bug18xx.Bug1877Java.Type $call$() {
                return new .org.eclipse.ceylon.compiler.java.test.issues.bug18xx.Bug1877Java.Type();
            }
        };
        final .ceylon.language.Callable<? extends .ceylon.language.Integer> f2 = new .org.eclipse.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor$, .ceylon.language.Empty.$TypeDescriptor$, "Integer()", (short)-1){
            
            @.java.lang.Override
            public .ceylon.language.Integer $call$() {
                return .ceylon.language.Integer.instance(.org.eclipse.ceylon.compiler.java.test.issues.bug18xx.Bug1877Java.meth());
            }
        };
    }
}