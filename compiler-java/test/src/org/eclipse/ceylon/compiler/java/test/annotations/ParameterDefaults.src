package org.eclipse.ceylon.compiler.java.test.annotations;

@.java.lang.annotation.Retention(.java.lang.annotation.RetentionPolicy.RUNTIME)
@.java.lang.annotation.Target({})
@interface ParameterDefaults$annotation {
    
    public abstract .java.lang.String s1();
    
    @.org.eclipse.ceylon.compiler.java.metadata.ParameterValue("s1")
    public abstract .java.lang.String s2();
}
@.java.lang.annotation.Retention(.java.lang.annotation.RetentionPolicy.RUNTIME)
@.java.lang.annotation.Target({.java.lang.annotation.ElementType.TYPE})
@interface ParameterDefaults$annotations {
    
    public abstract .org.eclipse.ceylon.compiler.java.test.annotations.ParameterDefaults$annotation[] value();
}
@.ceylon.language.Final$annotation
@.ceylon.language.Annotation$annotation
final class ParameterDefaults implements .org.eclipse.ceylon.compiler.java.runtime.model.ReifiedType, .ceylon.language.model.SequencedAnnotation<.org.eclipse.ceylon.compiler.java.test.annotations.ParameterDefaults, .ceylon.language.model.declaration.ClassOrInterfaceDeclaration> {
    
    ParameterDefaults(final .java.lang.String s1) {
        (
            let
            {
                .java.lang.String $ceylontmp$s2$0 = .org.eclipse.ceylon.compiler.java.test.annotations.ParameterDefaults.$init$s2(s1);
                this(s1, $ceylontmp$s2$0);
            }
            returning null;
        );
    }
    
    ParameterDefaults(.org.eclipse.ceylon.compiler.java.test.annotations.ParameterDefaults$annotation anno) {
        this(anno.s1(), anno.s2());
    }
    
    ParameterDefaults(final .java.lang.String s1, final .java.lang.String s2) {
        this.$ceylon$language$model$SequencedAnnotation$this = new .ceylon.language.model.SequencedAnnotation$impl<.org.eclipse.ceylon.compiler.java.test.annotations.ParameterDefaults, .ceylon.language.model.declaration.ClassOrInterfaceDeclaration>(.org.eclipse.ceylon.compiler.java.test.annotations.ParameterDefaults.$TypeDescriptor, .ceylon.language.model.declaration.ClassOrInterfaceDeclaration.$TypeDescriptor, this);
        this.$ceylon$language$model$ConstrainedAnnotation$this = new .ceylon.language.model.ConstrainedAnnotation$impl<.org.eclipse.ceylon.compiler.java.test.annotations.ParameterDefaults, .ceylon.language.Sequential<? extends .org.eclipse.ceylon.compiler.java.test.annotations.ParameterDefaults>, .ceylon.language.model.declaration.ClassOrInterfaceDeclaration>(.org.eclipse.ceylon.compiler.java.test.annotations.ParameterDefaults.$TypeDescriptor, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Sequential.class, .org.eclipse.ceylon.compiler.java.test.annotations.ParameterDefaults.$TypeDescriptor), .ceylon.language.model.declaration.ClassOrInterfaceDeclaration.$TypeDescriptor, this);
        this.$ceylon$language$model$Annotation$this = new .ceylon.language.model.Annotation$impl<.org.eclipse.ceylon.compiler.java.test.annotations.ParameterDefaults>(.org.eclipse.ceylon.compiler.java.test.annotations.ParameterDefaults.$TypeDescriptor, this);
    }
    
    static .java.lang.String $init$s2(final .java.lang.String s1) {
        return s1;
    }
    protected final .ceylon.language.model.SequencedAnnotation$impl<.org.eclipse.ceylon.compiler.java.test.annotations.ParameterDefaults, .ceylon.language.model.declaration.ClassOrInterfaceDeclaration> $ceylon$language$model$SequencedAnnotation$this;
    
    @.java.lang.Override
    public .ceylon.language.model.SequencedAnnotation$impl<.org.eclipse.ceylon.compiler.java.test.annotations.ParameterDefaults, .ceylon.language.model.declaration.ClassOrInterfaceDeclaration> $ceylon$language$model$SequencedAnnotation$impl() {
        return $ceylon$language$model$SequencedAnnotation$this;
    }
    protected final .ceylon.language.model.ConstrainedAnnotation$impl<.org.eclipse.ceylon.compiler.java.test.annotations.ParameterDefaults, .ceylon.language.Sequential<? extends .org.eclipse.ceylon.compiler.java.test.annotations.ParameterDefaults>, .ceylon.language.model.declaration.ClassOrInterfaceDeclaration> $ceylon$language$model$ConstrainedAnnotation$this;
    
    @.java.lang.Override
    public .ceylon.language.model.ConstrainedAnnotation$impl<.org.eclipse.ceylon.compiler.java.test.annotations.ParameterDefaults, .ceylon.language.Sequential<? extends .org.eclipse.ceylon.compiler.java.test.annotations.ParameterDefaults>, .ceylon.language.model.declaration.ClassOrInterfaceDeclaration> $ceylon$language$model$ConstrainedAnnotation$impl() {
        return $ceylon$language$model$ConstrainedAnnotation$this;
    }
    
    @.java.lang.Override
    public final boolean occurs(final .ceylon.language.model.Annotated programElement) {
        return $ceylon$language$model$ConstrainedAnnotation$this.occurs(programElement);
    }
    protected final .ceylon.language.model.Annotation$impl<.org.eclipse.ceylon.compiler.java.test.annotations.ParameterDefaults> $ceylon$language$model$Annotation$this;
    
    @.java.lang.Override
    public .ceylon.language.model.Annotation$impl<.org.eclipse.ceylon.compiler.java.test.annotations.ParameterDefaults> $ceylon$language$model$Annotation$impl() {
        return $ceylon$language$model$Annotation$this;
    }
    
    @.java.lang.Override
    public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType() {
        return .org.eclipse.ceylon.compiler.java.test.annotations.ParameterDefaults.$TypeDescriptor;
    }
    public static final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor = .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.annotations.ParameterDefaults.class);
}
@.org.eclipse.ceylon.compiler.java.metadata.AnnotationInstantiation(
        arguments = {
                0,
                1},
        primary = .org.eclipse.ceylon.compiler.java.test.annotations.ParameterDefaults.class)
final class parameterDefaults_ {
    
    private parameterDefaults_() {
    }
    
    static .org.eclipse.ceylon.compiler.java.test.annotations.ParameterDefaults parameterDefaults(final .java.lang.String p1) {
        return (
            let
            {
                .java.lang.String $ceylontmp$p2$1 = .org.eclipse.ceylon.compiler.java.test.annotations.parameterDefaults_.parameterDefaults$p2(p1);
            }
            returning parameterDefaults(p1, $ceylontmp$p2$1);
        );
    }
    
    @.org.eclipse.ceylon.compiler.java.metadata.ParameterValue("p1")
    static final .java.lang.String parameterDefaults$p2(final .java.lang.String p1) {
        return p1;
    }
    
    @.ceylon.language.Annotation$annotation
    static .org.eclipse.ceylon.compiler.java.test.annotations.ParameterDefaults parameterDefaults(final .java.lang.String p1, final .java.lang.String p2) {
        return new .org.eclipse.ceylon.compiler.java.test.annotations.ParameterDefaults(p1, p2);
    }
}