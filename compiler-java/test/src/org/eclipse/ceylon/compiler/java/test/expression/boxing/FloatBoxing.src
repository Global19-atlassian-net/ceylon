package org.eclipse.ceylon.compiler.java.test.expression.boxing;

class FloatBoxing implements .org.eclipse.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    FloatBoxing() {
        this.attrFloat = 1.0;
    }
    private double attrFloat;
    
    private final double getAttrFloat$priv$() {
        return this.attrFloat;
    }
    
    private final void setAttrFloat$priv$(final double attrFloat) {
        this.attrFloat = attrFloat;
    }
    
    private final <T>T id$priv$(final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$T, final T x) {
        return x;
    }
    
    private final void m$priv$() {
        double localAttrFloat = 1.0;
        .ceylon.language.Float localAttrOptionalFloat = .ceylon.language.Float.instance(1.0);
        .java.lang.Object localAttrObject = .ceylon.language.Float.instance(1.0);
        localAttrFloat = localAttrFloat;
        localAttrOptionalFloat = .ceylon.language.Float.instance(localAttrFloat);
        localAttrObject = .ceylon.language.Float.instance(localAttrFloat);
        localAttrFloat = <.ceylon.language.Float>id$priv$(.ceylon.language.Float.$TypeDescriptor$, .ceylon.language.Float.instance(1.0)).doubleValue();
        localAttrOptionalFloat = <.ceylon.language.Float>id$priv$(.ceylon.language.Float.$TypeDescriptor$, .ceylon.language.Float.instance(1.0));
        localAttrObject = <.ceylon.language.Float>id$priv$(.ceylon.language.Float.$TypeDescriptor$, .ceylon.language.Float.instance(1.0));
        final .java.lang.Object localAttrConstantObject = .ceylon.language.Float.instance(localAttrFloat);
        final double localAttrConstantFloat = localAttrFloat;
        .java.lang.Object localAttrConstantObject$1;
        if ((localAttrConstantObject$1 = localAttrConstantObject) instanceof .ceylon.language.Float) {
            final double localAttrConstantObject$2 = ((.ceylon.language.Float)localAttrConstantObject$1).doubleValue();
            localAttrFloat = localAttrConstantObject$2;
        }
        localAttrFloat = localAttrFloat + 2.0;
        localAttrFloat = localAttrFloat + 4L;
        localAttrObject = .ceylon.language.Float.instance(localAttrFloat + 2.0);
        localAttrObject = .ceylon.language.Float.instance(localAttrFloat + 4L);
        setAttrFloat$priv$(getAttrFloat$priv$() + 2.0);
        setAttrFloat$priv$(getAttrFloat$priv$() + 4L);
        this.setAttrFloat$priv$(this.getAttrFloat$priv$() + 2.0);
        this.setAttrFloat$priv$(this.getAttrFloat$priv$() + 4L);
        test$priv$(localAttrFloat + 2.0);
        test$priv$(localAttrFloat + 4L);
        test$priv$(localAttrFloat + 2.0);
        test$priv$(localAttrFloat + 4L);
        test$priv$(getAttrFloat$priv$() + 2.0);
        test$priv$(getAttrFloat$priv$() + 4L);
        test$priv$(this.getAttrFloat$priv$() + 2.0);
        test$priv$(this.getAttrFloat$priv$() + 4L);
        localAttrFloat = .ceylon.language.Float.plus(localAttrFloat, 3.0);
        setAttrFloat$priv$(.ceylon.language.Float.plus(getAttrFloat$priv$(), 3.0));
        this.setAttrFloat$priv$(.ceylon.language.Float.plus(this.getAttrFloat$priv$(), 3.0));
        test$priv$(.ceylon.language.Float.plus(localAttrFloat, 3.0));
        test$priv$(.ceylon.language.Float.plus(getAttrFloat$priv$(), 3.0));
        test$priv$(.ceylon.language.Float.plus(this.getAttrFloat$priv$(), 3.0));
    }
    
    private final void test$priv$(final double f) {
    }
    
    @.java.lang.Override
    public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .org.eclipse.ceylon.compiler.java.test.expression.boxing.FloatBoxing.$TypeDescriptor$;
    }
    public static final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.expression.boxing.FloatBoxing.class);
}