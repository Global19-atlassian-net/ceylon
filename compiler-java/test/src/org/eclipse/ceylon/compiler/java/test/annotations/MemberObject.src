package org.eclipse.ceylon.compiler.java.test.annotations;

@.org.eclipse.ceylon.compiler.java.metadata.Ceylon(
        major = 8,
        minor = 1)
@.ceylon.language.SharedAnnotation$annotation$
@.org.eclipse.ceylon.compiler.java.metadata.Members({@.org.eclipse.ceylon.compiler.java.metadata.Member(klass = .org.eclipse.ceylon.compiler.java.test.annotations.MemberObject.member_.class)})
public class MemberObject implements .org.eclipse.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    public MemberObject() {
        this.member = null;
    }
    private transient .org.eclipse.ceylon.compiler.java.test.annotations.MemberObject.member_ member;
    
    @.org.eclipse.ceylon.compiler.java.metadata.Ceylon(
            major = 8,
            minor = 1)
    @.org.eclipse.ceylon.compiler.java.metadata.Name("member")
    @.org.eclipse.ceylon.compiler.java.metadata.Container(
            klass = .org.eclipse.ceylon.compiler.java.test.annotations.MemberObject.class,
            isStatic = false)
    @.org.eclipse.ceylon.compiler.java.metadata.Object
    public final class member_ implements .java.io.Serializable, .org.eclipse.ceylon.compiler.java.runtime.model.ReifiedType {
        
        private member_() {
        }
        
        @.org.eclipse.ceylon.compiler.java.metadata.Ignore
        private final .java.lang.Object writeReplace() {
            final .java.lang.String $name$;
            $name$ = "getMember";
            return new .org.eclipse.ceylon.compiler.java.language.SerializationProxy(.org.eclipse.ceylon.compiler.java.test.annotations.MemberObject.this, .org.eclipse.ceylon.compiler.java.test.annotations.MemberObject.class, $name$);
        }
        
        @.java.lang.Override
        @.org.eclipse.ceylon.compiler.java.metadata.Ignore
        public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
            return .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.org.eclipse.ceylon.compiler.java.test.annotations.MemberObject.$TypeDescriptor$, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.annotations.MemberObject.member_.class));
        }
    }
    
    @.ceylon.language.SharedAnnotation$annotation$
    @.org.eclipse.ceylon.common.NonNull
    @.org.eclipse.ceylon.compiler.java.metadata.TypeInfo("org.eclipse.ceylon.compiler.java.test.annotations::MemberObject.member")
    public final .org.eclipse.ceylon.compiler.java.test.annotations.MemberObject.member_ getMember() {
        if (member == null) member = new .org.eclipse.ceylon.compiler.java.test.annotations.MemberObject.member_();
        return member;
    }
    
    @.org.eclipse.ceylon.compiler.java.metadata.Ignore
    public static void main(.java.lang.String[] args) {
        .org.eclipse.ceylon.compiler.java.Util.storeArgs(args);
        new .org.eclipse.ceylon.compiler.java.test.annotations.MemberObject();
    }
    
    @.java.lang.Override
    @.org.eclipse.ceylon.compiler.java.metadata.Ignore
    public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .org.eclipse.ceylon.compiler.java.test.annotations.MemberObject.$TypeDescriptor$;
    }
    @.org.eclipse.ceylon.compiler.java.metadata.Ignore
    public static final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.annotations.MemberObject.class);
}