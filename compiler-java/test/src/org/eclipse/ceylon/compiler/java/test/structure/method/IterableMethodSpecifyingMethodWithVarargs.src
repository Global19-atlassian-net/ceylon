package org.eclipse.ceylon.compiler.java.test.structure.method;

class IterableMethodSpecifyingMethodWithVarargs implements .org.eclipse.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    IterableMethodSpecifyingMethodWithVarargs() {
    }
    
    private final void foo$priv$() {
        (
            let
            {
                .ceylon.language.Sequential<? extends .ceylon.language.Integer> $ceylontmp$seq$0 = (.ceylon.language.Sequential).ceylon.language.empty_.get_();
                foo$priv$$canonical$($ceylontmp$seq$0);
            }
            returning null;
        );
    }
    
    private void foo$priv$$canonical$(final .ceylon.language.Sequential<? extends .ceylon.language.Integer> seq) {
    }
    
    private final void foo$priv$(final .ceylon.language.Sequential<? extends .ceylon.language.Integer> seq) {
        (
            let
            {
                foo$priv$$canonical$(seq);
            }
            returning null;
        );
    }
    
    private final .java.lang.Object bar$priv$(final .ceylon.language.Sequential<? extends .ceylon.language.Integer> ints) {
        return (
            let
            {
                foo$priv$(ints);
            }
            returning null;
        );
    }
    
    @.java.lang.Override
    public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .org.eclipse.ceylon.compiler.java.test.structure.method.IterableMethodSpecifyingMethodWithVarargs.$TypeDescriptor$;
    }
    public static final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.structure.method.IterableMethodSpecifyingMethodWithVarargs.class);
}