package org.eclipse.ceylon.compiler.java.test.structure.constructor;

@.org.eclipse.ceylon.compiler.java.metadata.Ceylon(
        major = 8,
        minor = 1)
@.ceylon.language.SharedAnnotation$annotation$
@.org.eclipse.ceylon.compiler.java.metadata.Class(constructors = true)
public class Foo implements .org.eclipse.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    @.ceylon.language.SharedAnnotation$annotation$
    @.ceylon.language.RestrictedAnnotation$annotation$(modules = {})
    Foo() {
    }
    @.org.eclipse.ceylon.compiler.java.metadata.Ignore
    static final .org.eclipse.ceylon.compiler.java.test.structure.constructor.Foo.foo_ foo_ = null;
    
    @.org.eclipse.ceylon.compiler.java.metadata.Ceylon(
            major = 8,
            minor = 1)
    @.org.eclipse.ceylon.compiler.java.metadata.Ignore
    @.org.eclipse.ceylon.compiler.java.metadata.ConstructorName("foo")
    static final class foo_ {
        
        foo_() {
        }
    }
    
    @.ceylon.language.SharedAnnotation$annotation$
    @.ceylon.language.RestrictedAnnotation$annotation$(modules = {})
    @.org.eclipse.ceylon.compiler.java.metadata.Name("foo")
    Foo(@.org.eclipse.ceylon.compiler.java.metadata.Ignore
    .org.eclipse.ceylon.compiler.java.test.structure.constructor.Foo.foo_ $name$) {
    }
    
    @.org.eclipse.ceylon.compiler.java.metadata.Ignore
    public static void main(.java.lang.String[] args) {
        .org.eclipse.ceylon.compiler.java.Util.storeArgs(args);
        new .org.eclipse.ceylon.compiler.java.test.structure.constructor.Foo();
    }
    
    @.java.lang.Override
    @.org.eclipse.ceylon.compiler.java.metadata.Ignore
    public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .org.eclipse.ceylon.compiler.java.test.structure.constructor.Foo.$TypeDescriptor$;
    }
    @.org.eclipse.ceylon.compiler.java.metadata.Ignore
    public static final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.structure.constructor.Foo.class);
}
@.org.eclipse.ceylon.compiler.java.metadata.Ceylon(
        major = 8,
        minor = 1)
@.org.eclipse.ceylon.compiler.java.metadata.Method
public final class run_ {
    
    private run_() {
    }
    
    @.ceylon.language.SharedAnnotation$annotation$
    public static void run() {
        new .org.eclipse.ceylon.compiler.java.test.structure.constructor.Foo();
        new .org.eclipse.ceylon.compiler.java.test.structure.constructor.Foo(.org.eclipse.ceylon.compiler.java.test.structure.constructor.Foo.foo_);
    }
    
    @.org.eclipse.ceylon.compiler.java.metadata.Ignore
    public static void main(.java.lang.String[] args) {
        .org.eclipse.ceylon.compiler.java.Util.storeArgs(args);
        .org.eclipse.ceylon.compiler.java.test.structure.constructor.run_.run();
    }
}
