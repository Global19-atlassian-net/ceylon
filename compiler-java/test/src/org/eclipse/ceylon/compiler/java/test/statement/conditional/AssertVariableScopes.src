package org.eclipse.ceylon.compiler.java.test.statement.conditional;

class AssertVariableScopes implements .org.eclipse.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    protected AssertVariableScopes() {
        super();
        this.x = null;
        this.y = null;
    }
    
    AssertVariableScopes(final .java.lang.Object x, final .java.lang.Object y) {
        this.x = x;
        this.y = y;
        final .java.lang.String x$25;
        .java.lang.Object x$24 = null;
        if ((x$24 = getX$priv$()) instanceof .ceylon.language.String) {
            x$25 = ((.ceylon.language.String)x$24).toString();
        } else {
            throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tviolated " + "is String x") + .org.eclipse.ceylon.compiler.java.Util.assertIsFailed(false, .ceylon.language.String.$TypeDescriptor$, x$24));
        }
        .ceylon.language.String.terminal(x$25, 1L);
        final .java.lang.String y$27;
        .java.lang.Object y$26 = null;
        if ((y$26 = getY$priv$()) instanceof .ceylon.language.String) {
            y$27 = ((.ceylon.language.String)y$26).toString();
        } else {
            throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tviolated " + "is String y") + .org.eclipse.ceylon.compiler.java.Util.assertIsFailed(false, .ceylon.language.String.$TypeDescriptor$, y$26));
        }
        .ceylon.language.String.terminal(y$27, 1L);
    }
    private final .java.lang.Object x;
    
    private final .java.lang.Object getX$priv$() {
        return this.x;
    }
    private final .java.lang.Object y;
    
    private final .java.lang.Object getY$priv$() {
        return this.y;
    }
    
    private final void m$priv$() {
        
        final class m_local_ implements .java.io.Serializable {
            
            private m_local_() {
            }
            
            void m_local() {
                final .java.lang.String x$1;
                .java.lang.Object x$0 = null;
                if ((x$0 = .org.eclipse.ceylon.compiler.java.test.statement.conditional.AssertVariableScopes.this.getX$priv$()) instanceof .ceylon.language.String) {
                    x$1 = ((.ceylon.language.String)x$0).toString();
                } else {
                    throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tviolated " + "is String x") + .org.eclipse.ceylon.compiler.java.Util.assertIsFailed(false, .ceylon.language.String.$TypeDescriptor$, x$0));
                }
                .ceylon.language.String.terminal(x$1, 1L);
                final .java.lang.String y$3;
                .java.lang.Object y$2 = null;
                if ((y$2 = .org.eclipse.ceylon.compiler.java.test.statement.conditional.AssertVariableScopes.this.getY$priv$()) instanceof .ceylon.language.String) {
                    y$3 = ((.ceylon.language.String)y$2).toString();
                } else {
                    throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tviolated " + "is String y") + .org.eclipse.ceylon.compiler.java.Util.assertIsFailed(false, .ceylon.language.String.$TypeDescriptor$, y$2));
                }
                .ceylon.language.String.terminal(y$3, 1L);
            }
        }
        final m_local_ m_local = new m_local_();
        
        final class masking_local_ implements .java.io.Serializable {
            
            private masking_local_() {
            }
            
            void masking_local(final .java.lang.Object x, final .java.lang.Object y) {
                final .java.lang.String x$5;
                .java.lang.Object x$4 = null;
                if ((x$4 = x) instanceof .ceylon.language.String) {
                    x$5 = ((.ceylon.language.String)x$4).toString();
                } else {
                    throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tviolated " + "is String x") + .org.eclipse.ceylon.compiler.java.Util.assertIsFailed(false, .ceylon.language.String.$TypeDescriptor$, x$4));
                }
                .ceylon.language.String.terminal(x$5, 1L);
                final .java.lang.String y$7;
                .java.lang.Object y$6 = null;
                if ((y$6 = y) instanceof .ceylon.language.String) {
                    y$7 = ((.ceylon.language.String)y$6).toString();
                } else {
                    throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tviolated " + "is String y") + .org.eclipse.ceylon.compiler.java.Util.assertIsFailed(false, .ceylon.language.String.$TypeDescriptor$, y$6));
                }
                .ceylon.language.String.terminal(y$7, 1L);
            }
        }
        final masking_local_ masking_local = new masking_local_();
        final .java.lang.String x$9;
        .java.lang.Object x$8 = null;
        if ((x$8 = getX$priv$()) instanceof .ceylon.language.String) {
            x$9 = ((.ceylon.language.String)x$8).toString();
        } else {
            throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tviolated " + "is String x") + .org.eclipse.ceylon.compiler.java.Util.assertIsFailed(false, .ceylon.language.String.$TypeDescriptor$, x$8));
        }
        .ceylon.language.String.terminal(x$9, 1L);
        final .java.lang.String y$11;
        .java.lang.Object y$10 = null;
        if ((y$10 = getY$priv$()) instanceof .ceylon.language.String) {
            y$11 = ((.ceylon.language.String)y$10).toString();
        } else {
            throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tviolated " + "is String y") + .org.eclipse.ceylon.compiler.java.Util.assertIsFailed(false, .ceylon.language.String.$TypeDescriptor$, y$10));
        }
        .ceylon.language.String.terminal(y$11, 1L);
    }
    
    private final void masking$priv$(final .java.lang.Object x, final .java.lang.Object y) {
        
        final class m_local_ implements .java.io.Serializable {
            
            private m_local_() {
            }
            
            void m_local() {
                final .java.lang.String x$13;
                .java.lang.Object x$12 = null;
                if ((x$12 = x) instanceof .ceylon.language.String) {
                    x$13 = ((.ceylon.language.String)x$12).toString();
                } else {
                    throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tviolated " + "is String x") + .org.eclipse.ceylon.compiler.java.Util.assertIsFailed(false, .ceylon.language.String.$TypeDescriptor$, x$12));
                }
                .ceylon.language.String.terminal(x$13, 1L);
                final .java.lang.String y$15;
                .java.lang.Object y$14 = null;
                if ((y$14 = y) instanceof .ceylon.language.String) {
                    y$15 = ((.ceylon.language.String)y$14).toString();
                } else {
                    throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tviolated " + "is String y") + .org.eclipse.ceylon.compiler.java.Util.assertIsFailed(false, .ceylon.language.String.$TypeDescriptor$, y$14));
                }
                .ceylon.language.String.terminal(y$15, 1L);
            }
        }
        final m_local_ m_local = new m_local_();
        
        final class masking_local_ implements .java.io.Serializable {
            
            private masking_local_() {
            }
            
            void masking_local(final .java.lang.Object x, final .java.lang.Object y) {
                final .java.lang.String x$17;
                .java.lang.Object x$16 = null;
                if ((x$16 = x) instanceof .ceylon.language.String) {
                    x$17 = ((.ceylon.language.String)x$16).toString();
                } else {
                    throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tviolated " + "is String x") + .org.eclipse.ceylon.compiler.java.Util.assertIsFailed(false, .ceylon.language.String.$TypeDescriptor$, x$16));
                }
                .ceylon.language.String.terminal(x$17, 1L);
                final .java.lang.String y$19;
                .java.lang.Object y$18 = null;
                if ((y$18 = y) instanceof .ceylon.language.String) {
                    y$19 = ((.ceylon.language.String)y$18).toString();
                } else {
                    throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tviolated " + "is String y") + .org.eclipse.ceylon.compiler.java.Util.assertIsFailed(false, .ceylon.language.String.$TypeDescriptor$, y$18));
                }
                .ceylon.language.String.terminal(y$19, 1L);
            }
        }
        final masking_local_ masking_local = new masking_local_();
        final .java.lang.String x$21;
        .java.lang.Object x$20 = null;
        if ((x$20 = x) instanceof .ceylon.language.String) {
            x$21 = ((.ceylon.language.String)x$20).toString();
        } else {
            throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tviolated " + "is String x") + .org.eclipse.ceylon.compiler.java.Util.assertIsFailed(false, .ceylon.language.String.$TypeDescriptor$, x$20));
        }
        .ceylon.language.String.terminal(x$21, 1L);
        final .java.lang.String y$23;
        .java.lang.Object y$22 = null;
        if ((y$22 = y) instanceof .ceylon.language.String) {
            y$23 = ((.ceylon.language.String)y$22).toString();
        } else {
            throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tviolated " + "is String y") + .org.eclipse.ceylon.compiler.java.Util.assertIsFailed(false, .ceylon.language.String.$TypeDescriptor$, y$22));
        }
        .ceylon.language.String.terminal(y$23, 1L);
    }
    
    @.java.lang.Override
    public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .org.eclipse.ceylon.compiler.java.test.statement.conditional.AssertVariableScopes.$TypeDescriptor$;
    }
    public static final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.statement.conditional.AssertVariableScopes.class);
}