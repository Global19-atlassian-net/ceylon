package org.eclipse.ceylon.compiler.java.test.annotations;

@.java.lang.annotation.Retention(.java.lang.annotation.RetentionPolicy.RUNTIME)
@.java.lang.annotation.Target({})
@interface VariadicTricks$annotation$ {
    
    public abstract .java.lang.String[] args() default {};
}
@.java.lang.annotation.Retention(.java.lang.annotation.RetentionPolicy.RUNTIME)
@.java.lang.annotation.Target({.java.lang.annotation.ElementType.TYPE})
@interface VariadicTricks$annotations$ {
    
    public abstract .org.eclipse.ceylon.compiler.java.test.annotations.VariadicTricks$annotation$[] value();
}
@.ceylon.language.FinalAnnotation$annotation$
@.ceylon.language.AnnotationAnnotation$annotation$
final class VariadicTricks implements .org.eclipse.ceylon.compiler.java.runtime.model.ReifiedType, .ceylon.language.SequencedAnnotation<.org.eclipse.ceylon.compiler.java.test.annotations.VariadicTricks, .ceylon.language.meta.declaration.ClassOrInterfaceDeclaration, .java.lang.Object>, .java.io.Serializable {
    
    VariadicTricks() {
        (
            let
            {
                .ceylon.language.Sequential<? extends .ceylon.language.String> $ceylontmp$args$0 = (.ceylon.language.Sequential).ceylon.language.empty_.get_();
                this($ceylontmp$args$0);
            }
            returning null;
        );
    }
    
    VariadicTricks(.org.eclipse.ceylon.compiler.java.test.annotations.VariadicTricks$annotation$ anno) {
        this(.org.eclipse.ceylon.compiler.java.Util.sequentialWrapperBoxed(anno.args()));
    }
    
    VariadicTricks(final .ceylon.language.Sequential<? extends .ceylon.language.String> args) {
    }
    
    @.java.lang.Override
    public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .org.eclipse.ceylon.compiler.java.test.annotations.VariadicTricks.$TypeDescriptor$;
    }
    public static final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.annotations.VariadicTricks.class);
    
    @.java.lang.Override
    public .java.lang.Class<? extends .java.lang.annotation.Annotation> annotationType() {
        return .org.eclipse.ceylon.compiler.java.test.annotations.VariadicTricks$annotation$.class;
    }
}
@.org.eclipse.ceylon.compiler.java.metadata.AnnotationInstantiation(
        arguments = {},
        primary = .org.eclipse.ceylon.compiler.java.test.annotations.VariadicTricks.class)
final class variadicTricksEmpty_ {
    
    private variadicTricksEmpty_() {
    }
    
    @.ceylon.language.AnnotationAnnotation$annotation$
    static .org.eclipse.ceylon.compiler.java.test.annotations.VariadicTricks variadicTricksEmpty() {
        return new .org.eclipse.ceylon.compiler.java.test.annotations.VariadicTricks();
    }
}
@.org.eclipse.ceylon.compiler.java.metadata.AnnotationInstantiation(
        arguments = {
                0,
                0},
        primary = .org.eclipse.ceylon.compiler.java.test.annotations.VariadicTricks.class)
final class variadicTricksRepeated_ {
    
    private variadicTricksRepeated_() {
    }
    
    @.ceylon.language.AnnotationAnnotation$annotation$
    static .org.eclipse.ceylon.compiler.java.test.annotations.VariadicTricks variadicTricksRepeated(final .java.lang.String s) {
        return new .org.eclipse.ceylon.compiler.java.test.annotations.VariadicTricks((.ceylon.language.Sequence).org.eclipse.ceylon.compiler.java.Util.sequentialCopy(.ceylon.language.String.$TypeDescriptor$, new .java.lang.Object[]{
                .ceylon.language.String.instance(s),
                .ceylon.language.String.instance(s)}, .ceylon.language.empty_.get_()));
    }
}
@.org.eclipse.ceylon.compiler.java.metadata.AnnotationInstantiation(
        arguments = {256},
        primary = .org.eclipse.ceylon.compiler.java.test.annotations.VariadicTricks.class)
final class variadicTricks_ {
    
    private variadicTricks_() {
    }
    
    static .org.eclipse.ceylon.compiler.java.test.annotations.VariadicTricks variadicTricks() {
        return (
            let
            {
                .ceylon.language.Sequential<? extends .ceylon.language.String> $ceylontmp$args$1 = (.ceylon.language.Sequential).ceylon.language.empty_.get_();
            }
            returning variadicTricks($ceylontmp$args$1);
        );
    }
    
    @.ceylon.language.AnnotationAnnotation$annotation$
    static .org.eclipse.ceylon.compiler.java.test.annotations.VariadicTricks variadicTricks(final .ceylon.language.Sequential<? extends .ceylon.language.String> args) {
        return new .org.eclipse.ceylon.compiler.java.test.annotations.VariadicTricks(args);
    }
}
@.org.eclipse.ceylon.compiler.java.metadata.AnnotationInstantiation(
        arguments = {256},
        primary = .org.eclipse.ceylon.compiler.java.test.annotations.variadicTricks_.class)
final class variadicTricksIndirect_ {
    
    private variadicTricksIndirect_() {
    }
    
    static .org.eclipse.ceylon.compiler.java.test.annotations.VariadicTricks variadicTricksIndirect() {
        return (
            let
            {
                .ceylon.language.Sequential<? extends .ceylon.language.String> $ceylontmp$args$2 = (.ceylon.language.Sequential).ceylon.language.empty_.get_();
            }
            returning variadicTricksIndirect($ceylontmp$args$2);
        );
    }
    
    @.ceylon.language.AnnotationAnnotation$annotation$
    static .org.eclipse.ceylon.compiler.java.test.annotations.VariadicTricks variadicTricksIndirect(final .ceylon.language.Sequential<? extends .ceylon.language.String> args) {
        return .org.eclipse.ceylon.compiler.java.test.annotations.variadicTricks_.variadicTricks(args);
    }
}
@.org.eclipse.ceylon.compiler.java.metadata.AnnotationInstantiation(
        arguments = {},
        primary = .org.eclipse.ceylon.compiler.java.test.annotations.variadicTricksIndirect_.class)
final class variadicTricksIndirectEmpty_ {
    
    private variadicTricksIndirectEmpty_() {
    }
    
    @.ceylon.language.AnnotationAnnotation$annotation$
    static .org.eclipse.ceylon.compiler.java.test.annotations.VariadicTricks variadicTricksIndirectEmpty() {
        return .org.eclipse.ceylon.compiler.java.test.annotations.variadicTricksIndirect_.variadicTricksIndirect();
    }
}
@.org.eclipse.ceylon.compiler.java.metadata.AnnotationInstantiation(
        arguments = {
                0,
                0},
        primary = .org.eclipse.ceylon.compiler.java.test.annotations.variadicTricksIndirect_.class)
final class variadicTricksIndirectRepeated_ {
    
    private variadicTricksIndirectRepeated_() {
    }
    
    @.ceylon.language.AnnotationAnnotation$annotation$
    static .org.eclipse.ceylon.compiler.java.test.annotations.VariadicTricks variadicTricksIndirectRepeated(final .java.lang.String s) {
        return .org.eclipse.ceylon.compiler.java.test.annotations.variadicTricksIndirect_.variadicTricksIndirect((.ceylon.language.Sequence).org.eclipse.ceylon.compiler.java.Util.sequentialCopy(.ceylon.language.String.$TypeDescriptor$, new .java.lang.Object[]{
                .ceylon.language.String.instance(s),
                .ceylon.language.String.instance(s)}, .ceylon.language.empty_.get_()));
    }
}
@.org.eclipse.ceylon.compiler.java.test.annotations.VariadicTricks$annotations$({
        @.org.eclipse.ceylon.compiler.java.test.annotations.VariadicTricks$annotation$(args = {}),
        @.org.eclipse.ceylon.compiler.java.test.annotations.VariadicTricks$annotation$(args = {
                "repeated",
                "repeated"}),
        @.org.eclipse.ceylon.compiler.java.test.annotations.VariadicTricks$annotation$(args = {}),
        @.org.eclipse.ceylon.compiler.java.test.annotations.VariadicTricks$annotation$(args = "indirect"),
        @.org.eclipse.ceylon.compiler.java.test.annotations.VariadicTricks$annotation$(args = {}),
        @.org.eclipse.ceylon.compiler.java.test.annotations.VariadicTricks$annotation$(args = {
                "indirect-repeated",
                "indirect-repeated"})})
class VariadicTricksCallsite implements .org.eclipse.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    VariadicTricksCallsite() {
    }
    
    @.java.lang.Override
    public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .org.eclipse.ceylon.compiler.java.test.annotations.VariadicTricksCallsite.$TypeDescriptor$;
    }
    public static final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.annotations.VariadicTricksCallsite.class);
}