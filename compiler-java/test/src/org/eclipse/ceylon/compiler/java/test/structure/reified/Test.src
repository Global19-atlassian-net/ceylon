package org.eclipse.ceylon.compiler.java.test.structure.reified;

public interface TestInterface<Key, Value> {
    
    public .org.eclipse.ceylon.compiler.java.test.structure.reified.TestInterface$impl<Key, Value> $org$eclipse$ceylon$compiler$java$test$structure$reified$TestInterface$impl();
    
    public .org.eclipse.ceylon.compiler.java.test.structure.reified.TestInterface$impl<Key, Value>.Inner Inner$new$();
}
public final class TestInterface$impl<Key, Value> implements .java.io.Serializable {
    
    public TestInterface$impl(final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$Key, final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$Value, .org.eclipse.ceylon.compiler.java.test.structure.reified.TestInterface<Key, Value> $this) {
        this.$reified$Key = $reified$Key;
        this.$reified$Value = $reified$Value;
        this.$this = $this;
    }
    private .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$Key;
    private .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$Value;
    private final .org.eclipse.ceylon.compiler.java.test.structure.reified.TestInterface<Key, Value> $this;
    
    public void $refine$(final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$Key, final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$Value) {
        this.$reified$Value = $reified$Value;
        this.$reified$Key = $reified$Key;
    }
    
    public .org.eclipse.ceylon.compiler.java.test.structure.reified.TestInterface$impl<Key, Value>.Inner Inner$new$() {
        return new Inner();
    }
    
    public class Inner implements .org.eclipse.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
        
        protected Inner() {
        }
        
        @.java.lang.Override
        public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
            return .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.structure.reified.TestInterface.class, .org.eclipse.ceylon.compiler.java.test.structure.reified.TestInterface$impl.this.$reified$Key, .org.eclipse.ceylon.compiler.java.test.structure.reified.TestInterface$impl.this.$reified$Value), .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.structure.reified.TestInterface$impl.Inner.class));
        }
    }
}
public interface TestInterface2<Key, Value> {
    
    public .org.eclipse.ceylon.compiler.java.test.structure.reified.TestInterface2$impl<? extends Key, ? extends Value> $org$eclipse$ceylon$compiler$java$test$structure$reified$TestInterface2$impl();
    
    public .org.eclipse.ceylon.compiler.java.test.structure.reified.TestInterface2$impl<? extends Key, ? extends Value>.Inner Inner$new$();
}
public final class TestInterface2$impl<Key, Value> implements .java.io.Serializable {
    
    public TestInterface2$impl(final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$Key, final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$Value, .org.eclipse.ceylon.compiler.java.test.structure.reified.TestInterface2<? extends Key, ? extends Value> $this) {
        this.$reified$Key = $reified$Key;
        this.$reified$Value = $reified$Value;
        this.$this = $this;
    }
    private .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$Key;
    private .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$Value;
    private final .org.eclipse.ceylon.compiler.java.test.structure.reified.TestInterface2<? extends Key, ? extends Value> $this;
    
    public void $refine$(final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$Key, final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$Value) {
        this.$reified$Value = $reified$Value;
        this.$reified$Key = $reified$Key;
    }
    
    public .org.eclipse.ceylon.compiler.java.test.structure.reified.TestInterface2$impl<? extends Key, ? extends Value>.Inner Inner$new$() {
        return new Inner();
    }
    
    public class Inner implements .org.eclipse.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
        
        protected Inner() {
        }
        
        @.java.lang.Override
        public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
            return .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.structure.reified.TestInterface2.class, .org.eclipse.ceylon.compiler.java.test.structure.reified.TestInterface2$impl.this.$reified$Key, .org.eclipse.ceylon.compiler.java.test.structure.reified.TestInterface2$impl.this.$reified$Value), .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.structure.reified.TestInterface2$impl.Inner.class));
        }
    }
}
public class TestClass<Key, Value> implements .org.eclipse.ceylon.compiler.java.runtime.model.ReifiedType, .org.eclipse.ceylon.compiler.java.test.structure.reified.TestInterface<Key, .ceylon.language.Integer>, .java.io.Serializable {
    
    public TestClass(final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$Key, final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$Value) {
        this.$reified$Key = $reified$Key;
        this.$reified$Value = $reified$Value;
        this.$org$eclipse$ceylon$compiler$java$test$structure$reified$TestInterface$this$ = new .org.eclipse.ceylon.compiler.java.test.structure.reified.TestInterface$impl<Key, .ceylon.language.Integer>($reified$Key, .ceylon.language.Integer.$TypeDescriptor$, this);
    }
    private final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$Key;
    private final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$Value;
    protected final .org.eclipse.ceylon.compiler.java.test.structure.reified.TestInterface$impl<Key, .ceylon.language.Integer> $org$eclipse$ceylon$compiler$java$test$structure$reified$TestInterface$this$;
    
    @.java.lang.Override
    public .org.eclipse.ceylon.compiler.java.test.structure.reified.TestInterface$impl<Key, .ceylon.language.Integer> $org$eclipse$ceylon$compiler$java$test$structure$reified$TestInterface$impl() {
        return $org$eclipse$ceylon$compiler$java$test$structure$reified$TestInterface$this$;
    }
    
    @.java.lang.Override
    public final .org.eclipse.ceylon.compiler.java.test.structure.reified.TestInterface$impl<Key, .ceylon.language.Integer>.Inner Inner$new$() {
        return $org$eclipse$ceylon$compiler$java$test$structure$reified$TestInterface$this$.Inner$new$();
    }
    
    public static void main(.java.lang.String[] args) {
        .org.eclipse.ceylon.compiler.java.Util.storeArgs(args);
        new .org.eclipse.ceylon.compiler.java.test.structure.reified.TestClass(.org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType);
    }
    
    @.java.lang.Override
    public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.structure.reified.TestClass.class, $reified$Key, $reified$Value);
    }
}
final class test_ {
    
    private test_() {
    }
    
    static <Key, Value>void test(final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$Key, final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$Value, final .java.lang.Object obj) {
        .java.lang.Object obj$1;
        if ((obj$1 = obj) instanceof .org.eclipse.ceylon.compiler.java.test.structure.reified.TestClass && .org.eclipse.ceylon.compiler.java.Util.isReified(obj$1, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.structure.reified.TestClass.class, .ceylon.language.String.$TypeDescriptor$, .ceylon.language.Integer.$TypeDescriptor$))) {
            final .org.eclipse.ceylon.compiler.java.test.structure.reified.TestClass<.ceylon.language.String, .ceylon.language.Integer> obj$2 = (.org.eclipse.ceylon.compiler.java.test.structure.reified.TestClass<.ceylon.language.String, .ceylon.language.Integer>)(.org.eclipse.ceylon.compiler.java.test.structure.reified.TestClass)obj$1;
        }
        .java.lang.Object obj$4;
        if ((obj$4 = obj) instanceof .org.eclipse.ceylon.compiler.java.test.structure.reified.TestInterface && .org.eclipse.ceylon.compiler.java.Util.isReified(obj$4, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.structure.reified.TestInterface.class, .ceylon.language.String.$TypeDescriptor$, $reified$Value))) {
            final .org.eclipse.ceylon.compiler.java.test.structure.reified.TestInterface<.ceylon.language.String, Value> obj$5 = (.org.eclipse.ceylon.compiler.java.test.structure.reified.TestInterface<.ceylon.language.String, Value>)(.org.eclipse.ceylon.compiler.java.test.structure.reified.TestInterface)obj$4;
        }
        .java.lang.Object obj$7;
        if (.org.eclipse.ceylon.compiler.java.Util.isReified(obj$7 = obj, $reified$Key)) {
            final Key obj$8 = (Key)obj$7;
        }
        final Key objOrNot = (Key)(.java.lang.Object).ceylon.language.nothing_.get_();
        .java.lang.Object objOrNot$10;
        if ((objOrNot$10 = objOrNot) != null) {
            final Key objOrNot$11 = (Key)objOrNot$10;
        }
        .java.lang.Object objOrNot$13;
        if ((objOrNot$13 = objOrNot) != null || objOrNot$13 instanceof .ceylon.language.Integer) {
            final Key objOrNot$14 = (Key)objOrNot$13;
        }
        .java.lang.Object fu$16;
        if ((fu$16 = objOrNot) != null) {
            final Key fu$17 = (Key)fu$16;
        }
        final boolean b = (
            let
            {
                .java.lang.Object $ceylontmp$18 = objOrNot;
            }
            returning $ceylontmp$18 != null;
        );
        {
            Key sel$19 = objOrNot;
            if (sel$19 != null) {
                final Key objOrNot$21 = (Key)sel$19;
            } else {
                final .java.lang.Object objOrNot$20 = (.java.lang.Object)sel$19;
            }
        }
        .java.lang.Object obj$23;
        if ((obj$23 = obj) instanceof .org.eclipse.ceylon.compiler.java.test.structure.reified.TestInterface2) {
            final .org.eclipse.ceylon.compiler.java.test.structure.reified.TestInterface2<? extends .java.lang.Object, ? extends .java.lang.Object> obj$24 = (.org.eclipse.ceylon.compiler.java.test.structure.reified.TestInterface2<? extends .java.lang.Object, ? extends .java.lang.Object>)(.org.eclipse.ceylon.compiler.java.test.structure.reified.TestInterface2)obj$23;
        }
        .java.lang.Object obj$26;
        if ((obj$26 = obj) instanceof .org.eclipse.ceylon.compiler.java.test.structure.reified.TestInterface && .org.eclipse.ceylon.compiler.java.Util.isReified(obj$26, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.structure.reified.TestInterface.class, .ceylon.language.Anything.$TypeDescriptor$, .ceylon.language.Anything.$TypeDescriptor$))) {
            final .org.eclipse.ceylon.compiler.java.test.structure.reified.TestInterface<.java.lang.Object, .java.lang.Object> obj$27 = (.org.eclipse.ceylon.compiler.java.test.structure.reified.TestInterface<.java.lang.Object, .java.lang.Object>)(.org.eclipse.ceylon.compiler.java.test.structure.reified.TestInterface)obj$26;
        }
        .java.lang.Object obj$29;
        if ((obj$29 = obj) instanceof .org.eclipse.ceylon.compiler.java.test.structure.reified.TestInterface && .org.eclipse.ceylon.compiler.java.Util.isReified(obj$29, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.structure.reified.TestInterface.class, .ceylon.language.Anything.$TypeDescriptor$, .ceylon.language.Integer.$TypeDescriptor$))) {
            final .org.eclipse.ceylon.compiler.java.test.structure.reified.TestInterface<.java.lang.Object, .ceylon.language.Integer> obj$30 = (.org.eclipse.ceylon.compiler.java.test.structure.reified.TestInterface<.java.lang.Object, .ceylon.language.Integer>)(.org.eclipse.ceylon.compiler.java.test.structure.reified.TestInterface)obj$29;
        }
        .java.lang.Object obj$32;
        if ((obj$32 = obj) instanceof .org.eclipse.ceylon.compiler.java.test.structure.reified.TestInterface && .org.eclipse.ceylon.compiler.java.Util.isReified(obj$32, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.structure.reified.TestInterface.class, new .org.eclipse.ceylon.compiler.java.metadata.Variance[]{
                .org.eclipse.ceylon.compiler.java.metadata.Variance.OUT,
                .org.eclipse.ceylon.compiler.java.metadata.Variance.IN}, .ceylon.language.Anything.$TypeDescriptor$, .ceylon.language.Integer.$TypeDescriptor$))) {
            final .org.eclipse.ceylon.compiler.java.test.structure.reified.TestInterface<? extends .java.lang.Object, ? super .ceylon.language.Integer> obj$33 = (.org.eclipse.ceylon.compiler.java.test.structure.reified.TestInterface<? extends .java.lang.Object, ? super .ceylon.language.Integer>)(.org.eclipse.ceylon.compiler.java.test.structure.reified.TestInterface)obj$32;
        }
        .java.lang.Object obj$35;
        if ((obj$35 = obj) instanceof .org.eclipse.ceylon.compiler.java.test.structure.reified.TestInterface && .org.eclipse.ceylon.compiler.java.Util.isReified(obj$35, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.structure.reified.TestInterface.class, new .org.eclipse.ceylon.compiler.java.metadata.Variance[]{
                .org.eclipse.ceylon.compiler.java.metadata.Variance.OUT,
                .org.eclipse.ceylon.compiler.java.metadata.Variance.NONE}, .ceylon.language.Anything.$TypeDescriptor$, .ceylon.language.Integer.$TypeDescriptor$))) {
            final .org.eclipse.ceylon.compiler.java.test.structure.reified.TestInterface<? extends .java.lang.Object, .ceylon.language.Integer> obj$36 = (.org.eclipse.ceylon.compiler.java.test.structure.reified.TestInterface<? extends .java.lang.Object, .ceylon.language.Integer>)(.org.eclipse.ceylon.compiler.java.test.structure.reified.TestInterface)obj$35;
        }
        .java.lang.Object obj$38;
        if ((obj$38 = obj) instanceof .org.eclipse.ceylon.compiler.java.test.structure.reified.TestInterface) {
            final .org.eclipse.ceylon.compiler.java.test.structure.reified.TestInterface<? extends .java.lang.Object, ? extends .java.lang.Object> obj$39 = (.org.eclipse.ceylon.compiler.java.test.structure.reified.TestInterface<? extends .java.lang.Object, ? extends .java.lang.Object>)(.org.eclipse.ceylon.compiler.java.test.structure.reified.TestInterface)obj$38;
        }
        .java.lang.Object obj$41;
        if ((obj$41 = obj) instanceof .org.eclipse.ceylon.compiler.java.test.structure.reified.TestInterface$impl.Inner) {
            final .org.eclipse.ceylon.compiler.java.test.structure.reified.TestInterface$impl<? extends .java.lang.Object, ? extends .java.lang.Object>.Inner obj$42 = (.org.eclipse.ceylon.compiler.java.test.structure.reified.TestInterface$impl<? extends .java.lang.Object, ? extends .java.lang.Object>.Inner)(.org.eclipse.ceylon.compiler.java.test.structure.reified.TestInterface$impl.Inner)obj$41;
        }
    }
}
@.org.eclipse.ceylon.compiler.java.metadata.Ceylon(
        major = 8,
        minor = 1)
@.org.eclipse.ceylon.compiler.java.metadata.Method
public final class first_ {
    
    private first_() {
    }
    
    @.ceylon.language.SharedAnnotation$annotation$
    @.org.eclipse.ceylon.compiler.java.metadata.TypeParameters({
            @.org.eclipse.ceylon.compiler.java.metadata.TypeParameter(
                    value = "Value",
                    variance = .org.eclipse.ceylon.compiler.java.metadata.Variance.NONE,
                    satisfies = {},
                    caseTypes = {}),
            @.org.eclipse.ceylon.compiler.java.metadata.TypeParameter(
                    value = "Absent",
                    variance = .org.eclipse.ceylon.compiler.java.metadata.Variance.NONE,
                    satisfies = {"ceylon.language::Null"},
                    caseTypes = {})})
    public static <Value, Absent>void first(@.org.eclipse.ceylon.compiler.java.metadata.Ignore
    final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$Value, @.org.eclipse.ceylon.compiler.java.metadata.Ignore
    final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$Absent) {
        final Value first = (Value)(.java.lang.Object).ceylon.language.nothing_.get_();
        if (.org.eclipse.ceylon.compiler.java.Util.isReified(first, $reified$Absent) || .org.eclipse.ceylon.compiler.java.Util.isReified(first, $reified$Value)) {
        } else {
            throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tviolated " + "is Absent|Value first") + .org.eclipse.ceylon.compiler.java.Util.assertIsFailed(false, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.union($reified$Absent, $reified$Value), first));
        }
    }
    
    @.org.eclipse.ceylon.compiler.java.metadata.Ignore
    public static void main(.java.lang.String[] args) {
        .org.eclipse.ceylon.compiler.java.Util.storeArgs(args);
        .org.eclipse.ceylon.compiler.java.test.structure.reified.first_.first(.org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType);
    }
}