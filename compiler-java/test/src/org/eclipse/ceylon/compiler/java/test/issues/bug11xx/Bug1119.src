package org.eclipse.ceylon.compiler.java.test.issues.bug11xx;

abstract class Bug1119Operation implements .org.eclipse.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    Bug1119Operation() {
    }
    
    public abstract long evaluate(final long left, final long right);
    
    public boolean isOperator(final .java.lang.String token) {
        return toString().equals(token);
    }
    
    @.java.lang.Override
    public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .org.eclipse.ceylon.compiler.java.test.issues.bug11xx.Bug1119Operation.$TypeDescriptor$;
    }
    public static final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.issues.bug11xx.Bug1119Operation.class);
}
final class bug1119Addition_ extends .org.eclipse.ceylon.compiler.java.test.issues.bug11xx.Bug1119Operation implements .java.io.Serializable {
    
    private bug1119Addition_() {
        super();
        this.string = "+";
    }
    
    private .java.lang.Object readResolve() {
        return .org.eclipse.ceylon.compiler.java.test.issues.bug11xx.bug1119Addition_.get_();
    }
    public static final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.issues.bug11xx.bug1119Addition_.class);
    
    @.java.lang.Override
    public final long evaluate(final long left, final long right) {
        return left + right;
    }
    private final .java.lang.String string;
    
    @.java.lang.Override
    public final .java.lang.String toString() {
        return this.string;
    }
    
    @.java.lang.Override
    public final boolean isOperator(final .java.lang.String token) {
        final boolean b1 = "+".equals(token) || "and".equals(token);
        final boolean b2 = toString().equals(token) || "and".equals(token);
        return b2;
    }
    private static final .org.eclipse.ceylon.compiler.java.test.issues.bug11xx.bug1119Addition_ $object$;
    private static volatile boolean $init$$object$ = false;
    private static final .java.lang.Throwable $initException$;
    static {
        try {
            $object$ = new .org.eclipse.ceylon.compiler.java.test.issues.bug11xx.bug1119Addition_();
            .org.eclipse.ceylon.compiler.java.test.issues.bug11xx.bug1119Addition_.$init$$object$ = true;
            $initException$ = null;
        } catch (.java.lang.Throwable x) {
            $initException$ = x;
            $object$ = null;
            .org.eclipse.ceylon.compiler.java.test.issues.bug11xx.bug1119Addition_.$init$$object$ = false;
        }
    }
    
    static .org.eclipse.ceylon.compiler.java.test.issues.bug11xx.bug1119Addition_ get_() {
        if (.org.eclipse.ceylon.compiler.java.test.issues.bug11xx.bug1119Addition_.$init$$object$) {
            return .org.eclipse.ceylon.compiler.java.test.issues.bug11xx.bug1119Addition_.$object$;
        } else {
            if ($initException$ != null) .org.eclipse.ceylon.compiler.java.Util.rethrow($initException$);
            throw new .ceylon.language.InitializationError("Cyclic initialization trying to read the value of \'bug1119Addition\' before it was set");
        }
    }
    
    @.java.lang.Override
    public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .org.eclipse.ceylon.compiler.java.test.issues.bug11xx.bug1119Addition_.$TypeDescriptor$;
    }
}
public final class bug1119Test_ {
    
    private bug1119Test_() {
    }
    
    public static void bug1119Test() {
        .ceylon.language.print_.print(.ceylon.language.String.instance(new .java.lang.StringBuilder().append("Should consider \'+\' as addition operator but returns ").append(.org.eclipse.ceylon.compiler.java.test.issues.bug11xx.bug1119Addition_.get_().isOperator("+")).toString()));
    }
    
    public static void main(.java.lang.String[] args) {
        .org.eclipse.ceylon.compiler.java.Util.storeArgs(args);
        .org.eclipse.ceylon.compiler.java.test.issues.bug11xx.bug1119Test_.bug1119Test();
    }
}