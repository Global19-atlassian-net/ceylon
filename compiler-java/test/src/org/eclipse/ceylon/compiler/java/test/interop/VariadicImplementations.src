package org.eclipse.ceylon.compiler.java.test.interop;

abstract class VariadicImplementations1 extends .org.eclipse.ceylon.compiler.java.test.interop.TypesJava2<.ceylon.language.String> implements .org.eclipse.ceylon.compiler.java.runtime.model.ReifiedType {
    
    VariadicImplementations1() {
        super();
    }
    
    @.java.lang.Override
    public final void variadicT(final .ceylon.language.String... vars) {
        final .ceylon.language.Sequential<? extends .ceylon.language.String> vars$0 = .org.eclipse.ceylon.compiler.java.Util.<.ceylon.language.String>sequentialWrapperCopy(.org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.union(.ceylon.language.Null.$TypeDescriptor$, .ceylon.language.String.$TypeDescriptor$), vars);
    }
    
    @.java.lang.Override
    public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .org.eclipse.ceylon.compiler.java.test.interop.VariadicImplementations1.$TypeDescriptor$;
    }
    public static final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.interop.VariadicImplementations1.class);
}
abstract class VariadicImplementations2 extends .org.eclipse.ceylon.compiler.java.test.interop.TypesJava implements .org.eclipse.ceylon.compiler.java.runtime.model.ReifiedType {
    
    VariadicImplementations2() {
        super();
    }
    
    @.java.lang.Override
    public final boolean variadicBooleanRet(final boolean... vars) {
        return (
            let
            {
                final .ceylon.language.Sequential<? extends .ceylon.language.Boolean> vars$1 = .org.eclipse.ceylon.compiler.java.Util.sequentialWrapperBoxed(vars);
            }
            returning (
                let
                {
                    .ceylon.language.Boolean $ceylontmp$2 = (.ceylon.language.Boolean)(.java.lang.Object)vars$1.getFirst();
                }
                returning $ceylontmp$2 != null ? $ceylontmp$2 : .ceylon.language.Boolean.instance(true);
            ).booleanValue();
        );
    }
    
    @.java.lang.Override
    public final void variadicBoolean(final boolean... vars) {
        final .ceylon.language.Sequential<? extends .ceylon.language.Boolean> vars$3 = .org.eclipse.ceylon.compiler.java.Util.sequentialWrapperBoxed(vars);
        final .ceylon.language.Sequential<? extends .ceylon.language.Boolean> vars2 = vars$3;
        variadicBoolean(.org.eclipse.ceylon.compiler.java.Util.toBooleanArray(vars$3));
        variadicBoolean();
        variadicBoolean(new boolean[]{true});
        variadicBoolean(new boolean[]{
                true,
                false});
    }
    
    @.java.lang.Override
    public final void variadicCeylonBoolean(final .ceylon.language.Boolean... vars) {
        final .ceylon.language.Sequential<? extends .ceylon.language.Boolean> vars$4 = .org.eclipse.ceylon.compiler.java.Util.<.ceylon.language.Boolean>sequentialWrapperCopy(.org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.union(.ceylon.language.Null.$TypeDescriptor$, .ceylon.language.Boolean.$TypeDescriptor$), vars);
        final .ceylon.language.Sequential<? extends .ceylon.language.Boolean> vars2 = vars$4;
        variadicCeylonBoolean((
            let
            {
                .ceylon.language.Sequential<? extends .ceylon.language.Boolean> $ceylontmp$5$0 = vars$4;
            }
            returning .org.eclipse.ceylon.compiler.java.Util.<.ceylon.language.Boolean>toArray($ceylontmp$5$0, new .ceylon.language.Boolean[.org.eclipse.ceylon.compiler.java.Util.toInt($ceylontmp$5$0.getSize())]);
        ));
        variadicCeylonBoolean();
        variadicCeylonBoolean(.ceylon.language.Boolean.instance(true));
        variadicCeylonBoolean(.ceylon.language.Boolean.instance(true), .ceylon.language.Boolean.instance(false));
    }
    
    @.java.lang.Override
    public final void variadicChar(final char... vars) {
        final .ceylon.language.Sequential<? extends .ceylon.language.Character> vars$6 = .org.eclipse.ceylon.compiler.java.Util.sequentialWrapperBoxed(vars);
        final .ceylon.language.Sequential<? extends .ceylon.language.Character> vars2 = vars$6;
        variadicChar(.org.eclipse.ceylon.compiler.java.Util.toCharArray(vars$6));
        variadicChar();
        super.variadicChar(new char[]{(char)97});
        variadicChar(new char[]{
                (char)97,
                (char)98});
    }
    
    @.java.lang.Override
    public final void variadicByte(final byte... vars) {
        final .ceylon.language.Sequential<? extends .ceylon.language.Byte> vars$7 = .org.eclipse.ceylon.compiler.java.Util.sequentialWrapperBoxed(vars);
        final .ceylon.language.Sequential<? extends .ceylon.language.Byte> vars2 = vars$7;
        variadicByte(.org.eclipse.ceylon.compiler.java.Util.toByteArray(vars$7));
        variadicByte();
        variadicByte(new byte[]{(byte)0L});
        variadicByte(new byte[]{
                (byte)0L,
                (byte)1L});
    }
    
    @.java.lang.Override
    public final void variadicShort(final short... vars) {
        final .ceylon.language.Sequential<? extends .ceylon.language.Integer> vars$8 = .org.eclipse.ceylon.compiler.java.Util.sequentialWrapperBoxed(vars);
        final .ceylon.language.Sequential<? extends .ceylon.language.Integer> vars2 = vars$8;
        variadicShort(.org.eclipse.ceylon.compiler.java.Util.toShortArray(vars$8));
        variadicShort();
        variadicShort(new short[]{.org.eclipse.ceylon.compiler.java.Util.toShort(1L)});
        variadicShort(new short[]{
                .org.eclipse.ceylon.compiler.java.Util.toShort(1L),
                .org.eclipse.ceylon.compiler.java.Util.toShort(2L)});
    }
    
    @.java.lang.Override
    public final void variadicInt(final int... vars) {
        final .ceylon.language.Sequential<? extends .ceylon.language.Integer> vars$9 = .org.eclipse.ceylon.compiler.java.Util.sequentialWrapperBoxedForInteger(vars);
        final .ceylon.language.Sequential<? extends .ceylon.language.Integer> vars2 = vars$9;
        variadicInt(.org.eclipse.ceylon.compiler.java.Util.toIntArray(vars$9));
        variadicInt();
        variadicInt(new int[]{.org.eclipse.ceylon.compiler.java.Util.toInt(1L)});
        variadicInt(new int[]{
                .org.eclipse.ceylon.compiler.java.Util.toInt(1L),
                .org.eclipse.ceylon.compiler.java.Util.toInt(2L)});
    }
    
    @.java.lang.Override
    public final void variadicLong(final long... vars) {
        final .ceylon.language.Sequential<? extends .ceylon.language.Integer> vars$10 = .org.eclipse.ceylon.compiler.java.Util.sequentialWrapperBoxed(vars);
        final .ceylon.language.Sequential<? extends .ceylon.language.Integer> vars2 = vars$10;
        variadicLong(.org.eclipse.ceylon.compiler.java.Util.toLongArray(vars$10));
        variadicLong();
        variadicLong(new long[]{1L});
        variadicLong(new long[]{
                1L,
                2L});
    }
    
    @.java.lang.Override
    public final void variadicCeylonInteger(final .ceylon.language.Integer... vars) {
        final .ceylon.language.Sequential<? extends .ceylon.language.Integer> vars$11 = .org.eclipse.ceylon.compiler.java.Util.<.ceylon.language.Integer>sequentialWrapperCopy(.org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.union(.ceylon.language.Null.$TypeDescriptor$, .ceylon.language.Integer.$TypeDescriptor$), vars);
        final .ceylon.language.Sequential<? extends .ceylon.language.Integer> vars2 = vars$11;
        variadicCeylonInteger((
            let
            {
                .ceylon.language.Sequential<? extends .ceylon.language.Integer> $ceylontmp$12$0 = vars$11;
            }
            returning .org.eclipse.ceylon.compiler.java.Util.<.ceylon.language.Integer>toArray($ceylontmp$12$0, new .ceylon.language.Integer[.org.eclipse.ceylon.compiler.java.Util.toInt($ceylontmp$12$0.getSize())]);
        ));
        variadicCeylonInteger();
        variadicCeylonInteger(.ceylon.language.Integer.instance(1L));
        variadicCeylonInteger(.ceylon.language.Integer.instance(1L), .ceylon.language.Integer.instance(2L));
    }
    
    @.java.lang.Override
    public final void variadicFloat(final float... vars) {
        final .ceylon.language.Sequential<? extends .ceylon.language.Float> vars$13 = .org.eclipse.ceylon.compiler.java.Util.sequentialWrapperBoxed(vars);
        final .ceylon.language.Sequential<? extends .ceylon.language.Float> vars2 = vars$13;
        variadicFloat(.org.eclipse.ceylon.compiler.java.Util.toFloatArray(vars$13));
        variadicFloat();
        variadicFloat(new float[]{(float)1.0});
        variadicFloat(new float[]{
                (float)1.0,
                (float)2.0});
    }
    
    @.java.lang.Override
    public final void variadicDouble(final double... vars) {
        final .ceylon.language.Sequential<? extends .ceylon.language.Float> vars$14 = .org.eclipse.ceylon.compiler.java.Util.sequentialWrapperBoxed(vars);
        final .ceylon.language.Sequential<? extends .ceylon.language.Float> vars2 = vars$14;
        variadicDouble(.org.eclipse.ceylon.compiler.java.Util.toDoubleArray(vars$14));
        variadicDouble();
        variadicDouble(new double[]{1.0});
        variadicDouble(new double[]{
                1.0,
                2.0});
    }
    
    @.java.lang.Override
    public final void variadicCeylonFloat(final .ceylon.language.Float... vars) {
        final .ceylon.language.Sequential<? extends .ceylon.language.Float> vars$15 = .org.eclipse.ceylon.compiler.java.Util.<.ceylon.language.Float>sequentialWrapperCopy(.org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.union(.ceylon.language.Null.$TypeDescriptor$, .ceylon.language.Float.$TypeDescriptor$), vars);
        final .ceylon.language.Sequential<? extends .ceylon.language.Float> vars2 = vars$15;
        variadicCeylonFloat((
            let
            {
                .ceylon.language.Sequential<? extends .ceylon.language.Float> $ceylontmp$16$0 = vars$15;
            }
            returning .org.eclipse.ceylon.compiler.java.Util.<.ceylon.language.Float>toArray($ceylontmp$16$0, new .ceylon.language.Float[.org.eclipse.ceylon.compiler.java.Util.toInt($ceylontmp$16$0.getSize())]);
        ));
        variadicCeylonFloat();
        variadicCeylonFloat(.ceylon.language.Float.instance(1.0));
        variadicCeylonFloat(.ceylon.language.Float.instance(1.0), .ceylon.language.Float.instance(2.0));
    }
    
    @.java.lang.Override
    public final void variadicJavaString(final .java.lang.String... vars) {
        final .ceylon.language.Sequential<? extends .ceylon.language.String> vars$17 = .org.eclipse.ceylon.compiler.java.Util.sequentialWrapperBoxed(vars);
        final .ceylon.language.Sequential<? extends .ceylon.language.String> vars2 = vars$17;
        variadicJavaString(.org.eclipse.ceylon.compiler.java.Util.toJavaStringArray(vars$17));
        variadicJavaString();
        variadicJavaString("a");
        variadicJavaString("a", "b");
    }
    
    @.java.lang.Override
    public final void variadicCeylonString(final .ceylon.language.String... vars) {
        final .ceylon.language.Sequential<? extends .ceylon.language.String> vars$18 = .org.eclipse.ceylon.compiler.java.Util.<.ceylon.language.String>sequentialWrapperCopy(.org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.union(.ceylon.language.Null.$TypeDescriptor$, .ceylon.language.String.$TypeDescriptor$), vars);
        final .ceylon.language.Sequential<? extends .ceylon.language.String> vars2 = vars$18;
        variadicCeylonString((
            let
            {
                .ceylon.language.Sequential<? extends .ceylon.language.String> $ceylontmp$19$0 = vars$18;
            }
            returning .org.eclipse.ceylon.compiler.java.Util.<.ceylon.language.String>toArray($ceylontmp$19$0, new .ceylon.language.String[.org.eclipse.ceylon.compiler.java.Util.toInt($ceylontmp$19$0.getSize())]);
        ));
        variadicCeylonString();
        variadicCeylonString(.ceylon.language.String.instance("a"));
        variadicCeylonString(.ceylon.language.String.instance("a"), .ceylon.language.String.instance("b"));
    }
    
    @.java.lang.Override
    public final void variadicObject(final .java.lang.Object... vars) {
        final .ceylon.language.Sequential<? extends .java.lang.Object> vars$20 = .org.eclipse.ceylon.compiler.java.Util.<.java.lang.Object>sequentialWrapperCopy(.org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.union(.ceylon.language.Null.$TypeDescriptor$, .ceylon.language.Object.$TypeDescriptor$), vars);
        final .ceylon.language.Sequential<? extends .java.lang.Object> vars2 = vars$20;
        variadicObject((
            let
            {
                .ceylon.language.Sequential<? extends .java.lang.Object> $ceylontmp$21$0 = vars$20;
            }
            returning .org.eclipse.ceylon.compiler.java.Util.<.java.lang.Object>toArray($ceylontmp$21$0, new .java.lang.Object[.org.eclipse.ceylon.compiler.java.Util.toInt($ceylontmp$21$0.getSize())]);
        ));
        variadicObject();
        variadicObject(.ceylon.language.String.instance("a"));
        variadicObject(.ceylon.language.String.instance("a"), .ceylon.language.String.instance("b"));
    }
    
    @.java.lang.Override
    public final void variadicObjectArray(final .java.lang.Object[]... vars) {
        final .ceylon.language.Sequential<? extends .java.lang.Object[]> vars$22 = .org.eclipse.ceylon.compiler.java.Util.<.java.lang.Object[]>sequentialWrapperCopy(.org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.union(.ceylon.language.Null.$TypeDescriptor$, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.language.ObjectArray.class, .ceylon.language.Object.$TypeDescriptor$)), vars);
        final .ceylon.language.Sequential<? extends .java.lang.Object[]> vars2 = vars$22;
        variadicObjectArray((
            let
            {
                .ceylon.language.Sequential<? extends .java.lang.Object[]> $ceylontmp$23$0 = vars$22;
            }
            returning .org.eclipse.ceylon.compiler.java.Util.<.java.lang.Object[]>toArray($ceylontmp$23$0, new .java.lang.Object[.org.eclipse.ceylon.compiler.java.Util.toInt($ceylontmp$23$0.getSize())][]);
        ));
        variadicObjectArray();
        variadicObjectArray((.java.lang.Object[])new .java.lang.Object[1]);
        variadicObjectArray((.java.lang.Object[])new .java.lang.Object[1], (.java.lang.Object[])new .java.lang.Object[1]);
    }
    
    @.java.lang.Override
    public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .org.eclipse.ceylon.compiler.java.test.interop.VariadicImplementations2.$TypeDescriptor$;
    }
    public static final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.interop.VariadicImplementations2.class);
}