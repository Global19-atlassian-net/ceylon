package org.eclipse.ceylon.compiler.java.test.issues.bug19xx;

interface Out1927<Element> {
}
interface In1927<Element extends .ceylon.language.Sequence<? extends .java.lang.Object>> extends .org.eclipse.ceylon.compiler.java.test.issues.bug19xx.Out1927<.java.lang.Object> {
    
    public abstract boolean add(final Element element);
}
class Test1927 implements .org.eclipse.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    Test1927() {
    }
    
    public final void construct() {
        
        class State<CompilerBugWorkaround> implements .org.eclipse.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
            
            State(final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$CompilerBugWorkaround, final .org.eclipse.ceylon.compiler.java.test.issues.bug19xx.In1927<? super .ceylon.language.Sequence<? extends .java.lang.Object>> positions) {
                this.$reified$CompilerBugWorkaround = $reified$CompilerBugWorkaround;
                this.positions = positions;
                ((.org.eclipse.ceylon.compiler.java.test.issues.bug19xx.In1927<? super .ceylon.language.Sequence<? extends .java.lang.Object>>)(.org.eclipse.ceylon.compiler.java.test.issues.bug19xx.In1927)getPositions()).add((.ceylon.language.Sequence<? extends .java.lang.Object>)(.ceylon.language.Sequence)(.ceylon.language.Sequence<? extends .java.lang.Object>).ceylon.language.Tuple.instance(.org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.union(.org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.meta.model.Method.class, .org.eclipse.ceylon.compiler.java.test.issues.bug19xx.Test1927.$TypeDescriptor$, .ceylon.language.Anything.$TypeDescriptor$, .ceylon.language.Empty.$TypeDescriptor$), .ceylon.language.Integer.$TypeDescriptor$), new .java.lang.Object[]{
                        (.ceylon.language.meta.model.Method<? super .org.eclipse.ceylon.compiler.java.test.issues.bug19xx.Test1927, ? extends .java.lang.Object, ? super .ceylon.language.Empty>)(.ceylon.language.meta.model.Method)((.ceylon.language.meta.model.ClassOrInterface<? extends .org.eclipse.ceylon.compiler.java.test.issues.bug19xx.Test1927>).ceylon.language.meta.typeLiteral_.typeLiteral(.org.eclipse.ceylon.compiler.java.test.issues.bug19xx.Test1927.$TypeDescriptor$)).getMethod(.org.eclipse.ceylon.compiler.java.test.issues.bug19xx.Test1927.$TypeDescriptor$, .ceylon.language.Anything.$TypeDescriptor$, .ceylon.language.Empty.$TypeDescriptor$, "construct"),
                        .ceylon.language.Integer.instance(0L)}));
            }
            private final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$CompilerBugWorkaround;
            private final .org.eclipse.ceylon.compiler.java.test.issues.bug19xx.In1927<? super .ceylon.language.Sequence<? extends .java.lang.Object>> positions;
            
            public final .org.eclipse.ceylon.compiler.java.test.issues.bug19xx.In1927<? super .ceylon.language.Sequence<? extends .java.lang.Object>> getPositions() {
                return this.positions;
            }
            
            @.java.lang.Override
            public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
                return .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.org.eclipse.ceylon.compiler.java.test.issues.bug19xx.Test1927.$TypeDescriptor$, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.functionOrValue("construct")), .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(State.class, $reified$CompilerBugWorkaround));
            }
        }
    }
    
    @.java.lang.Override
    public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .org.eclipse.ceylon.compiler.java.test.issues.bug19xx.Test1927.$TypeDescriptor$;
    }
    public static final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.issues.bug19xx.Test1927.class);
}