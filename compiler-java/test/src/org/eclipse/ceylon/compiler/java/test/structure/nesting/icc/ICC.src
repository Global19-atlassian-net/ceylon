package org.eclipse.ceylon.compiler.java.test.structure.nesting.icc;

interface I<T extends .ceylon.language.String, X extends .ceylon.language.Boolean> {
    
    public .org.eclipse.ceylon.compiler.java.test.structure.nesting.icc.I$impl<? extends T, ? super X> $org$eclipse$ceylon$compiler$java$test$structure$nesting$icc$I$impl();
    
    public abstract <U>T m1(final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$U, final X b);
    
    public abstract <U>U m1$u(final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$U, final X b);
    
    public abstract <U>T m1(final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$U, final X b, final U u);
}
final class I$impl<T extends .ceylon.language.String, X extends .ceylon.language.Boolean> implements .java.io.Serializable {
    
    I$impl(final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$T, final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$X, .org.eclipse.ceylon.compiler.java.test.structure.nesting.icc.I<? extends T, ? super X> $this) {
        this.$reified$T = $reified$T;
        this.$reified$X = $reified$X;
        this.$this = $this;
    }
    private .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$T;
    private .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$X;
    private final .org.eclipse.ceylon.compiler.java.test.structure.nesting.icc.I<? extends T, ? super X> $this;
    
    public void $refine$(final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$T, final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$X) {
        this.$reified$X = $reified$X;
        this.$reified$T = $reified$T;
    }
    
    public final <U>U m1$u(final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$U, final X b) {
        return null;
    }
    
    class IC implements .org.eclipse.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
        
        IC() {
        }
        
        class ICC implements .org.eclipse.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
            
            ICC() {
            }
            
            private final T m2$priv$() {
                return (T)(.java.lang.Object)$this.<.java.lang.Object>m1(.org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType, null);
            }
            
            @.java.lang.Override
            public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
                return .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.structure.nesting.icc.I.class, .org.eclipse.ceylon.compiler.java.test.structure.nesting.icc.I$impl.this.$reified$T, .org.eclipse.ceylon.compiler.java.test.structure.nesting.icc.I$impl.this.$reified$X), .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.structure.nesting.icc.I$impl.IC.class)), .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.structure.nesting.icc.I$impl.IC.ICC.class));
            }
        }
        
        @.java.lang.Override
        public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
            return .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.structure.nesting.icc.I.class, .org.eclipse.ceylon.compiler.java.test.structure.nesting.icc.I$impl.this.$reified$T, .org.eclipse.ceylon.compiler.java.test.structure.nesting.icc.I$impl.this.$reified$X), .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.structure.nesting.icc.I$impl.IC.class));
        }
    }
}