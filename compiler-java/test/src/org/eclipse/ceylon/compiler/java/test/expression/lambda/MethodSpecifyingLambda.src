package org.eclipse.ceylon.compiler.java.test.expression.lambda;

class MethodSpecifyingLambda implements .org.eclipse.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    MethodSpecifyingLambda() {
        this.m = new .org.eclipse.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.String>(.ceylon.language.String.$TypeDescriptor$, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.tuple(false, false, -1, .ceylon.language.String.$TypeDescriptor$), "String(String)", (short)-1){
            
            @.java.lang.Override
            public .ceylon.language.String $call$(final .java.lang.Object $param$0) {
                final .java.lang.String name2 = ((.ceylon.language.String)$param$0).toString();
                return .ceylon.language.String.instance("hello " + name2);
            }
        };
    }
    private final .ceylon.language.Callable<? extends .ceylon.language.String> m;
    
    public final .ceylon.language.Callable<? extends .ceylon.language.String> getM() {
        return this.m;
    }
    
    @.java.lang.Override
    public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .org.eclipse.ceylon.compiler.java.test.expression.lambda.MethodSpecifyingLambda.$TypeDescriptor$;
    }
    public static final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.expression.lambda.MethodSpecifyingLambda.class);
}