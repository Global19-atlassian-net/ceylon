package org.eclipse.ceylon.compiler.java.test.expression.comprehensions;

class ComprehensionMemberQualClass implements .org.eclipse.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    ComprehensionMemberQualClass() {
        this.i = 1L;
    }
    
    public final long next() {
        return 1L;
    }
    private final long i;
    
    public final long getI() {
        return this.i;
    }
    
    private final void m$priv$() {
        final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> l = new .org.eclipse.ceylon.compiler.java.language.ConstantIterable<.ceylon.language.Integer, .java.lang.Object>(.ceylon.language.Integer.$TypeDescriptor$, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType, new .org.eclipse.ceylon.compiler.java.language.AbstractIterable<.ceylon.language.Integer, .java.lang.Object>(.ceylon.language.Integer.$TypeDescriptor$, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType){
            
            public final .ceylon.language.Iterator<.ceylon.language.Integer> iterator() {
                return new .org.eclipse.ceylon.compiler.java.language.AbstractIterator<.ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor$){
                    {
                        $iterator$0 = new .org.eclipse.ceylon.compiler.java.language.ConstantIterable<.ceylon.language.Integer, .java.lang.Object>(.ceylon.language.Integer.$TypeDescriptor$, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType, null, .ceylon.language.Integer.instance(1L)).iterator();
                    }
                    private final .ceylon.language.Iterator<? extends .ceylon.language.Integer> $iterator$0;
                    private .ceylon.language.Integer i;
                    private boolean i$exhausted$;
                    
                    private final boolean i() {
                        final .java.lang.Object $ceylontmp$item$0 = $iterator$0.next();
                        i$exhausted$ = $ceylontmp$item$0 == .ceylon.language.finished_.get_();
                        if (i$exhausted$) {
                            return false;
                        } else {
                            i = (.ceylon.language.Integer)$ceylontmp$item$0;
                            return true;
                        }
                    }
                    
                    public final .java.lang.Object next() {
                        if (this.i()) {
                            final .ceylon.language.Integer i = this.i;
                            return .ceylon.language.Integer.instance(.org.eclipse.ceylon.compiler.java.test.expression.comprehensions.ComprehensionMemberQualClass.this.next() + .org.eclipse.ceylon.compiler.java.test.expression.comprehensions.ComprehensionMemberQualClass.this.getI());
                        } else return .ceylon.language.finished_.get_();
                    }
                };
            }
        });
    }
    
    public .org.eclipse.ceylon.compiler.java.test.expression.comprehensions.ComprehensionMemberQualClass.Inner Inner$new$() {
        return new Inner();
    }
    
    public class Inner implements .org.eclipse.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
        
        protected Inner() {
            this.i = 1L;
        }
        
        public final long next() {
            return 1L;
        }
        private final long i;
        
        public final long getI() {
            return this.i;
        }
        
        private final void m$priv$() {
            final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> l = new .org.eclipse.ceylon.compiler.java.language.ConstantIterable<.ceylon.language.Integer, .java.lang.Object>(.ceylon.language.Integer.$TypeDescriptor$, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType, new .org.eclipse.ceylon.compiler.java.language.AbstractIterable<.ceylon.language.Integer, .java.lang.Object>(.ceylon.language.Integer.$TypeDescriptor$, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType){
                
                public final .ceylon.language.Iterator<.ceylon.language.Integer> iterator() {
                    return new .org.eclipse.ceylon.compiler.java.language.AbstractIterator<.ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor$){
                        {
                            $iterator$0 = new .org.eclipse.ceylon.compiler.java.language.ConstantIterable<.ceylon.language.Integer, .java.lang.Object>(.ceylon.language.Integer.$TypeDescriptor$, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType, null, .ceylon.language.Integer.instance(1L)).iterator();
                        }
                        private final .ceylon.language.Iterator<? extends .ceylon.language.Integer> $iterator$0;
                        private .ceylon.language.Integer i;
                        private boolean i$exhausted$;
                        
                        private final boolean i() {
                            final .java.lang.Object $ceylontmp$item$1 = $iterator$0.next();
                            i$exhausted$ = $ceylontmp$item$1 == .ceylon.language.finished_.get_();
                            if (i$exhausted$) {
                                return false;
                            } else {
                                i = (.ceylon.language.Integer)$ceylontmp$item$1;
                                return true;
                            }
                        }
                        
                        public final .java.lang.Object next() {
                            if (this.i()) {
                                final .ceylon.language.Integer i = this.i;
                                return .ceylon.language.Integer.instance(.org.eclipse.ceylon.compiler.java.test.expression.comprehensions.ComprehensionMemberQualClass.Inner.this.next() + .org.eclipse.ceylon.compiler.java.test.expression.comprehensions.ComprehensionMemberQualClass.this.next() + .org.eclipse.ceylon.compiler.java.test.expression.comprehensions.ComprehensionMemberQualClass.Inner.this.getI());
                            } else return .ceylon.language.finished_.get_();
                        }
                    };
                }
            });
        }
        
        @.java.lang.Override
        public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
            return .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.org.eclipse.ceylon.compiler.java.test.expression.comprehensions.ComprehensionMemberQualClass.$TypeDescriptor$, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.expression.comprehensions.ComprehensionMemberQualClass.Inner.class));
        }
    }
    
    @.java.lang.Override
    public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .org.eclipse.ceylon.compiler.java.test.expression.comprehensions.ComprehensionMemberQualClass.$TypeDescriptor$;
    }
    public static final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.expression.comprehensions.ComprehensionMemberQualClass.class);
}
interface ComprehensionMemberQualInterfaceFormal {
    
    public .org.eclipse.ceylon.compiler.java.test.expression.comprehensions.ComprehensionMemberQualInterfaceFormal$impl $org$eclipse$ceylon$compiler$java$test$expression$comprehensions$ComprehensionMemberQualInterfaceFormal$impl();
    
    public abstract long next();
    
    public abstract long getI();
    public static final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.expression.comprehensions.ComprehensionMemberQualInterfaceFormal.class);
}
final class ComprehensionMemberQualInterfaceFormal$impl implements .java.io.Serializable {
    
    ComprehensionMemberQualInterfaceFormal$impl(.org.eclipse.ceylon.compiler.java.test.expression.comprehensions.ComprehensionMemberQualInterfaceFormal $this) {
        this.$this = $this;
    }
    private final .org.eclipse.ceylon.compiler.java.test.expression.comprehensions.ComprehensionMemberQualInterfaceFormal $this;
    
    private void m$priv$() {
        final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> l = new .org.eclipse.ceylon.compiler.java.language.ConstantIterable<.ceylon.language.Integer, .java.lang.Object>(.ceylon.language.Integer.$TypeDescriptor$, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType, new .org.eclipse.ceylon.compiler.java.language.AbstractIterable<.ceylon.language.Integer, .java.lang.Object>(.ceylon.language.Integer.$TypeDescriptor$, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType){
            
            public final .ceylon.language.Iterator<.ceylon.language.Integer> iterator() {
                return new .org.eclipse.ceylon.compiler.java.language.AbstractIterator<.ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor$){
                    {
                        $iterator$0 = new .org.eclipse.ceylon.compiler.java.language.ConstantIterable<.ceylon.language.Integer, .java.lang.Object>(.ceylon.language.Integer.$TypeDescriptor$, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType, null, .ceylon.language.Integer.instance(1L)).iterator();
                    }
                    private final .ceylon.language.Iterator<? extends .ceylon.language.Integer> $iterator$0;
                    private .ceylon.language.Integer i;
                    private boolean i$exhausted$;
                    
                    private final boolean i() {
                        final .java.lang.Object $ceylontmp$item$2 = $iterator$0.next();
                        i$exhausted$ = $ceylontmp$item$2 == .ceylon.language.finished_.get_();
                        if (i$exhausted$) {
                            return false;
                        } else {
                            i = (.ceylon.language.Integer)$ceylontmp$item$2;
                            return true;
                        }
                    }
                    
                    public final .java.lang.Object next() {
                        if (this.i()) {
                            final .ceylon.language.Integer i = this.i;
                            return .ceylon.language.Integer.instance(.org.eclipse.ceylon.compiler.java.test.expression.comprehensions.ComprehensionMemberQualInterfaceFormal$impl.this.$this.next() + $this.getI());
                        } else return .ceylon.language.finished_.get_();
                    }
                };
            }
        });
    }
}
interface ComprehensionMemberQualInterfaceNonshared {
    
    public .org.eclipse.ceylon.compiler.java.test.expression.comprehensions.ComprehensionMemberQualInterfaceNonshared$impl $org$eclipse$ceylon$compiler$java$test$expression$comprehensions$ComprehensionMemberQualInterfaceNonshared$impl();
    public static final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.expression.comprehensions.ComprehensionMemberQualInterfaceNonshared.class);
}
final class ComprehensionMemberQualInterfaceNonshared$impl implements .java.io.Serializable {
    
    ComprehensionMemberQualInterfaceNonshared$impl(.org.eclipse.ceylon.compiler.java.test.expression.comprehensions.ComprehensionMemberQualInterfaceNonshared $this) {
        this.$this = $this;
    }
    private final .org.eclipse.ceylon.compiler.java.test.expression.comprehensions.ComprehensionMemberQualInterfaceNonshared $this;
    
    private long next$priv$() {
        return 1L;
    }
    
    private final long getI$priv$() {
        return 1L;
    }
    
    private void m$priv$() {
        final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> l = new .org.eclipse.ceylon.compiler.java.language.ConstantIterable<.ceylon.language.Integer, .java.lang.Object>(.ceylon.language.Integer.$TypeDescriptor$, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType, new .org.eclipse.ceylon.compiler.java.language.AbstractIterable<.ceylon.language.Integer, .java.lang.Object>(.ceylon.language.Integer.$TypeDescriptor$, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType){
            
            public final .ceylon.language.Iterator<.ceylon.language.Integer> iterator() {
                return new .org.eclipse.ceylon.compiler.java.language.AbstractIterator<.ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor$){
                    {
                        $iterator$0 = new .org.eclipse.ceylon.compiler.java.language.ConstantIterable<.ceylon.language.Integer, .java.lang.Object>(.ceylon.language.Integer.$TypeDescriptor$, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType, null, .ceylon.language.Integer.instance(1L)).iterator();
                    }
                    private final .ceylon.language.Iterator<? extends .ceylon.language.Integer> $iterator$0;
                    private .ceylon.language.Integer i;
                    private boolean i$exhausted$;
                    
                    private final boolean i() {
                        final .java.lang.Object $ceylontmp$item$3 = $iterator$0.next();
                        i$exhausted$ = $ceylontmp$item$3 == .ceylon.language.finished_.get_();
                        if (i$exhausted$) {
                            return false;
                        } else {
                            i = (.ceylon.language.Integer)$ceylontmp$item$3;
                            return true;
                        }
                    }
                    
                    public final .java.lang.Object next() {
                        if (this.i()) {
                            final .ceylon.language.Integer i = this.i;
                            return .ceylon.language.Integer.instance(.org.eclipse.ceylon.compiler.java.test.expression.comprehensions.ComprehensionMemberQualInterfaceNonshared$impl.this.next$priv$() + $this.$org$eclipse$ceylon$compiler$java$test$expression$comprehensions$ComprehensionMemberQualInterfaceNonshared$impl().getI$priv$());
                        } else return .ceylon.language.finished_.get_();
                    }
                };
            }
        });
    }
}
final class comprehensionMemberQualLocal_ {
    
    private comprehensionMemberQualLocal_() {
    }
    
    static void comprehensionMemberQualLocal() {
        
        class Local implements .org.eclipse.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
            
            Local() {
                this.i = 1L;
            }
            
            public final long next() {
                return 1L;
            }
            private final long i;
            
            public final long getI() {
                return this.i;
            }
            
            private final void m$priv$() {
                final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> l = new .org.eclipse.ceylon.compiler.java.language.ConstantIterable<.ceylon.language.Integer, .java.lang.Object>(.ceylon.language.Integer.$TypeDescriptor$, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType, new .org.eclipse.ceylon.compiler.java.language.AbstractIterable<.ceylon.language.Integer, .java.lang.Object>(.ceylon.language.Integer.$TypeDescriptor$, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType){
                    
                    public final .ceylon.language.Iterator<.ceylon.language.Integer> iterator() {
                        return new .org.eclipse.ceylon.compiler.java.language.AbstractIterator<.ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor$){
                            {
                                $iterator$0 = new .org.eclipse.ceylon.compiler.java.language.ConstantIterable<.ceylon.language.Integer, .java.lang.Object>(.ceylon.language.Integer.$TypeDescriptor$, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType, null, .ceylon.language.Integer.instance(1L)).iterator();
                            }
                            private final .ceylon.language.Iterator<? extends .ceylon.language.Integer> $iterator$0;
                            private .ceylon.language.Integer i;
                            private boolean i$exhausted$;
                            
                            private final boolean i() {
                                final .java.lang.Object $ceylontmp$item$4 = $iterator$0.next();
                                i$exhausted$ = $ceylontmp$item$4 == .ceylon.language.finished_.get_();
                                if (i$exhausted$) {
                                    return false;
                                } else {
                                    i = (.ceylon.language.Integer)$ceylontmp$item$4;
                                    return true;
                                }
                            }
                            
                            public final .java.lang.Object next() {
                                if (this.i()) {
                                    final .ceylon.language.Integer i = this.i;
                                    return .ceylon.language.Integer.instance(Local.this.next() + Local.this.getI());
                                } else return .ceylon.language.finished_.get_();
                            }
                        };
                    }
                });
            }
            
            @.java.lang.Override
            public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
                return .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.functionOrValue(.org.eclipse.ceylon.compiler.java.test.expression.comprehensions.comprehensionMemberQualLocal_.class), .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(Local.class));
            }
        }
        
        final class next_ implements .java.io.Serializable {
            
            private next_() {
            }
            
            long next() {
                return 1L;
            }
        }
        final next_ next = new next_();
        
        class Local2 implements .org.eclipse.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
            
            Local2() {
            }
            
            private final void m$priv$() {
                final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> l = new .org.eclipse.ceylon.compiler.java.language.ConstantIterable<.ceylon.language.Integer, .java.lang.Object>(.ceylon.language.Integer.$TypeDescriptor$, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType, new .org.eclipse.ceylon.compiler.java.language.AbstractIterable<.ceylon.language.Integer, .java.lang.Object>(.ceylon.language.Integer.$TypeDescriptor$, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType){
                    
                    public final .ceylon.language.Iterator<.ceylon.language.Integer> iterator() {
                        return new .org.eclipse.ceylon.compiler.java.language.AbstractIterator<.ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor$){
                            {
                                $iterator$0 = new .org.eclipse.ceylon.compiler.java.language.ConstantIterable<.ceylon.language.Integer, .java.lang.Object>(.ceylon.language.Integer.$TypeDescriptor$, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType, null, .ceylon.language.Integer.instance(1L)).iterator();
                            }
                            private final .ceylon.language.Iterator<? extends .ceylon.language.Integer> $iterator$0;
                            private .ceylon.language.Integer i;
                            private boolean i$exhausted$;
                            
                            private final boolean i() {
                                final .java.lang.Object $ceylontmp$item$5 = $iterator$0.next();
                                i$exhausted$ = $ceylontmp$item$5 == .ceylon.language.finished_.get_();
                                if (i$exhausted$) {
                                    return false;
                                } else {
                                    i = (.ceylon.language.Integer)$ceylontmp$item$5;
                                    return true;
                                }
                            }
                            
                            public final .java.lang.Object next() {
                                if (this.i()) {
                                    final .ceylon.language.Integer i = this.i;
                                    return .ceylon.language.Integer.instance(next.next());
                                } else return .ceylon.language.finished_.get_();
                            }
                        };
                    }
                });
            }
            
            @.java.lang.Override
            public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
                return .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.functionOrValue(.org.eclipse.ceylon.compiler.java.test.expression.comprehensions.comprehensionMemberQualLocal_.class), .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(Local2.class));
            }
        }
    }
}