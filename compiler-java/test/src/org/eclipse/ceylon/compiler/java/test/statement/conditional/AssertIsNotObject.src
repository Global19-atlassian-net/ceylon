package org.eclipse.ceylon.compiler.java.test.statement.conditional;

class AssertIsNotObject implements .org.eclipse.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    AssertIsNotObject() {
    }
    
    public final void m(final .java.lang.Object x) {
        if (!(x != null)) {
        } else {
            throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tviolated " + "!is Object x") + .org.eclipse.ceylon.compiler.java.Util.assertIsFailed(true, .ceylon.language.Object.$TypeDescriptor$, x));
        }
        .ceylon.language.print_.print(.ceylon.language.String.instance("x is null"));
        .ceylon.language.print_.print(x);
    }
    
    public final void mvar(final .java.lang.Object y) {
        final .java.lang.Object x$2;
        .java.lang.Object x$1 = null;
        if (!((x$1 = y) != null)) {
            x$2 = x$1;
        } else {
            throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tviolated " + "!is Object x=y") + .org.eclipse.ceylon.compiler.java.Util.assertIsFailed(true, .ceylon.language.Object.$TypeDescriptor$, x$1));
        }
        .ceylon.language.print_.print(.ceylon.language.String.instance("x is null"));
        .ceylon.language.print_.print(x$2);
    }
    
    @.java.lang.Override
    public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .org.eclipse.ceylon.compiler.java.test.statement.conditional.AssertIsNotObject.$TypeDescriptor$;
    }
    public static final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.statement.conditional.AssertIsNotObject.class);
}