package org.eclipse.ceylon.compiler.java.test.issues.bug62xx;

interface LLVMCodeTarget6213A {
    
    public .org.eclipse.ceylon.compiler.java.test.issues.bug62xx.LLVMCodeTarget6213A$impl $org$eclipse$ceylon$compiler$java$test$issues$bug62xx$LLVMCodeTarget6213A$impl();
    
    public <T>T call(final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$T, final .java.lang.String name);
    
    public <T>T call(final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$T, final .java.lang.String name, final .ceylon.language.Sequential<? extends .ceylon.language.String> args);
    public static final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.issues.bug62xx.LLVMCodeTarget6213A.class);
}
final class LLVMCodeTarget6213A$impl implements .java.io.Serializable {
    
    LLVMCodeTarget6213A$impl(.org.eclipse.ceylon.compiler.java.test.issues.bug62xx.LLVMCodeTarget6213A $this) {
        this.$this = $this;
    }
    private final .org.eclipse.ceylon.compiler.java.test.issues.bug62xx.LLVMCodeTarget6213A $this;
    
    public <T>T call(final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$T, final .java.lang.String name) {
        return (
            let
            {
                .ceylon.language.Sequential<? extends .ceylon.language.String> $ceylontmp$args$0 = (.ceylon.language.Sequential).ceylon.language.empty_.get_();
            }
            returning <T>call$canonical$($reified$T, name, $ceylontmp$args$0);
        );
    }
    
    private <T>T call$canonical$(final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$T, final .java.lang.String name, final .ceylon.language.Sequential<? extends .ceylon.language.String> args) {
        return (T)(.java.lang.Object).ceylon.language.nothing_.get_();
    }
    
    public <T>T call(final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$T, final .java.lang.String name, final .ceylon.language.Sequential<? extends .ceylon.language.String> args) {
        return <T>call$canonical$($reified$T, name, args);
    }
}
class LLVMFunction6213A implements .org.eclipse.ceylon.compiler.java.runtime.model.ReifiedType, .org.eclipse.ceylon.compiler.java.test.issues.bug62xx.LLVMCodeTarget6213A, .java.io.Serializable {
    
    LLVMFunction6213A() {
        this.$org$eclipse$ceylon$compiler$java$test$issues$bug62xx$LLVMCodeTarget6213A$this$ = new .org.eclipse.ceylon.compiler.java.test.issues.bug62xx.LLVMCodeTarget6213A$impl(this);
    }
    protected final .org.eclipse.ceylon.compiler.java.test.issues.bug62xx.LLVMCodeTarget6213A$impl $org$eclipse$ceylon$compiler$java$test$issues$bug62xx$LLVMCodeTarget6213A$this$;
    
    @.java.lang.Override
    public .org.eclipse.ceylon.compiler.java.test.issues.bug62xx.LLVMCodeTarget6213A$impl $org$eclipse$ceylon$compiler$java$test$issues$bug62xx$LLVMCodeTarget6213A$impl() {
        return $org$eclipse$ceylon$compiler$java$test$issues$bug62xx$LLVMCodeTarget6213A$this$;
    }
    
    @.java.lang.Override
    public <T>T call(final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$T, final .java.lang.String name) {
        return (
            let
            {
                .ceylon.language.Sequential<? extends .ceylon.language.String> $ceylontmp$args$1 = (.ceylon.language.Sequential).ceylon.language.empty_.get_();
            }
            returning call$canonical$($reified$T, name, $ceylontmp$args$1);
        );
    }
    
    @.java.lang.Override
    public final <T>T call(final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$T, final .java.lang.String name, final .ceylon.language.Sequential<? extends .ceylon.language.String> args) {
        return $org$eclipse$ceylon$compiler$java$test$issues$bug62xx$LLVMCodeTarget6213A$this$.call($reified$T, name, args);
    }
    
    private <T>T call$canonical$(final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$T, final .java.lang.String name, final .ceylon.language.Sequential<? extends .ceylon.language.String> args) {
        return $org$eclipse$ceylon$compiler$java$test$issues$bug62xx$LLVMCodeTarget6213A$this$.call($reified$T, name, args);
    }
    
    @.java.lang.Override
    public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .org.eclipse.ceylon.compiler.java.test.issues.bug62xx.LLVMFunction6213A.$TypeDescriptor$;
    }
    public static final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.issues.bug62xx.LLVMFunction6213A.class);
}