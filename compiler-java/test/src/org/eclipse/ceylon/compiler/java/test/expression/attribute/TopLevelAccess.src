package org.eclipse.ceylon.compiler.java.test.expression.attribute;

class TopLevelAccess implements .org.eclipse.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    TopLevelAccess() {
    }
    
    private final void m$priv$() {
        final boolean bb1 = .org.eclipse.ceylon.compiler.java.test.expression.attribute.b1_.get_();
        final boolean bb2 = .org.eclipse.ceylon.compiler.java.test.expression.attribute.b2_.get_();
        final boolean bb3 = .org.eclipse.ceylon.compiler.java.test.expression.attribute.b3_.get_();
        final boolean bb4 = .org.eclipse.ceylon.compiler.java.test.expression.attribute.b4_.get_();
    }
    
    @.java.lang.Override
    public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .org.eclipse.ceylon.compiler.java.test.expression.attribute.TopLevelAccess.$TypeDescriptor$;
    }
    public static final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.expression.attribute.TopLevelAccess.class);
}
final class b1_ {
    
    private b1_() {
    }
    private static final boolean $object$;
    private static volatile boolean $init$$object$ = false;
    private static final .java.lang.Throwable $initException$;
    static {
        try {
            $object$ = true;
            .org.eclipse.ceylon.compiler.java.test.expression.attribute.b1_.$init$$object$ = true;
            $initException$ = null;
        } catch (.java.lang.Throwable x) {
            $initException$ = x;
            $object$ = false;
            .org.eclipse.ceylon.compiler.java.test.expression.attribute.b1_.$init$$object$ = false;
        }
    }
    
    public static boolean get_() {
        if (.org.eclipse.ceylon.compiler.java.test.expression.attribute.b1_.$init$$object$) {
            return .org.eclipse.ceylon.compiler.java.test.expression.attribute.b1_.$object$;
        } else {
            if ($initException$ != null) .org.eclipse.ceylon.compiler.java.Util.rethrow($initException$);
            throw new .ceylon.language.InitializationError("Cyclic initialization trying to read the value of \'b1\' before it was set");
        }
    }
}
public final class b2_ {
    
    private b2_() {
    }
    private static final boolean $object$;
    private static volatile boolean $init$$object$ = false;
    private static final .java.lang.Throwable $initException$;
    static {
        try {
            $object$ = true;
            .org.eclipse.ceylon.compiler.java.test.expression.attribute.b2_.$init$$object$ = true;
            $initException$ = null;
        } catch (.java.lang.Throwable x) {
            $initException$ = x;
            $object$ = false;
            .org.eclipse.ceylon.compiler.java.test.expression.attribute.b2_.$init$$object$ = false;
        }
    }
    
    public static boolean get_() {
        if (.org.eclipse.ceylon.compiler.java.test.expression.attribute.b2_.$init$$object$) {
            return .org.eclipse.ceylon.compiler.java.test.expression.attribute.b2_.$object$;
        } else {
            if ($initException$ != null) .org.eclipse.ceylon.compiler.java.Util.rethrow($initException$);
            throw new .ceylon.language.InitializationError("Cyclic initialization trying to read the value of \'b2\' before it was set");
        }
    }
}
final class b3_ {
    
    private b3_() {
    }
    
    public static boolean get_() {
        return true;
    }
}
public final class b4_ {
    
    private b4_() {
    }
    
    public static boolean get_() {
        return true;
    }
}