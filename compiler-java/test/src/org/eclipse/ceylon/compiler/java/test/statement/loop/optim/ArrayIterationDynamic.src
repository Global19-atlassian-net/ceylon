package org.eclipse.ceylon.compiler.java.test.statement.loop.optim;

class ArrayIterationDynamic implements .org.eclipse.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    ArrayIterationDynamic() {
    }
    
    private final void arrayOfIntegers$priv$(final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> array) {
        final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> iterable$2 = array;
        final boolean isArray$3 = iterable$2 instanceof .ceylon.language.Array;
        final boolean isTuple$4 = iterable$2 instanceof .ceylon.language.Tuple && ((.ceylon.language.Tuple)iterable$2).$getArray$() != null;
        .java.lang.Object elem$1 = null;
        int i$5 = 0;
        final int length$6;
        if (isArray$3 || isTuple$4) {
            length$6 = (int)iterable$2.getSize();
        } else {
            length$6 = 0;
        }
        .ceylon.language.Iterator<? extends .ceylon.language.Integer> element$iterator$$7 = isTuple$4 || isArray$3 ? null : iterable$2.iterator();
        loop_0: while (isTuple$4 || isArray$3 ? i$5 < length$6 : !((elem$1 = element$iterator$$7.next()) instanceof .ceylon.language.Finished)) {
            if (isTuple$4) elem$1 = iterable$2.getFromFirst(i$5++);
            final long element = isArray$3 ? .org.eclipse.ceylon.compiler.java.Util.getIntegerArray(((.ceylon.language.Array)iterable$2).toArray(), i$5++) : ((.ceylon.language.Integer)elem$1).longValue();
            .ceylon.language.print_.print(.ceylon.language.Integer.instance(element + 5L));
        }
    }
    
    private final void arrayOfCharacters$priv$(final .ceylon.language.Iterable<? extends .ceylon.language.Character, ? extends .java.lang.Object> array) {
        final .ceylon.language.Iterable<? extends .ceylon.language.Character, ? extends .java.lang.Object> iterable$10 = array;
        final boolean isArray$11 = iterable$10 instanceof .ceylon.language.Array;
        final boolean isTuple$12 = iterable$10 instanceof .ceylon.language.Tuple && ((.ceylon.language.Tuple)iterable$10).$getArray$() != null;
        .java.lang.Object elem$9 = null;
        int i$13 = 0;
        final int length$14;
        if (isArray$11 || isTuple$12) {
            length$14 = (int)iterable$10.getSize();
        } else {
            length$14 = 0;
        }
        .ceylon.language.Iterator<? extends .ceylon.language.Character> element$iterator$$15 = isTuple$12 || isArray$11 ? null : iterable$10.iterator();
        loop_1: while (isTuple$12 || isArray$11 ? i$13 < length$14 : !((elem$9 = element$iterator$$15.next()) instanceof .ceylon.language.Finished)) {
            if (isTuple$12) elem$9 = iterable$10.getFromFirst(i$13++);
            final int element = isArray$11 ? .org.eclipse.ceylon.compiler.java.Util.getCharacterArray(((.ceylon.language.Array)iterable$10).toArray(), i$13++) : ((.ceylon.language.Character)elem$9).intValue();
            .ceylon.language.print_.print(.ceylon.language.Character.instance(element));
        }
    }
    
    private final void arrayOfObjects$priv$(final .ceylon.language.Iterable<? extends .java.lang.Object, ? extends .java.lang.Object> array) {
        final .ceylon.language.Iterable<? extends .java.lang.Object, ? extends .java.lang.Object> iterable$18 = array;
        final boolean isArray$19 = iterable$18 instanceof .ceylon.language.Array;
        final boolean isTuple$20 = iterable$18 instanceof .ceylon.language.Tuple && ((.ceylon.language.Tuple)iterable$18).$getArray$() != null;
        .java.lang.Object elem$17 = null;
        int i$21 = 0;
        final int length$22;
        if (isArray$19 || isTuple$20) {
            length$22 = (int)iterable$18.getSize();
        } else {
            length$22 = 0;
        }
        .ceylon.language.Iterator<? extends .java.lang.Object> element$iterator$$23 = isTuple$20 || isArray$19 ? null : iterable$18.iterator();
        loop_2: while (isTuple$20 || isArray$19 ? i$21 < length$22 : !((elem$17 = element$iterator$$23.next()) instanceof .ceylon.language.Finished)) {
            if (isArray$19 || isTuple$20) elem$17 = iterable$18.getFromFirst(i$21++);
            final .java.lang.Object element = elem$17;
            .ceylon.language.print_.print(element);
        }
    }
    
    private final void arrayOfIntegersWithBreak$priv$(final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> array) {
        boolean doforelse$24 = true;
        final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> iterable$27 = array;
        final boolean isArray$28 = iterable$27 instanceof .ceylon.language.Array;
        final boolean isTuple$29 = iterable$27 instanceof .ceylon.language.Tuple && ((.ceylon.language.Tuple)iterable$27).$getArray$() != null;
        .java.lang.Object elem$26 = null;
        int i$30 = 0;
        final int length$31;
        if (isArray$28 || isTuple$29) {
            length$31 = (int)iterable$27.getSize();
        } else {
            length$31 = 0;
        }
        .ceylon.language.Iterator<? extends .ceylon.language.Integer> element$iterator$$32 = isTuple$29 || isArray$28 ? null : iterable$27.iterator();
        loop_3: while (isTuple$29 || isArray$28 ? i$30 < length$31 : !((elem$26 = element$iterator$$32.next()) instanceof .ceylon.language.Finished)) {
            if (isTuple$29) elem$26 = iterable$27.getFromFirst(i$30++);
            final long element = isArray$28 ? .org.eclipse.ceylon.compiler.java.Util.getIntegerArray(((.ceylon.language.Array)iterable$27).toArray(), i$30++) : ((.ceylon.language.Integer)elem$26).longValue();
            
            final class x_ implements .java.io.Serializable {
                
                private x_() {
                }
                
                long x() {
                    return element + 10L;
                }
            }
            final x_ x = new x_();
            if (element == 10L) {
                doforelse$24 = false;
                break loop_3;
            }
        }
        if (doforelse$24) {
            .ceylon.language.print_.print(.ceylon.language.String.instance("foo"));
        }
    }
    
    private final void keyValue$priv$(final .ceylon.language.Iterable<? extends .ceylon.language.Entry<? extends .ceylon.language.Integer, ? extends .ceylon.language.Float>, ? extends .java.lang.Object> array) {
        final .ceylon.language.Iterable<? extends .ceylon.language.Entry<? extends .ceylon.language.Integer, ? extends .ceylon.language.Float>, ? extends .java.lang.Object> iterable$36 = array;
        final boolean isArray$37 = iterable$36 instanceof .ceylon.language.Array;
        final boolean isTuple$38 = iterable$36 instanceof .ceylon.language.Tuple && ((.ceylon.language.Tuple)iterable$36).$getArray$() != null;
        .java.lang.Object elem$35 = null;
        int i$39 = 0;
        final int length$40;
        if (isArray$37 || isTuple$38) {
            length$40 = (int)iterable$36.getSize();
        } else {
            length$40 = 0;
        }
        .ceylon.language.Iterator<? extends .ceylon.language.Entry<? extends .ceylon.language.Integer, ? extends .ceylon.language.Float>> elem$35$iterator$ = isTuple$38 || isArray$37 ? null : iterable$36.iterator();
        loop_4: while (isTuple$38 || isArray$37 ? i$39 < length$40 : !((elem$35 = elem$35$iterator$.next()) instanceof .ceylon.language.Finished)) {
            if (isArray$37 || isTuple$38) elem$35 = iterable$36.getFromFirst(i$39++);
            final long i = ((.ceylon.language.Integer)((.ceylon.language.Entry)elem$35).getKey()).longValue();
            final double f = ((.ceylon.language.Float)((.ceylon.language.Entry)elem$35).getItem()).doubleValue();
            .ceylon.language.print_.print(.ceylon.language.Float.instance(i + f));
        }
    }
    
    private final void arrayOfIntegersArraySequenceDisabled$priv$(final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> array) {
        final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> iterable$43 = array;
        final boolean isArray$44 = iterable$43 instanceof .ceylon.language.Array;
        final boolean isTuple$45 = iterable$43 instanceof .ceylon.language.Tuple && ((.ceylon.language.Tuple)iterable$43).$getArray$() != null;
        .java.lang.Object elem$42 = null;
        int i$46 = 0;
        final int length$47;
        if (isArray$44 || isTuple$45) {
            length$47 = (int)iterable$43.getSize();
        } else {
            length$47 = 0;
        }
        .ceylon.language.Iterator<? extends .ceylon.language.Integer> element$iterator$$48 = isTuple$45 || isArray$44 ? null : iterable$43.iterator();
        loop_5: while (isTuple$45 || isArray$44 ? i$46 < length$47 : !((elem$42 = element$iterator$$48.next()) instanceof .ceylon.language.Finished)) {
            if (isTuple$45) elem$42 = iterable$43.getFromFirst(i$46++);
            final long element = isArray$44 ? .org.eclipse.ceylon.compiler.java.Util.getIntegerArray(((.ceylon.language.Array)iterable$43).toArray(), i$46++) : ((.ceylon.language.Integer)elem$42).longValue();
            .ceylon.language.print_.print(.ceylon.language.Integer.instance(element + 5L));
        }
    }
    
    private final void arrayOfIntegersArrayDisabled$priv$(final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> array) {
        final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> iterable$51 = array;
        final boolean isTuple$52 = iterable$51 instanceof .ceylon.language.Tuple && ((.ceylon.language.Tuple)iterable$51).$getArray$() != null;
        .java.lang.Object elem$50 = null;
        int i$53 = 0;
        final int length$54;
        if (isTuple$52) {
            length$54 = (int)iterable$51.getSize();
        } else {
            length$54 = 0;
        }
        .ceylon.language.Iterator<? extends .ceylon.language.Integer> element$iterator$$55 = isTuple$52 ? null : iterable$51.iterator();
        loop_6: while (isTuple$52 ? i$53 < length$54 : !((elem$50 = element$iterator$$55.next()) instanceof .ceylon.language.Finished)) {
            if (isTuple$52) elem$50 = iterable$51.getFromFirst(i$53++);
            final long element = ((.ceylon.language.Integer)elem$50).longValue();
            .ceylon.language.print_.print(.ceylon.language.Integer.instance(element + 5L));
        }
    }
    
    private final void arrayOfIntegersDisabled$priv$(final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> array) {
        final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> iterable$58 = array;
        final boolean isTuple$59 = iterable$58 instanceof .ceylon.language.Tuple && ((.ceylon.language.Tuple)iterable$58).$getArray$() != null;
        .java.lang.Object elem$57 = null;
        int i$60 = 0;
        final int length$61;
        if (isTuple$59) {
            length$61 = (int)iterable$58.getSize();
        } else {
            length$61 = 0;
        }
        .ceylon.language.Iterator<? extends .ceylon.language.Integer> element$iterator$$62 = isTuple$59 ? null : iterable$58.iterator();
        loop_7: while (isTuple$59 ? i$60 < length$61 : !((elem$57 = element$iterator$$62.next()) instanceof .ceylon.language.Finished)) {
            if (isTuple$59) elem$57 = iterable$58.getFromFirst(i$60++);
            final long element = ((.ceylon.language.Integer)elem$57).longValue();
            .ceylon.language.print_.print(.ceylon.language.Integer.instance(element + 5L));
        }
        .java.lang.Object elem$64;
        .ceylon.language.Iterator<? extends .ceylon.language.Integer> element$iterator$$65 = array.iterator();
        loop_8: while (!((elem$64 = element$iterator$$65.next()) instanceof .ceylon.language.Finished)) {
            final long element = ((.ceylon.language.Integer)elem$64).longValue();
            .ceylon.language.print_.print(.ceylon.language.Integer.instance(element + 5L));
        }
    }
    
    @.java.lang.Override
    public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .org.eclipse.ceylon.compiler.java.test.statement.loop.optim.ArrayIterationDynamic.$TypeDescriptor$;
    }
    public static final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.statement.loop.optim.ArrayIterationDynamic.class);
}