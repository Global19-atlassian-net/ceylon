package org.eclipse.ceylon.compiler.java.test.structure.reified;

@.org.eclipse.ceylon.compiler.java.metadata.Ceylon(
        major = 8,
        minor = 1)
@.org.eclipse.ceylon.compiler.java.metadata.Name("InnerInterface")
@.org.eclipse.ceylon.compiler.java.metadata.LocalContainer(
        path = {
                "OuterClass",
                "outerMethod"},
        companionClassName = "")
@.org.eclipse.ceylon.compiler.java.metadata.LocalDeclaration(qualifier = "1")
@.org.eclipse.ceylon.compiler.java.metadata.TypeParameters({@.org.eclipse.ceylon.compiler.java.metadata.TypeParameter(
        value = "Inner",
        variance = .org.eclipse.ceylon.compiler.java.metadata.Variance.NONE,
        satisfies = {},
        caseTypes = {})})
interface OuterClass$outerMethod$InnerInterface<Outer, Inner> {
}
@.org.eclipse.ceylon.compiler.java.metadata.Ceylon(
        major = 8,
        minor = 1)
@.ceylon.language.SharedAnnotation$annotation$
@.org.eclipse.ceylon.compiler.java.metadata.Members({@.org.eclipse.ceylon.compiler.java.metadata.Member(klass = .org.eclipse.ceylon.compiler.java.test.structure.reified.OuterClass.InnerClass.class)})
@.org.eclipse.ceylon.compiler.java.metadata.LocalDeclarations({
        "1InnerClass",
        "::OuterClass$outerMethod$InnerInterface"})
@.org.eclipse.ceylon.compiler.java.metadata.TypeParameters({@.org.eclipse.ceylon.compiler.java.metadata.TypeParameter(
        value = "Outer",
        variance = .org.eclipse.ceylon.compiler.java.metadata.Variance.NONE,
        satisfies = {},
        caseTypes = {})})
public class OuterClass<Outer> implements .org.eclipse.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    public OuterClass(@.org.eclipse.ceylon.compiler.java.metadata.Ignore
    final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$Outer) {
        this.$reified$Outer = $reified$Outer;
    }
    @.org.eclipse.ceylon.compiler.java.metadata.Ignore
    private final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$Outer;
    
    @.org.eclipse.ceylon.compiler.java.metadata.Ignore
    public <Inner>.org.eclipse.ceylon.compiler.java.test.structure.reified.OuterClass<Outer>.InnerClass<Inner> InnerClass$new$(final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$Inner) {
        return new InnerClass<Inner>($reified$Inner);
    }
    
    @.org.eclipse.ceylon.compiler.java.metadata.Ceylon(
            major = 8,
            minor = 1)
    @.ceylon.language.SharedAnnotation$annotation$
    @.org.eclipse.ceylon.compiler.java.metadata.Container(
            klass = .org.eclipse.ceylon.compiler.java.test.structure.reified.OuterClass.class,
            isStatic = false)
    @.org.eclipse.ceylon.compiler.java.metadata.TypeParameters({@.org.eclipse.ceylon.compiler.java.metadata.TypeParameter(
            value = "Inner",
            variance = .org.eclipse.ceylon.compiler.java.metadata.Variance.NONE,
            satisfies = {},
            caseTypes = {})})
    public class InnerClass<Inner> implements .org.eclipse.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
        
        protected InnerClass(@.org.eclipse.ceylon.compiler.java.metadata.Ignore
        final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$Inner) {
            this.$reified$Inner = $reified$Inner;
        }
        @.org.eclipse.ceylon.compiler.java.metadata.Ignore
        private final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$Inner;
        
        @.java.lang.Override
        @.org.eclipse.ceylon.compiler.java.metadata.Ignore
        public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
            return .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.structure.reified.OuterClass.class, .org.eclipse.ceylon.compiler.java.test.structure.reified.OuterClass.this.$reified$Outer), .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.structure.reified.OuterClass.InnerClass.class, $reified$Inner));
        }
    }
    
    @.ceylon.language.SharedAnnotation$annotation$
    public final void outerMethod(@.org.eclipse.ceylon.compiler.java.metadata.Name("o")
    @.org.eclipse.ceylon.common.NonNull
    @.org.eclipse.ceylon.compiler.java.metadata.TypeInfo("ceylon.language::Object")
    final .java.lang.Object o) {
        
        @.org.eclipse.ceylon.compiler.java.metadata.Ceylon(
                major = 8,
                minor = 1)
        @.org.eclipse.ceylon.compiler.java.metadata.Name("InnerClass")
        @.org.eclipse.ceylon.compiler.java.metadata.LocalDeclaration(qualifier = "1")
        @.org.eclipse.ceylon.compiler.java.metadata.TypeParameters({@.org.eclipse.ceylon.compiler.java.metadata.TypeParameter(
                value = "Inner",
                variance = .org.eclipse.ceylon.compiler.java.metadata.Variance.NONE,
                satisfies = {},
                caseTypes = {})})
        class InnerClass<Inner> implements .org.eclipse.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
            
            InnerClass(@.org.eclipse.ceylon.compiler.java.metadata.Ignore
            final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$Inner) {
                this.$reified$Inner = $reified$Inner;
            }
            @.org.eclipse.ceylon.compiler.java.metadata.Ignore
            private final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$Inner;
            
            @.java.lang.Override
            @.org.eclipse.ceylon.compiler.java.metadata.Ignore
            public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
                return .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.structure.reified.OuterClass.class, .org.eclipse.ceylon.compiler.java.test.structure.reified.OuterClass.this.$reified$Outer), .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.functionOrValue("outerMethod")), .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(InnerClass.class, $reified$Inner));
            }
        }
        .java.lang.Object o$1;
        if ((o$1 = o) instanceof InnerClass && .org.eclipse.ceylon.compiler.java.Util.isReified(o$1, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.structure.reified.OuterClass.class, .org.eclipse.ceylon.compiler.java.test.structure.reified.OuterClass.this.$reified$Outer), .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.functionOrValue("outerMethod")), .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(InnerClass.class, .ceylon.language.Integer.$TypeDescriptor$)))) {
            final InnerClass<.ceylon.language.Integer> o$2 = (InnerClass<.ceylon.language.Integer>)(InnerClass)o$1;
        }
        .java.lang.Object o$4;
        if ((o$4 = o) instanceof .org.eclipse.ceylon.compiler.java.test.structure.reified.OuterClass$outerMethod$InnerInterface && .org.eclipse.ceylon.compiler.java.Util.isReified(o$4, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.structure.reified.OuterClass.class, .org.eclipse.ceylon.compiler.java.test.structure.reified.OuterClass.this.$reified$Outer), .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.functionOrValue("outerMethod")), .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.structure.reified.OuterClass$outerMethod$InnerInterface.class, .ceylon.language.Integer.$TypeDescriptor$)))) {
            final .org.eclipse.ceylon.compiler.java.test.structure.reified.OuterClass$outerMethod$InnerInterface<Outer, .ceylon.language.Integer> o$5 = (.org.eclipse.ceylon.compiler.java.test.structure.reified.OuterClass$outerMethod$InnerInterface<Outer, .ceylon.language.Integer>)(.org.eclipse.ceylon.compiler.java.test.structure.reified.OuterClass$outerMethod$InnerInterface)o$4;
        }
    }
    
    @.org.eclipse.ceylon.compiler.java.metadata.Ignore
    public static void main(.java.lang.String[] args) {
        .org.eclipse.ceylon.compiler.java.Util.storeArgs(args);
        new .org.eclipse.ceylon.compiler.java.test.structure.reified.OuterClass(.org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType);
    }
    
    @.java.lang.Override
    @.org.eclipse.ceylon.compiler.java.metadata.Ignore
    public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.structure.reified.OuterClass.class, $reified$Outer);
    }
}
@.org.eclipse.ceylon.compiler.java.metadata.Ceylon(
        major = 8,
        minor = 1)
@.org.eclipse.ceylon.compiler.java.metadata.Name("InnerInterface")
@.ceylon.language.SharedAnnotation$annotation$
@.org.eclipse.ceylon.compiler.java.metadata.Container(
        klass = .org.eclipse.ceylon.compiler.java.test.structure.reified.OuterInterface.class,
        isStatic = false)
@.org.eclipse.ceylon.compiler.java.metadata.TypeParameters({@.org.eclipse.ceylon.compiler.java.metadata.TypeParameter(
        value = "Inner",
        variance = .org.eclipse.ceylon.compiler.java.metadata.Variance.NONE,
        satisfies = {},
        caseTypes = {})})
public interface OuterInterface$InnerInterface<Outer, Inner> {
}
@.org.eclipse.ceylon.compiler.java.metadata.Ceylon(
        major = 8,
        minor = 1)
@.ceylon.language.SharedAnnotation$annotation$
@.org.eclipse.ceylon.compiler.java.metadata.Members({@.org.eclipse.ceylon.compiler.java.metadata.Member(klass = .org.eclipse.ceylon.compiler.java.test.structure.reified.OuterInterface$InnerInterface.class)})
@.org.eclipse.ceylon.compiler.java.metadata.TypeParameters({@.org.eclipse.ceylon.compiler.java.metadata.TypeParameter(
        value = "Outer",
        variance = .org.eclipse.ceylon.compiler.java.metadata.Variance.NONE,
        satisfies = {},
        caseTypes = {})})
public interface OuterInterface<Outer> {
    
    @.org.eclipse.ceylon.compiler.java.metadata.Ignore
    public .org.eclipse.ceylon.compiler.java.test.structure.reified.OuterInterface$impl<Outer> $org$eclipse$ceylon$compiler$java$test$structure$reified$OuterInterface$impl();
}
@.org.eclipse.ceylon.compiler.java.metadata.Ignore
public final class OuterInterface$impl<Outer> implements .java.io.Serializable {
    
    @.org.eclipse.ceylon.compiler.java.metadata.Ignore
    public OuterInterface$impl(final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$Outer, .org.eclipse.ceylon.compiler.java.test.structure.reified.OuterInterface<Outer> $this) {
        this.$reified$Outer = $reified$Outer;
        this.$this = $this;
    }
    @.org.eclipse.ceylon.compiler.java.metadata.Ignore
    private .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$Outer;
    @.org.eclipse.ceylon.compiler.java.metadata.Ignore
    private final .org.eclipse.ceylon.compiler.java.test.structure.reified.OuterInterface<Outer> $this;
    
    @.org.eclipse.ceylon.compiler.java.metadata.Ignore
    public void $refine$(final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$Outer) {
        this.$reified$Outer = $reified$Outer;
    }
}
@.org.eclipse.ceylon.compiler.java.metadata.Ceylon(
        major = 8,
        minor = 1)
@.org.eclipse.ceylon.compiler.java.metadata.Name("InnerInterface")
@.org.eclipse.ceylon.compiler.java.metadata.LocalContainer(
        path = {"outerMethod"},
        companionClassName = "")
@.org.eclipse.ceylon.compiler.java.metadata.LocalDeclaration(qualifier = "1")
@.org.eclipse.ceylon.compiler.java.metadata.TypeParameters({@.org.eclipse.ceylon.compiler.java.metadata.TypeParameter(
        value = "Inner",
        variance = .org.eclipse.ceylon.compiler.java.metadata.Variance.NONE,
        satisfies = {},
        caseTypes = {})})
interface outerMethod$InnerInterface_<Inner> {
}
@.org.eclipse.ceylon.compiler.java.metadata.Ceylon(
        major = 8,
        minor = 1)
@.org.eclipse.ceylon.compiler.java.metadata.Method
@.org.eclipse.ceylon.compiler.java.metadata.LocalDeclarations({
        "1InnerClass",
        "1InnerClass2",
        "::outerMethod$InnerInterface_"})
public final class outerMethod_ {
    
    private outerMethod_() {
    }
    
    @.ceylon.language.SharedAnnotation$annotation$
    public static void outerMethod(@.org.eclipse.ceylon.compiler.java.metadata.Name("o")
    @.org.eclipse.ceylon.common.NonNull
    @.org.eclipse.ceylon.compiler.java.metadata.TypeInfo("ceylon.language::Object")
    final .java.lang.Object o) {
        
        @.org.eclipse.ceylon.compiler.java.metadata.Ceylon(
                major = 8,
                minor = 1)
        @.org.eclipse.ceylon.compiler.java.metadata.Name("InnerClass")
        @.org.eclipse.ceylon.compiler.java.metadata.LocalDeclaration(qualifier = "1")
        @.org.eclipse.ceylon.compiler.java.metadata.TypeParameters({@.org.eclipse.ceylon.compiler.java.metadata.TypeParameter(
                value = "Inner",
                variance = .org.eclipse.ceylon.compiler.java.metadata.Variance.NONE,
                satisfies = {},
                caseTypes = {})})
        class InnerClass<Inner> implements .org.eclipse.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
            
            InnerClass(@.org.eclipse.ceylon.compiler.java.metadata.Ignore
            final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$Inner) {
                this.$reified$Inner = $reified$Inner;
            }
            @.org.eclipse.ceylon.compiler.java.metadata.Ignore
            private final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$Inner;
            
            @.java.lang.Override
            @.org.eclipse.ceylon.compiler.java.metadata.Ignore
            public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
                return .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.functionOrValue(.org.eclipse.ceylon.compiler.java.test.structure.reified.outerMethod_.class), .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(InnerClass.class, $reified$Inner));
            }
        }
        .java.lang.Object o$7;
        if ((o$7 = o) instanceof InnerClass && .org.eclipse.ceylon.compiler.java.Util.isReified(o$7, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.functionOrValue(.org.eclipse.ceylon.compiler.java.test.structure.reified.outerMethod_.class), .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(InnerClass.class, .ceylon.language.Integer.$TypeDescriptor$)))) {
            final InnerClass<.ceylon.language.Integer> o$8 = (InnerClass<.ceylon.language.Integer>)(InnerClass)o$7;
        }
        .java.lang.Object o$10;
        if ((o$10 = o) instanceof .org.eclipse.ceylon.compiler.java.test.structure.reified.outerMethod$InnerInterface_ && .org.eclipse.ceylon.compiler.java.Util.isReified(o$10, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.functionOrValue(.org.eclipse.ceylon.compiler.java.test.structure.reified.outerMethod_.class), .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.structure.reified.outerMethod$InnerInterface_.class, .ceylon.language.Integer.$TypeDescriptor$)))) {
            final .org.eclipse.ceylon.compiler.java.test.structure.reified.outerMethod$InnerInterface_<.ceylon.language.Integer> o$11 = (.org.eclipse.ceylon.compiler.java.test.structure.reified.outerMethod$InnerInterface_<.ceylon.language.Integer>)(.org.eclipse.ceylon.compiler.java.test.structure.reified.outerMethod$InnerInterface_)o$10;
        }
        
        @.org.eclipse.ceylon.compiler.java.metadata.Ceylon(
                major = 8,
                minor = 1)
        @.org.eclipse.ceylon.compiler.java.metadata.Name("InnerClass2")
        @.org.eclipse.ceylon.compiler.java.metadata.LocalDeclaration(qualifier = "1")
        class InnerClass2 implements .org.eclipse.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
            
            InnerClass2() {
            }
            
            @.java.lang.Override
            @.org.eclipse.ceylon.compiler.java.metadata.Ignore
            public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
                return .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.functionOrValue(.org.eclipse.ceylon.compiler.java.test.structure.reified.outerMethod_.class), .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(InnerClass2.class));
            }
        }
    }
}
@.org.eclipse.ceylon.compiler.java.metadata.Ceylon(
        major = 8,
        minor = 1)
@.ceylon.language.SharedAnnotation$annotation$
@.org.eclipse.ceylon.compiler.java.metadata.Members({@.org.eclipse.ceylon.compiler.java.metadata.Member(klass = .org.eclipse.ceylon.compiler.java.test.structure.reified.OuterClass2.InnerClass.class)})
public class OuterClass2 implements .org.eclipse.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    public OuterClass2() {
    }
    
    @.org.eclipse.ceylon.compiler.java.metadata.Ignore
    public .org.eclipse.ceylon.compiler.java.test.structure.reified.OuterClass2.InnerClass InnerClass$new$() {
        return new InnerClass();
    }
    
    @.org.eclipse.ceylon.compiler.java.metadata.Ceylon(
            major = 8,
            minor = 1)
    @.ceylon.language.SharedAnnotation$annotation$
    @.org.eclipse.ceylon.compiler.java.metadata.Container(
            klass = .org.eclipse.ceylon.compiler.java.test.structure.reified.OuterClass2.class,
            isStatic = false)
    public class InnerClass implements .org.eclipse.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
        
        protected InnerClass() {
        }
        
        @.java.lang.Override
        @.org.eclipse.ceylon.compiler.java.metadata.Ignore
        public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
            return .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.org.eclipse.ceylon.compiler.java.test.structure.reified.OuterClass2.$TypeDescriptor$, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.structure.reified.OuterClass2.InnerClass.class));
        }
    }
    
    @.org.eclipse.ceylon.compiler.java.metadata.Ignore
    public static void main(.java.lang.String[] args) {
        .org.eclipse.ceylon.compiler.java.Util.storeArgs(args);
        new .org.eclipse.ceylon.compiler.java.test.structure.reified.OuterClass2();
    }
    
    @.java.lang.Override
    @.org.eclipse.ceylon.compiler.java.metadata.Ignore
    public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .org.eclipse.ceylon.compiler.java.test.structure.reified.OuterClass2.$TypeDescriptor$;
    }
    @.org.eclipse.ceylon.compiler.java.metadata.Ignore
    public static final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.structure.reified.OuterClass2.class);
}
@.org.eclipse.ceylon.compiler.java.metadata.Ceylon(
        major = 8,
        minor = 1)
@.org.eclipse.ceylon.compiler.java.metadata.Method
public final class testMembers_ {
    
    private testMembers_() {
    }
    
    @.ceylon.language.SharedAnnotation$annotation$
    public static void testMembers(@.org.eclipse.ceylon.compiler.java.metadata.Name("o")
    @.org.eclipse.ceylon.common.NonNull
    @.org.eclipse.ceylon.compiler.java.metadata.TypeInfo("ceylon.language::Object")
    final .java.lang.Object o) {
        .java.lang.Object o$13;
        if ((o$13 = o) instanceof .org.eclipse.ceylon.compiler.java.test.structure.reified.OuterClass.InnerClass && .org.eclipse.ceylon.compiler.java.Util.isReified(o$13, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.structure.reified.OuterClass.class, .ceylon.language.Integer.$TypeDescriptor$), .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.structure.reified.OuterClass.InnerClass.class, .ceylon.language.String.$TypeDescriptor$)))) {
            final .org.eclipse.ceylon.compiler.java.test.structure.reified.OuterClass<.ceylon.language.Integer>.InnerClass<.ceylon.language.String> o$14 = (.org.eclipse.ceylon.compiler.java.test.structure.reified.OuterClass<.ceylon.language.Integer>.InnerClass<.ceylon.language.String>)(.org.eclipse.ceylon.compiler.java.test.structure.reified.OuterClass.InnerClass)o$13;
        }
    }
}