package org.eclipse.ceylon.compiler.java.test.interop.sdk;

@.java.lang.SuppressWarnings({
        "Some",
        "code generator name"})
@.org.eclipse.ceylon.compiler.java.test.interop.sdk.JavaAnnotationPrimitives(
        b = true,
        o = (byte)8L,
        s = (short)16L,
        i = (int)32L,
        l = 64L,
        f = (float)32.0,
        d = 64.0,
        str = "",
        ba = true,
        oa = (byte)8L,
        sa = (short)16L,
        ia = (int)32L,
        la = 64L,
        fa = (float)32.0,
        da = 64.0,
        stra = "")
@.org.eclipse.ceylon.compiler.java.test.interop.sdk.JavaAnnotationClass(
        clas = .ceylon.language.String.class,
        classRaw = .java.lang.String.class,
        classWithBound = .java.lang.Exception.class,
        classExact = .java.lang.String.class,
        classes = {
                .java.lang.String.class,
                .java.lang.Boolean.class,
                .ceylon.language.Sequential.class},
        classesRaw = {
                .java.lang.String.class,
                .java.lang.Boolean.class,
                .ceylon.language.Sequential.class},
        classesWithBound = {
                .java.lang.Exception.class,
                .ceylon.language.AssertionError.class},
        classesExact = .java.lang.String.class)
@.org.eclipse.ceylon.compiler.java.test.interop.sdk.JavaAnnotationEnum(
        threadState = .java.lang.Thread.State.NEW,
        threadStates = {
                .java.lang.Thread.State.RUNNABLE,
                .java.lang.Thread.State.BLOCKED})
@.org.eclipse.ceylon.compiler.java.test.interop.sdk.JavaAnnotationAnnotation(
        annotation = @.org.eclipse.ceylon.compiler.java.test.interop.sdk.JavaAnnotationEnum(
                threadState = .java.lang.Thread.State.NEW,
                threadStates = {
                        .java.lang.Thread.State.RUNNABLE,
                        .java.lang.Thread.State.BLOCKED}),
        annotations = @.org.eclipse.ceylon.compiler.java.test.interop.sdk.JavaAnnotationEnum(
                threadState = .java.lang.Thread.State.NEW,
                threadStates = {
                        .java.lang.Thread.State.RUNNABLE,
                        .java.lang.Thread.State.BLOCKED}))
@.org.eclipse.ceylon.compiler.java.test.interop.sdk.JAVAAnnotationAcronym
@.org.eclipse.ceylon.compiler.java.test.interop.sdk.javaAnnotationLowercase
@.org.eclipse.ceylon.compiler.java.test.interop.sdk.JavaAnnotationDefaultTarget
@.org.eclipse.ceylon.compiler.java.test.interop.sdk.JavaAnnotationOnEveryTarget
class AnnotationInterop implements .org.eclipse.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    @.org.eclipse.ceylon.compiler.java.test.interop.sdk.JavaAnnotationDefaultTarget
    @.org.eclipse.ceylon.compiler.java.test.interop.sdk.JavaAnnotationOnEveryTarget
    AnnotationInterop() {
        this.tom = "";
    }
    @.java.lang.SuppressWarnings("a")
    @.org.eclipse.ceylon.compiler.java.test.interop.sdk.JavaAnnotationDefaultTarget
    @.org.eclipse.ceylon.compiler.java.test.interop.sdk.JavaAnnotationOnEveryTarget
    private .java.lang.String tom;
    
    @.org.eclipse.ceylon.compiler.java.test.interop.sdk.JavaAnnotationDefaultTarget
    @.org.eclipse.ceylon.compiler.java.test.interop.sdk.JavaAnnotationOnEveryTarget
    @.ceylon.language.SharedAnnotation$annotation$
    @.ceylon.language.VariableAnnotation$annotation$
    public final .java.lang.String getTom() {
        return this.tom;
    }
    
    @.org.eclipse.ceylon.compiler.java.test.interop.sdk.JavaAnnotationDefaultTarget
    @.org.eclipse.ceylon.compiler.java.test.interop.sdk.JavaAnnotationOnEveryTarget
    public final void setTom(final .java.lang.String tom) {
        this.tom = tom;
    }
    
    @.java.lang.SuppressWarnings("a")
    @.org.eclipse.ceylon.compiler.java.test.interop.sdk.JavaAnnotationDefaultTarget
    @.org.eclipse.ceylon.compiler.java.test.interop.sdk.JavaAnnotationOnEveryTarget
    @.ceylon.language.SharedAnnotation$annotation$
    public final void afterConstrution() {
    }
    
    @.java.lang.SuppressWarnings("a")
    @.ceylon.language.SharedAnnotation$annotation$
    public final void beforeDestruction() {
    }
    
    @.ceylon.language.SharedAnnotation$annotation$
    public final void method(@.org.eclipse.ceylon.compiler.java.test.interop.sdk.JavaAnnotationDefaultTarget
    @.org.eclipse.ceylon.compiler.java.test.interop.sdk.JavaAnnotationOnEveryTarget
    final long param) {
        final long var = 2L;
    }
    
    @.java.lang.Override
    public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .org.eclipse.ceylon.compiler.java.test.interop.sdk.AnnotationInterop.$TypeDescriptor$;
    }
    public static final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.interop.sdk.AnnotationInterop.class);
}
@.org.eclipse.ceylon.compiler.java.metadata.Ceylon(
        major = 8,
        minor = 1)
@.java.lang.annotation.Retention(.java.lang.annotation.RetentionPolicy.RUNTIME)
@.org.eclipse.ceylon.compiler.java.metadata.Ignore
@.org.eclipse.ceylon.compiler.java.test.interop.sdk.JavaAnnotationDefaultTarget
@.org.eclipse.ceylon.compiler.java.test.interop.sdk.JavaAnnotationOnEveryTarget
@.java.lang.annotation.Target({
        .java.lang.annotation.ElementType.CONSTRUCTOR,
        .java.lang.annotation.ElementType.PARAMETER,
        .java.lang.annotation.ElementType.METHOD,
        .java.lang.annotation.ElementType.FIELD,
        .java.lang.annotation.ElementType.TYPE})
public @interface Anno$annotation$ {
}
@.org.eclipse.ceylon.compiler.java.metadata.Ceylon(
        major = 8,
        minor = 1)
@.ceylon.language.SharedAnnotation$annotation$
@.ceylon.language.FinalAnnotation$annotation$
@.ceylon.language.AnnotationAnnotation$annotation$
@.org.eclipse.ceylon.compiler.java.metadata.SatisfiedTypes({"ceylon.language::OptionalAnnotation<org.eclipse.ceylon.compiler.java.test.interop.sdk::Anno,ceylon.language::Annotated,ceylon.language::Anything>"})
public final class Anno implements .org.eclipse.ceylon.compiler.java.runtime.model.ReifiedType, .ceylon.language.OptionalAnnotation<.org.eclipse.ceylon.compiler.java.test.interop.sdk.Anno, .ceylon.language.Annotated, .java.lang.Object>, .java.io.Serializable {
    
    @.org.eclipse.ceylon.compiler.java.metadata.Ignore
    public Anno(.org.eclipse.ceylon.compiler.java.test.interop.sdk.Anno$annotation$ anno) {
        this();
    }
    
    public Anno() {
    }
    
    @.org.eclipse.ceylon.compiler.java.metadata.Ignore
    public static void main(.java.lang.String[] args) {
        .org.eclipse.ceylon.compiler.java.Util.storeArgs(args);
        new .org.eclipse.ceylon.compiler.java.test.interop.sdk.Anno();
    }
    
    @.java.lang.Override
    @.org.eclipse.ceylon.compiler.java.metadata.Ignore
    public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .org.eclipse.ceylon.compiler.java.test.interop.sdk.Anno.$TypeDescriptor$;
    }
    @.org.eclipse.ceylon.compiler.java.metadata.Ignore
    public static final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.interop.sdk.Anno.class);
    
    @.java.lang.Override
    @.org.eclipse.ceylon.compiler.java.metadata.Ignore
    public .java.lang.Class<? extends .java.lang.annotation.Annotation> annotationType() {
        return .org.eclipse.ceylon.compiler.java.test.interop.sdk.Anno$annotation$.class;
    }
}
@.org.eclipse.ceylon.compiler.java.metadata.Ceylon(
        major = 8,
        minor = 1)
@.org.eclipse.ceylon.compiler.java.metadata.Method
@.org.eclipse.ceylon.compiler.java.metadata.AnnotationInstantiation(
        arguments = {},
        primary = .org.eclipse.ceylon.compiler.java.test.interop.sdk.Anno.class)
public final class anno_ {
    
    private anno_() {
    }
    
    @.ceylon.language.SharedAnnotation$annotation$
    @.ceylon.language.AnnotationAnnotation$annotation$
    @.org.eclipse.ceylon.common.NonNull
    @.org.eclipse.ceylon.compiler.java.metadata.TypeInfo("org.eclipse.ceylon.compiler.java.test.interop.sdk::Anno")
    public static .org.eclipse.ceylon.compiler.java.test.interop.sdk.Anno anno() {
        return new .org.eclipse.ceylon.compiler.java.test.interop.sdk.Anno();
    }
    
    @.org.eclipse.ceylon.compiler.java.metadata.Ignore
    public static void main(.java.lang.String[] args) {
        .org.eclipse.ceylon.compiler.java.Util.storeArgs(args);
        .org.eclipse.ceylon.compiler.java.test.interop.sdk.anno_.anno();
    }
}
@.org.eclipse.ceylon.compiler.java.metadata.Ceylon(
        major = 8,
        minor = 1)
@.org.eclipse.ceylon.compiler.java.metadata.Class(constructors = true)
class CPAnnoTest2 implements .org.eclipse.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    @.org.eclipse.ceylon.compiler.java.metadata.Jpa
    @.org.eclipse.ceylon.compiler.java.metadata.Ignore
    protected CPAnnoTest2() {
        super();
    }
    
    @.java.lang.SuppressWarnings("by you")
    @.ceylon.language.SharedAnnotation$annotation$
    public CPAnnoTest2(@.org.eclipse.ceylon.compiler.java.metadata.Name("x")
    @.org.eclipse.ceylon.common.NonNull
    @.java.lang.SuppressWarnings("by me")
    final .java.lang.String x$param$) {
    }
    @.org.eclipse.ceylon.compiler.java.metadata.Ignore
    public static final .org.eclipse.ceylon.compiler.java.test.interop.sdk.CPAnnoTest2.other_ other_ = null;
    
    @.org.eclipse.ceylon.compiler.java.metadata.Ceylon(
            major = 8,
            minor = 1)
    @.org.eclipse.ceylon.compiler.java.metadata.Ignore
    @.org.eclipse.ceylon.compiler.java.metadata.ConstructorName("other")
    public static final class other_ {
        
        other_() {
        }
    }
    
    @.ceylon.language.SharedAnnotation$annotation$
    @.org.eclipse.ceylon.compiler.java.metadata.Name("other")
    public CPAnnoTest2(@.org.eclipse.ceylon.compiler.java.metadata.Ignore
    .org.eclipse.ceylon.compiler.java.test.interop.sdk.CPAnnoTest2.other_ $name$, @.org.eclipse.ceylon.compiler.java.metadata.Name("x")
    @.org.eclipse.ceylon.common.NonNull
    @.java.lang.SuppressWarnings("by me")
    final .java.lang.String x$param$) {
    }
    
    @.java.lang.Override
    @.org.eclipse.ceylon.compiler.java.metadata.Ignore
    public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .org.eclipse.ceylon.compiler.java.test.interop.sdk.CPAnnoTest2.$TypeDescriptor$;
    }
    @.org.eclipse.ceylon.compiler.java.metadata.Ignore
    public static final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.interop.sdk.CPAnnoTest2.class);
}
@.org.eclipse.ceylon.compiler.java.metadata.Ceylon(
        major = 8,
        minor = 1)
@.org.eclipse.ceylon.compiler.java.metadata.Method
final class bug2103_ {
    
    private bug2103_() {
    }
    
    @.java.lang.SuppressWarnings(.java.util.jar.JarFile.MANIFEST_NAME)
    static void bug2103() {
    }
}