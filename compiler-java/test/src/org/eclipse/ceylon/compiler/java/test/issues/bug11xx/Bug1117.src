package org.eclipse.ceylon.compiler.java.test.issues.bug11xx;

abstract class Bug1117Tree implements .org.eclipse.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    Bug1117Tree() {
    }
    
    public abstract long evaluate();
    
    @.java.lang.Override
    public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .org.eclipse.ceylon.compiler.java.test.issues.bug11xx.Bug1117Tree.$TypeDescriptor$;
    }
    public static final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.issues.bug11xx.Bug1117Tree.class);
}
class Bug1117Constant extends .org.eclipse.ceylon.compiler.java.test.issues.bug11xx.Bug1117Tree {
    
    protected Bug1117Constant() {
        super();
        this.val = 0L;
    }
    
    Bug1117Constant(final long val) {
        super();
        this.val = val;
    }
    private final long val;
    
    private final long getVal$priv$() {
        return this.val;
    }
    
    @.java.lang.Override
    public final long evaluate() {
        return getVal$priv$();
    }
    
    @.java.lang.Override
    public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .org.eclipse.ceylon.compiler.java.test.issues.bug11xx.Bug1117Constant.$TypeDescriptor$;
    }
    public static final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.issues.bug11xx.Bug1117Constant.class);
}
class Bug1117UnaryOperator extends .org.eclipse.ceylon.compiler.java.test.issues.bug11xx.Bug1117Tree {
    
    protected Bug1117UnaryOperator() {
        super();
        this.branch = null;
        this.f = null;
    }
    
    Bug1117UnaryOperator(final .org.eclipse.ceylon.compiler.java.test.issues.bug11xx.Bug1117Tree branch, final .ceylon.language.Callable<? extends .ceylon.language.Integer> f) {
        super();
        this.branch = branch;
        this.f = f;
    }
    private final .org.eclipse.ceylon.compiler.java.test.issues.bug11xx.Bug1117Tree branch;
    
    private final .org.eclipse.ceylon.compiler.java.test.issues.bug11xx.Bug1117Tree getBranch$priv$() {
        return this.branch;
    }
    private final .ceylon.language.Callable<? extends .ceylon.language.Integer> f;
    
    private final long f$priv$(final long i) {
        return f.$call$(.ceylon.language.Integer.instance(i)).longValue();
    }
    
    @.java.lang.Override
    public final long evaluate() {
        return f$priv$(getBranch$priv$().evaluate());
    }
    
    @.java.lang.Override
    public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .org.eclipse.ceylon.compiler.java.test.issues.bug11xx.Bug1117UnaryOperator.$TypeDescriptor$;
    }
    public static final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.issues.bug11xx.Bug1117UnaryOperator.class);
}
class Bug1117BinaryOperator extends .org.eclipse.ceylon.compiler.java.test.issues.bug11xx.Bug1117Tree {
    
    protected Bug1117BinaryOperator() {
        super();
        this.left = null;
        this.right = null;
        this.f = null;
    }
    
    Bug1117BinaryOperator(final .org.eclipse.ceylon.compiler.java.test.issues.bug11xx.Bug1117Tree left, final .org.eclipse.ceylon.compiler.java.test.issues.bug11xx.Bug1117Tree right, final .ceylon.language.Callable<? extends .ceylon.language.Integer> f) {
        super();
        this.left = left;
        this.right = right;
        this.f = f;
    }
    private final .org.eclipse.ceylon.compiler.java.test.issues.bug11xx.Bug1117Tree left;
    
    private final .org.eclipse.ceylon.compiler.java.test.issues.bug11xx.Bug1117Tree getLeft$priv$() {
        return this.left;
    }
    private final .org.eclipse.ceylon.compiler.java.test.issues.bug11xx.Bug1117Tree right;
    
    private final .org.eclipse.ceylon.compiler.java.test.issues.bug11xx.Bug1117Tree getRight$priv$() {
        return this.right;
    }
    private final .ceylon.language.Callable<? extends .ceylon.language.Integer> f;
    
    private final long f$priv$(final long i, final long j) {
        return f.$call$(.ceylon.language.Integer.instance(i), .ceylon.language.Integer.instance(j)).longValue();
    }
    
    @.java.lang.Override
    public final long evaluate() {
        return f$priv$(getLeft$priv$().evaluate(), getRight$priv$().evaluate());
    }
    
    @.java.lang.Override
    public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .org.eclipse.ceylon.compiler.java.test.issues.bug11xx.Bug1117BinaryOperator.$TypeDescriptor$;
    }
    public static final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.issues.bug11xx.Bug1117BinaryOperator.class);
}
class Bug1117UnaryMinus extends .org.eclipse.ceylon.compiler.java.test.issues.bug11xx.Bug1117UnaryOperator {
    
    protected Bug1117UnaryMinus() {
        super();
    }
    
    Bug1117UnaryMinus(final .org.eclipse.ceylon.compiler.java.test.issues.bug11xx.Bug1117Tree t) {
        super(t, new .org.eclipse.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor$, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.tuple(false, false, -1, .ceylon.language.Integer.$TypeDescriptor$), "Integer(Integer)", (short)-1){
            
            @.java.lang.Override
            public .ceylon.language.Integer $call$(final .java.lang.Object $param$0) {
                final long t = ((.ceylon.language.Integer)$param$0).longValue();
                return .ceylon.language.Integer.instance(-t);
            }
        });
    }
    
    @.java.lang.Override
    public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .org.eclipse.ceylon.compiler.java.test.issues.bug11xx.Bug1117UnaryMinus.$TypeDescriptor$;
    }
    public static final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.issues.bug11xx.Bug1117UnaryMinus.class);
}
class Bug1117Plus extends .org.eclipse.ceylon.compiler.java.test.issues.bug11xx.Bug1117BinaryOperator {
    
    protected Bug1117Plus() {
        super();
    }
    
    Bug1117Plus(final .org.eclipse.ceylon.compiler.java.test.issues.bug11xx.Bug1117Tree left, final .org.eclipse.ceylon.compiler.java.test.issues.bug11xx.Bug1117Tree right) {
        super(left, right, new .org.eclipse.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor$, .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.tuple(false, false, -1, .ceylon.language.Integer.$TypeDescriptor$, .ceylon.language.Integer.$TypeDescriptor$), "Integer(Integer, Integer)", (short)-1){
            
            @.java.lang.Override
            public .ceylon.language.Integer $call$(final .java.lang.Object $param$0, final .java.lang.Object $param$1) {
                final long l = ((.ceylon.language.Integer)$param$0).longValue();
                final long r = ((.ceylon.language.Integer)$param$1).longValue();
                return .ceylon.language.Integer.instance(l + r);
            }
        });
    }
    
    @.java.lang.Override
    public .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .org.eclipse.ceylon.compiler.java.test.issues.bug11xx.Bug1117Plus.$TypeDescriptor$;
    }
    public static final .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .org.eclipse.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.org.eclipse.ceylon.compiler.java.test.issues.bug11xx.Bug1117Plus.class);
}
final class bug1117_ {
    
    private bug1117_() {
    }
    
    static void bug1117() {
        final .org.eclipse.ceylon.compiler.java.test.issues.bug11xx.Bug1117Plus t = new .org.eclipse.ceylon.compiler.java.test.issues.bug11xx.Bug1117Plus(new .org.eclipse.ceylon.compiler.java.test.issues.bug11xx.Bug1117UnaryMinus(new .org.eclipse.ceylon.compiler.java.test.issues.bug11xx.Bug1117Constant(2L)), new .org.eclipse.ceylon.compiler.java.test.issues.bug11xx.Bug1117Constant(3L));
        .ceylon.language.print_.print(.ceylon.language.Integer.instance(t.evaluate()));
    }
}