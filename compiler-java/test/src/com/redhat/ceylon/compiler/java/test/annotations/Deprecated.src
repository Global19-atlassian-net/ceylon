package com.redhat.ceylon.compiler.java.test.annotations;

@.ceylon.language.DeprecationAnnotation$annotation$(description = "A deprecated class")
@.ceylon.language.SharedAnnotation$annotation$
@.java.lang.Deprecated
public class Deprecated implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    @.java.lang.Deprecated
    public Deprecated() {
        (
            let
            {
                .java.lang.String $ceylontmp$s$0 = .com.redhat.ceylon.compiler.java.test.annotations.Deprecated.$default$s();
                this($ceylontmp$s$0);
            }
            returning null;
        );
    }
    
    @.java.lang.Deprecated
    public Deprecated(final .java.lang.String s) {
    }
    
    public static .java.lang.String $default$s() {
        return "";
    }
    
    public static void main(.java.lang.String[] args) {
        .com.redhat.ceylon.compiler.java.Util.storeArgs(args);
        new .com.redhat.ceylon.compiler.java.test.annotations.Deprecated();
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.annotations.Deprecated.$TypeDescriptor$;
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.annotations.Deprecated.class);
}
@.ceylon.language.SharedAnnotation$annotation$
public class DeprecatedMembers implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    @.java.lang.Deprecated
    public DeprecatedMembers() {
        (
            let
            {
                .java.lang.String $ceylontmp$s$2 = .com.redhat.ceylon.compiler.java.test.annotations.DeprecatedMembers.DeprecatedMembers$s();
                this($ceylontmp$s$2);
            }
            returning null;
        );
    }
    
    @.java.lang.Deprecated
    public DeprecatedMembers(.com.redhat.ceylon.compiler.java.test.annotations.DeprecatedMembers.named_ $name$) {
        (
            let
            {
                .java.lang.String $ceylontmp$s$3 = .com.redhat.ceylon.compiler.java.test.annotations.DeprecatedMembers.DeprecatedMembers$named$s();
                this($name$, $ceylontmp$s$3);
            }
            returning null;
        );
    }
    
    @.java.lang.Deprecated
    public final void m() {
        (
            let
            {
                .java.lang.String $ceylontmp$s$1 = m$s();
                m$canonical$($ceylontmp$s$1);
            }
            returning null;
        );
    }
    
    public final .java.lang.String m$s() {
        return "";
    }
    
    private void m$canonical$(final .java.lang.String s) {
    }
    
    @.ceylon.language.DeprecationAnnotation$annotation$(description = "A deprecated method")
    @.ceylon.language.SharedAnnotation$annotation$
    @.java.lang.Deprecated
    public final void m(final .java.lang.String s) {
        (
            let
            {
                m$canonical$(s);
            }
            returning null;
        );
    }
    
    public static final .java.lang.String DeprecatedMembers$s() {
        return "";
    }
    
    @.ceylon.language.DeprecationAnnotation$annotation$(description = "default constructor")
    @.ceylon.language.SharedAnnotation$annotation$
    @.java.lang.Deprecated
    public DeprecatedMembers(final .java.lang.String s$param$) {
    }
    public static final .com.redhat.ceylon.compiler.java.test.annotations.DeprecatedMembers.named_ named_ = null;
    
    public static final .java.lang.String DeprecatedMembers$named$s() {
        return "";
    }
    
    public static final class named_ {
        
        named_() {
        }
    }
    
    @.ceylon.language.DeprecationAnnotation$annotation$(description = "named constructor")
    @.ceylon.language.SharedAnnotation$annotation$
    @.java.lang.Deprecated
    public DeprecatedMembers(.com.redhat.ceylon.compiler.java.test.annotations.DeprecatedMembers.named_ $name$, final .java.lang.String s$param$) {
    }
    
    private static final class val_ {
        
        val_() {
        }
    }
    
    private DeprecatedMembers(.com.redhat.ceylon.compiler.java.test.annotations.DeprecatedMembers.val_ $name$) {
    }
    private static final .com.redhat.ceylon.compiler.java.test.annotations.DeprecatedMembers val;
    static {
        val = new DeprecatedMembers((.com.redhat.ceylon.compiler.java.test.annotations.DeprecatedMembers.val_)null);
    }
    
    @.ceylon.language.DeprecationAnnotation$annotation$(description = "value constructor")
    @.ceylon.language.SharedAnnotation$annotation$
    @.java.lang.Deprecated
    public static final .com.redhat.ceylon.compiler.java.test.annotations.DeprecatedMembers getDeprecatedMembers$val() {
        return .com.redhat.ceylon.compiler.java.test.annotations.DeprecatedMembers.val;
    }
    
    public static void main(.java.lang.String[] args) {
        .com.redhat.ceylon.compiler.java.Util.storeArgs(args);
        new .com.redhat.ceylon.compiler.java.test.annotations.DeprecatedMembers();
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.annotations.DeprecatedMembers.$TypeDescriptor$;
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.annotations.DeprecatedMembers.class);
    
    private final .java.lang.Object writeReplace() {
        final .java.lang.String $name$;
        if (this == val) {
            $name$ = "getDeprecatedMembers$val";
        } else return this;
        return new .com.redhat.ceylon.compiler.java.language.SerializationProxy(.com.redhat.ceylon.compiler.java.test.annotations.DeprecatedMembers.class, $name$);
    }
}
public final class deprecatedFunction_ {
    
    private deprecatedFunction_() {
    }
    
    @.java.lang.Deprecated
    public static void deprecatedFunction() {
        (
            let
            {
                .java.lang.String $ceylontmp$s$4 = .com.redhat.ceylon.compiler.java.test.annotations.deprecatedFunction_.deprecatedFunction$s();
                deprecatedFunction($ceylontmp$s$4);
            }
            returning null;
        );
    }
    
    public static final .java.lang.String deprecatedFunction$s() {
        return "";
    }
    
    @.ceylon.language.DeprecationAnnotation$annotation$(description = "A deprecated function")
    @.ceylon.language.SharedAnnotation$annotation$
    @.java.lang.Deprecated
    public static void deprecatedFunction(final .java.lang.String s) {
    }
    
    public static void main(.java.lang.String[] args) {
        .com.redhat.ceylon.compiler.java.Util.storeArgs(args);
        .com.redhat.ceylon.compiler.java.test.annotations.deprecatedFunction_.deprecatedFunction();
    }
}
@.ceylon.language.DeprecationAnnotation$annotation$(description = "A deprecated aliase")
@.java.lang.Deprecated
final class DeprecatedAlias {
    
    private DeprecatedAlias() {
    }
}
public final class deprecatedValue_ {
    
    private deprecatedValue_() {
    }
    
    @.ceylon.language.DeprecationAnnotation$annotation$(description = "A deprecated value")
    @.ceylon.language.SharedAnnotation$annotation$
    @.java.lang.Deprecated
    public static .java.lang.String get_() {
        return "";
    }
}