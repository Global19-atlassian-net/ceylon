package com.redhat.ceylon.compiler.java.test.issues.bug63xx;

@.com.redhat.ceylon.compiler.java.metadata.Ceylon(
        major = 8,
        minor = 1)
@.com.redhat.ceylon.compiler.java.metadata.Method
@.com.redhat.ceylon.compiler.java.metadata.LocalDeclarations({"1C"})
public final class bug6362_ {
    
    private bug6362_() {
    }
    
    @.ceylon.language.SharedAnnotation$annotation$
    public static void bug6362() {
        final VariableBox<C> $instance$C$c = new VariableBox<C>(null);
        
        @.com.redhat.ceylon.compiler.java.metadata.Ceylon(
                major = 8,
                minor = 1)
        @.com.redhat.ceylon.compiler.java.metadata.Name("C")
        @.com.redhat.ceylon.compiler.java.metadata.LocalDeclaration(qualifier = "1")
        @.com.redhat.ceylon.compiler.java.metadata.Class(constructors = true)
        class C implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
            
            @.com.redhat.ceylon.compiler.java.metadata.Ceylon(
                    major = 8,
                    minor = 1)
            @.com.redhat.ceylon.compiler.java.metadata.Ignore
            @.com.redhat.ceylon.compiler.java.metadata.ConstructorName("c")
            final class c_ {
                
                c_() {
                }
            }
            
            @.ceylon.language.SharedAnnotation$annotation$
            @.com.redhat.ceylon.compiler.java.metadata.Name("c")
            @.com.redhat.ceylon.compiler.java.metadata.Enumerated
            private C(@.com.redhat.ceylon.compiler.java.metadata.Ignore
            C.c_ $name$) {
            }
            
            @.com.redhat.ceylon.compiler.java.metadata.Ceylon(
                    major = 8,
                    minor = 1)
            @.com.redhat.ceylon.compiler.java.metadata.Ignore
            @.com.redhat.ceylon.compiler.java.metadata.ConstructorName("d")
            class d_ {
                
                d_() {
                }
            }
            
            @.ceylon.language.SharedAnnotation$annotation$
            @.com.redhat.ceylon.compiler.java.metadata.Name("d")
            private C(@.com.redhat.ceylon.compiler.java.metadata.Ignore
            C.d_ $name$) {
            }
            
            @.java.lang.Override
            @.com.redhat.ceylon.compiler.java.metadata.Ignore
            public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
                return .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.functionOrValue(.com.redhat.ceylon.compiler.java.test.issues.bug63xx.bug6362_.class), .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(C.class));
            }
        }
        $instance$C$c.ref = new C((C.c_)null);
        final .ceylon.language.meta.model.Class c = (.ceylon.language.meta.model.Class).ceylon.language.meta.typeLiteral_.typeLiteral(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.functionOrValue(.com.redhat.ceylon.compiler.java.test.issues.bug63xx.bug6362_.class), .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(C.class)));
        long lhs$0 = ((.ceylon.language.Sequential<? extends .ceylon.language.meta.model.ValueModel>)c.getValueConstructors()).getSize();
        long rhs$1 = 1L;
        if (lhs$0 == rhs$1) {
        } else {
            throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tviolated " + "c.getValueConstructors().size == 1") + .com.redhat.ceylon.compiler.java.Util.assertBinOpFailed(.ceylon.language.Integer.instance(lhs$0), .ceylon.language.Integer.instance(rhs$1)));
        }
        final .ceylon.language.meta.model.ValueConstructor<? extends C> cc1$3;
        .java.lang.Object cc1$2 = null;
        if ((cc1$2 = ((.ceylon.language.List<? extends .ceylon.language.meta.model.ValueModel>)c.getValueConstructors()).getFromFirst(0L)) instanceof .ceylon.language.meta.model.ValueConstructor && .com.redhat.ceylon.compiler.java.Util.isReified(cc1$2, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.meta.model.ValueConstructor.class, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.functionOrValue(.com.redhat.ceylon.compiler.java.test.issues.bug63xx.bug6362_.class), .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(C.class))))) {
            cc1$3 = (.ceylon.language.meta.model.ValueConstructor<? extends C>)(.ceylon.language.meta.model.ValueConstructor)cc1$2;
        } else {
            throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tviolated " + "is ValueConstructor<C> cc1 = c.getValueConstructors()[0]") + .com.redhat.ceylon.compiler.java.Util.assertIsFailed(false, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.meta.model.ValueConstructor.class, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.functionOrValue(.com.redhat.ceylon.compiler.java.test.issues.bug63xx.bug6362_.class), .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(C.class))), cc1$2));
        }
        try {
            .ceylon.language.print_.print(((.ceylon.language.meta.model.Gettable)cc1$3).get());
            throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tviolated " + "false"));
        } catch (final .ceylon.language.meta.model.StorageException x) {
        }
        long lhs$4 = ((.ceylon.language.Sequential<? extends .ceylon.language.meta.model.FunctionModel>)c.<.ceylon.language.Sequential<? extends .java.lang.Object>>getCallableConstructors(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType)).getSize();
        long rhs$5 = 1L;
        if (lhs$4 == rhs$5) {
        } else {
            throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tviolated " + "c.getCallableConstructors<>().size == 1") + .com.redhat.ceylon.compiler.java.Util.assertBinOpFailed(.ceylon.language.Integer.instance(lhs$4), .ceylon.language.Integer.instance(rhs$5)));
        }
        final .ceylon.language.meta.model.CallableConstructor cc2$7;
        .java.lang.Object cc2$6 = null;
        if ((cc2$6 = ((.ceylon.language.List<? extends .ceylon.language.meta.model.FunctionModel>)c.<.ceylon.language.Sequential<? extends .java.lang.Object>>getCallableConstructors(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType)).getFromFirst(0L)) instanceof .ceylon.language.meta.model.CallableConstructor && .com.redhat.ceylon.compiler.java.Util.isReified(cc2$6, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.meta.model.CallableConstructor.class, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.functionOrValue(.com.redhat.ceylon.compiler.java.test.issues.bug63xx.bug6362_.class), .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(C.class)), .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType))) {
            cc2$7 = (.ceylon.language.meta.model.CallableConstructor)cc2$6;
        } else {
            throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tviolated " + "is CallableConstructor<C, Nothing> cc2 = c.getCallableConstructors<>()[0]") + .com.redhat.ceylon.compiler.java.Util.assertIsFailed(false, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.meta.model.CallableConstructor.class, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.functionOrValue(.com.redhat.ceylon.compiler.java.test.issues.bug63xx.bug6362_.class), .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(C.class)), .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType), cc2$6));
        }
    }
    
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public static void main(.java.lang.String[] args) {
        .com.redhat.ceylon.compiler.java.Util.storeArgs(args);
        .com.redhat.ceylon.compiler.java.test.issues.bug63xx.bug6362_.bug6362();
    }
}