package com.redhat.ceylon.compiler.java.test.structure.constructor;

class SingletonCtorDelegation implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    protected SingletonCtorDelegation() {
        super();
        this.x = 0.0;
        this.y = 0.0;
    }
    private final double x;
    
    public final double getX() {
        return this.x;
    }
    private final double y;
    
    public final double getY() {
        return this.y;
    }
    private static final .com.redhat.ceylon.compiler.java.test.structure.constructor.SingletonCtorDelegation.cartesian$delegation$_ cartesian$delegation$_ = null;
    
    private static final class cartesian$delegation$_ {
        
        cartesian$delegation$_() {
        }
    }
    
    private SingletonCtorDelegation(.com.redhat.ceylon.compiler.java.test.structure.constructor.SingletonCtorDelegation.cartesian$delegation$_ $name$, final double x$param$, final double y$param$) {
        this.x = x$param$;
        this.y = y$param$;
    }
    public static final .com.redhat.ceylon.compiler.java.test.structure.constructor.SingletonCtorDelegation.cartesian_ cartesian_ = null;
    
    public static final class cartesian_ {
        
        cartesian_() {
        }
    }
    
    public SingletonCtorDelegation(.com.redhat.ceylon.compiler.java.test.structure.constructor.SingletonCtorDelegation.cartesian_ $name$, final double x$param$, final double y$param$) {
        this(.com.redhat.ceylon.compiler.java.test.structure.constructor.SingletonCtorDelegation.cartesian$delegation$_, x$param$, y$param$);
    }
    
    private static final class origin_ {
        
        origin_() {
        }
    }
    
    private SingletonCtorDelegation(.com.redhat.ceylon.compiler.java.test.structure.constructor.SingletonCtorDelegation.origin_ $name$) {
        this(.com.redhat.ceylon.compiler.java.test.structure.constructor.SingletonCtorDelegation.cartesian$delegation$_, 0.0, 0.0);
    }
    private static final .com.redhat.ceylon.compiler.java.test.structure.constructor.SingletonCtorDelegation origin;
    static {
        origin = new SingletonCtorDelegation((.com.redhat.ceylon.compiler.java.test.structure.constructor.SingletonCtorDelegation.origin_)null);
    }
    
    public static final .com.redhat.ceylon.compiler.java.test.structure.constructor.SingletonCtorDelegation getSingletonCtorDelegation$origin() {
        return .com.redhat.ceylon.compiler.java.test.structure.constructor.SingletonCtorDelegation.origin;
    }
    
    private static final class oneone_ {
        
        oneone_() {
        }
    }
    
    private SingletonCtorDelegation(.com.redhat.ceylon.compiler.java.test.structure.constructor.SingletonCtorDelegation.oneone_ $name$) {
        this(.com.redhat.ceylon.compiler.java.test.structure.constructor.SingletonCtorDelegation.cartesian$delegation$_, 1.0, 1.0);
    }
    private static final .com.redhat.ceylon.compiler.java.test.structure.constructor.SingletonCtorDelegation oneone;
    static {
        oneone = new SingletonCtorDelegation((.com.redhat.ceylon.compiler.java.test.structure.constructor.SingletonCtorDelegation.oneone_)null);
    }
    
    public static final .com.redhat.ceylon.compiler.java.test.structure.constructor.SingletonCtorDelegation getSingletonCtorDelegation$oneone() {
        return .com.redhat.ceylon.compiler.java.test.structure.constructor.SingletonCtorDelegation.oneone;
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.structure.constructor.SingletonCtorDelegation.$TypeDescriptor$;
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.constructor.SingletonCtorDelegation.class);
    
    private final .java.lang.Object writeReplace() {
        final .java.lang.String $name$;
        if (this == oneone) {
            $name$ = "getSingletonCtorDelegation$oneone";
        } else if (this == origin) {
            $name$ = "getSingletonCtorDelegation$origin";
        } else return this;
        return new .com.redhat.ceylon.compiler.java.language.SerializationProxy(.com.redhat.ceylon.compiler.java.test.structure.constructor.SingletonCtorDelegation.class, $name$);
    }
}
class SingletonCtorAbstractDelegation implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    protected SingletonCtorAbstractDelegation() {
        super();
        this.x = 0.0;
        this.y = 0.0;
    }
    private final double x;
    
    public final double getX() {
        return this.x;
    }
    private final double y;
    
    public final double getY() {
        return this.y;
    }
    private static final .com.redhat.ceylon.compiler.java.test.structure.constructor.SingletonCtorAbstractDelegation.point_ point_ = null;
    
    private static final class point_ {
        
        point_() {
        }
    }
    
    private SingletonCtorAbstractDelegation(.com.redhat.ceylon.compiler.java.test.structure.constructor.SingletonCtorAbstractDelegation.point_ $name$, final double x$param$, final double y$param$) {
        this.x = x$param$;
        this.y = y$param$;
    }
    
    private static final class origin_ {
        
        origin_() {
        }
    }
    
    private SingletonCtorAbstractDelegation(.com.redhat.ceylon.compiler.java.test.structure.constructor.SingletonCtorAbstractDelegation.origin_ $name$) {
        this(.com.redhat.ceylon.compiler.java.test.structure.constructor.SingletonCtorAbstractDelegation.point_, 0.0, 0.0);
    }
    private static final .com.redhat.ceylon.compiler.java.test.structure.constructor.SingletonCtorAbstractDelegation origin;
    static {
        origin = new SingletonCtorAbstractDelegation((.com.redhat.ceylon.compiler.java.test.structure.constructor.SingletonCtorAbstractDelegation.origin_)null);
    }
    
    public static final .com.redhat.ceylon.compiler.java.test.structure.constructor.SingletonCtorAbstractDelegation getSingletonCtorAbstractDelegation$origin() {
        return .com.redhat.ceylon.compiler.java.test.structure.constructor.SingletonCtorAbstractDelegation.origin;
    }
    
    private static final class oneone_ {
        
        oneone_() {
        }
    }
    
    private SingletonCtorAbstractDelegation(.com.redhat.ceylon.compiler.java.test.structure.constructor.SingletonCtorAbstractDelegation.oneone_ $name$) {
        this(.com.redhat.ceylon.compiler.java.test.structure.constructor.SingletonCtorAbstractDelegation.point_, 1.0, 1.0);
    }
    private static final .com.redhat.ceylon.compiler.java.test.structure.constructor.SingletonCtorAbstractDelegation oneone;
    static {
        oneone = new SingletonCtorAbstractDelegation((.com.redhat.ceylon.compiler.java.test.structure.constructor.SingletonCtorAbstractDelegation.oneone_)null);
    }
    
    public static final .com.redhat.ceylon.compiler.java.test.structure.constructor.SingletonCtorAbstractDelegation getSingletonCtorAbstractDelegation$oneone() {
        return .com.redhat.ceylon.compiler.java.test.structure.constructor.SingletonCtorAbstractDelegation.oneone;
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.structure.constructor.SingletonCtorAbstractDelegation.$TypeDescriptor$;
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.constructor.SingletonCtorAbstractDelegation.class);
    
    private final .java.lang.Object writeReplace() {
        final .java.lang.String $name$;
        if (this == oneone) {
            $name$ = "getSingletonCtorAbstractDelegation$oneone";
        } else if (this == origin) {
            $name$ = "getSingletonCtorAbstractDelegation$origin";
        } else return this;
        return new .com.redhat.ceylon.compiler.java.language.SerializationProxy(.com.redhat.ceylon.compiler.java.test.structure.constructor.SingletonCtorAbstractDelegation.class, $name$);
    }
}
@.com.redhat.ceylon.compiler.java.metadata.Ceylon(
        major = 8,
        minor = 1)
@.com.redhat.ceylon.compiler.java.metadata.Method
public final class singletonCtorDelegation_ {
    
    private singletonCtorDelegation_() {
    }
    
    @.ceylon.language.SharedAnnotation$annotation$
    public static void singletonCtorDelegation() {
        .com.redhat.ceylon.compiler.java.test.structure.constructor.SingletonCtorDelegation lhs$0 = .com.redhat.ceylon.compiler.java.test.structure.constructor.SingletonCtorDelegation.getSingletonCtorDelegation$origin();
        .com.redhat.ceylon.compiler.java.test.structure.constructor.SingletonCtorDelegation rhs$1 = .com.redhat.ceylon.compiler.java.test.structure.constructor.SingletonCtorDelegation.getSingletonCtorDelegation$origin();
        if (lhs$0.equals(rhs$1)) {
        } else {
            throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tviolated " + "SingletonCtorDelegation.origin == SingletonCtorDelegation.origin") + .com.redhat.ceylon.compiler.java.Util.assertBinOpFailed(lhs$0, rhs$1));
        }
        .com.redhat.ceylon.compiler.java.test.structure.constructor.SingletonCtorDelegation lhs$2 = .com.redhat.ceylon.compiler.java.test.structure.constructor.SingletonCtorDelegation.getSingletonCtorDelegation$oneone();
        .com.redhat.ceylon.compiler.java.test.structure.constructor.SingletonCtorDelegation rhs$3 = .com.redhat.ceylon.compiler.java.test.structure.constructor.SingletonCtorDelegation.getSingletonCtorDelegation$oneone();
        if (lhs$2.equals(rhs$3)) {
        } else {
            throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tviolated " + "SingletonCtorDelegation.oneone == SingletonCtorDelegation.oneone") + .com.redhat.ceylon.compiler.java.Util.assertBinOpFailed(lhs$2, rhs$3));
        }
        double lhs$4 = 1.0;
        double rhs$5 = .com.redhat.ceylon.compiler.java.test.structure.constructor.SingletonCtorDelegation.getSingletonCtorDelegation$oneone().getX();
        if (lhs$4 == rhs$5) {
        } else {
            throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tviolated " + "1.0 == SingletonCtorDelegation.oneone.x") + .com.redhat.ceylon.compiler.java.Util.assertBinOpFailed(.ceylon.language.Float.instance(lhs$4), .ceylon.language.Float.instance(rhs$5)));
        }
        double lhs$6 = 1.0;
        double rhs$7 = .com.redhat.ceylon.compiler.java.test.structure.constructor.SingletonCtorDelegation.getSingletonCtorDelegation$oneone().getY();
        if (lhs$6 == rhs$7) {
        } else {
            throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tviolated " + "1.0 == SingletonCtorDelegation.oneone.y") + .com.redhat.ceylon.compiler.java.Util.assertBinOpFailed(.ceylon.language.Float.instance(lhs$6), .ceylon.language.Float.instance(rhs$7)));
        }
        .com.redhat.ceylon.compiler.java.test.structure.constructor.SingletonCtorAbstractDelegation lhs$8 = .com.redhat.ceylon.compiler.java.test.structure.constructor.SingletonCtorAbstractDelegation.getSingletonCtorAbstractDelegation$origin();
        .com.redhat.ceylon.compiler.java.test.structure.constructor.SingletonCtorAbstractDelegation rhs$9 = .com.redhat.ceylon.compiler.java.test.structure.constructor.SingletonCtorAbstractDelegation.getSingletonCtorAbstractDelegation$origin();
        if (lhs$8.equals(rhs$9)) {
        } else {
            throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tviolated " + "SingletonCtorAbstractDelegation.origin == SingletonCtorAbstractDelegation.origin") + .com.redhat.ceylon.compiler.java.Util.assertBinOpFailed(lhs$8, rhs$9));
        }
        .com.redhat.ceylon.compiler.java.test.structure.constructor.SingletonCtorAbstractDelegation lhs$10 = .com.redhat.ceylon.compiler.java.test.structure.constructor.SingletonCtorAbstractDelegation.getSingletonCtorAbstractDelegation$oneone();
        .com.redhat.ceylon.compiler.java.test.structure.constructor.SingletonCtorAbstractDelegation rhs$11 = .com.redhat.ceylon.compiler.java.test.structure.constructor.SingletonCtorAbstractDelegation.getSingletonCtorAbstractDelegation$oneone();
        if (lhs$10.equals(rhs$11)) {
        } else {
            throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tviolated " + "SingletonCtorAbstractDelegation.oneone == SingletonCtorAbstractDelegation.oneone") + .com.redhat.ceylon.compiler.java.Util.assertBinOpFailed(lhs$10, rhs$11));
        }
        double lhs$12 = 1.0;
        double rhs$13 = .com.redhat.ceylon.compiler.java.test.structure.constructor.SingletonCtorAbstractDelegation.getSingletonCtorAbstractDelegation$oneone().getX();
        if (lhs$12 == rhs$13) {
        } else {
            throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tviolated " + "1.0 == SingletonCtorAbstractDelegation.oneone.x") + .com.redhat.ceylon.compiler.java.Util.assertBinOpFailed(.ceylon.language.Float.instance(lhs$12), .ceylon.language.Float.instance(rhs$13)));
        }
        double lhs$14 = 1.0;
        double rhs$15 = .com.redhat.ceylon.compiler.java.test.structure.constructor.SingletonCtorAbstractDelegation.getSingletonCtorAbstractDelegation$oneone().getY();
        if (lhs$14 == rhs$15) {
        } else {
            throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tviolated " + "1.0 == SingletonCtorAbstractDelegation.oneone.y") + .com.redhat.ceylon.compiler.java.Util.assertBinOpFailed(.ceylon.language.Float.instance(lhs$14), .ceylon.language.Float.instance(rhs$15)));
        }
    }
    
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public static void main(.java.lang.String[] args) {
        .com.redhat.ceylon.compiler.java.Util.storeArgs(args);
        .com.redhat.ceylon.compiler.java.test.structure.constructor.singletonCtorDelegation_.singletonCtorDelegation();
    }
}